<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LUOYE</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://luoyefe.com/blog/"/>
  <updated>2023-05-24T09:56:27.597Z</updated>
  <id>https://luoyefe.com/blog/</id>
  
  <author>
    <name>Luoye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一维码、二维码的生成原理</title>
    <link href="https://luoyefe.com/blog/2021/02/05/%E4%B8%80%E7%BB%B4%E7%A0%81%E3%80%81%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%9A%84%E7%94%9F%E6%88%90%E5%8E%9F%E7%90%86/"/>
    <id>https://luoyefe.com/blog/2021/02/05/一维码、二维码的生成原理/</id>
    <published>2021-02-05T08:15:00.000Z</published>
    <updated>2023-05-24T09:56:27.597Z</updated>
    
    <content type="html"><![CDATA[<p>讲一讲一维码、二维码的生成原理，长文预警！</p><h2 id="一维码"><a href="#一维码" class="headerlink" title="一维码"></a>一维码</h2><p>barcode 白皮书：<a href="https://www.barcodefaq.com/1d/code-128/" target="_blank" rel="external">https://www.barcodefaq.com/1d/code-128/</a></p><p>一维码即条形码，由多个黑白条纹组成，基本原理就是通过二进制表示各个 ASCII 字符，以最常见最通用的 code128-B 码制为例（code128 可以表示全部的128个 ASCII 字符）</p><blockquote><p>UPC 码制是国际商品条码标准，这里不讨论商品码生成的规则，下文的条形码示例用微信、支付宝的扫码工具无法识别（微信、支付宝识别的是 UPC 码，用于查询商品信息），可以用钉钉扫码测试。</p></blockquote><p>条形码中，黑看做1，白看做0，code128-B 条形码的规律如下：</p><ul><li>由四部分构成，开始符、数据区、校验符、结束符</li><li>开始符固定为：11010010000</li><li>结束符固定为：1100011101011</li><li>校验符计算规则：<code>(104 + (字符在字符串中的索引值 * 字符在 code128 表中的索引)) % 103</code></li></ul><p>以 “biz” 这个字符为例，</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">b</th><th style="text-align:center">i</th><th style="text-align:center">z</th></tr></thead><tbody><tr><td style="text-align:center">字符中的索引</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">code128 表中的索引</td><td style="text-align:center">66</td><td style="text-align:center">73</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">和</td><td style="text-align:center">66</td><td style="text-align:center">146</td><td style="text-align:center">237</td></tr></tbody></table><p>则校验符的索引为：<code>(104 + (66 * 1) + (73 * 2) + (90 * 3)) % 103 = 71</code></p><p>码值对应表：<a href="https://zh.wikipedia.org/wiki/Code128" target="_blank" rel="external">https://zh.wikipedia.org/wiki/Code128</a></p><p>示意图如下：<img src="./1612170845333-812ee425-8dfd-4ae1-a386-dc99af6c53a5.png" alt="条形码.png"></p><p>伪代码呼之欲出：</p><pre><code class="line-numbers language-javascript">function barcodeEncode(value) {    // code 128 共有 107 个字符，具体列表可查看 https://zh.wikipedia.org/wiki/Code128  const BARS = [    11011001100, 11001101100, 11001100110, 10010011000, 10010001100,    10001001100, 10011001000, 10011000100, 10001100100, 11001001000,    11001000100, 11000100100, 10110011100, 10011011100, 10011001110,    10111001100, 10011101100, 10011100110, 11001110010, 11001011100,    11001001110, 11011100100, 11001110100, 11101101110, 11101001100,    11100101100, 11100100110, 11101100100, 11100110100, 11100110010,    11011011000, 11011000110, 11000110110, 10100011000, 10001011000,    10001000110, 10110001000, 10001101000, 10001100010, 11010001000,    11000101000, 11000100010, 10110111000, 10110001110, 10001101110,    10111011000, 10111000110, 10001110110, 11101110110, 11010001110,    11000101110, 11011101000, 11011100010, 11011101110, 11101011000,    11101000110, 11100010110, 11101101000, 11101100010, 11100011010,    11101111010, 11001000010, 11110001010, 10100110000, 10100001100,    10010110000, 10010000110, 10000101100, 10000100110, 10110010000,    10110000100, 10011010000, 10011000010, 10000110100, 10000110010,    11000010010, 11001010000, 11110111010, 11000010100, 10001111010,    10100111100, 10010111100, 10010011110, 10111100100, 10011110100,    10011110010, 11110100100, 11110010100, 11110010010, 11011011110,    11011110110, 11110110110, 10101111000, 10100011110, 10001011110,    10111101000, 10111100010, 11110101000, 11110100010, 10111011110,    10111101110, 11101011110, 11110101110, 11010000100, 11010010000,    11010011100, 1100011101011,  ]  const startCharIndex = 104;  const endCharIndex = 106;  // 校验符初始值为开始索引  let checksum = startCharIndex;  const result = [BARS[startCharIndex]];  value.split(&#39;&#39;).forEach((char, index) =&gt; {      const ascii = char.charCodeAt(0);    const barIndex = ascii - 32; // ascii 字符序号与 code128-b 序号的差固定为 32    // 每一位在 BARS 中的索引乘以字符串中的索引    checksum += barIndex * (index + 1)    result.push(BARS[barIndex]);  });  result.push(BARS[checksum % 103]);  result.push(BARS[endCharIndex]);  return result;}barcodeEncode(&#39;1234567890&#39;) // -&gt; [11010010000, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 10011101100, 10100011000, 1100011101011]</code></pre><p>得到二进制的列表后，即可将 0 或 1 按顺序绘制，伪代码如下：</p><pre><code class="line-numbers language-javascript">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;body&gt;  &lt;canvas id=&quot;barcode&quot; /&gt;  &lt;script&gt;    function drawBarcode(canvasEl, barList) {        const ctx = canvasEl.getContext(&#39;2d&#39;);      const barJoinStr = barList.join(&#39;&#39;);      function drawOneBar(type, index) {          const bgColor = type === &#39;0&#39; ? &#39;#ffffff&#39; : &#39;#000000&#39;;        ctx.fillStyle = bgColor;        ctx.fillRect(index * 2, 0, 2, 100)      }      barJoinStr.split(&#39;&#39;).forEach((char, index) =&gt; {          drawOneBar(char, index)      })    }    drawBarcode(document.querySelector(&#39;#barcode&#39;), barcodeEncode(&#39;1234567890&#39;))  &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>得到结果如下：<img src="./1611740908213-c3dbf01c-b202-4fa2-835e-1f8f9669685b.png" alt="image.png"></p><p>DEMO 地址：<a href="https://codesandbox.io/s/javascript-forked-o8sfn" target="_blank" rel="external">https://codesandbox.io/s/javascript-forked-o8sfn</a></p><blockquote><p>PS：以上代码未考虑任何边界情况，如字符合法性的判断、码制的自动选择等，请勿用于生产环境</p></blockquote><p>一维码由条纹构成，所以污损上下一部分后并不影响识别。但是也正因为这个问题，如果有一个条纹被遮挡，整个条形码都无法识别，而且垂直方向的空间被浪费，能表示的信息极为的少</p><p>接下来我们看二维码</p><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><blockquote><p>qrcode 白皮书：<a href="https://www.swisseduc.ch/informatik/theoretische_informatik/qr_codes/docs/qr_standard.pdf" target="_blank" rel="external">https://www.swisseduc.ch/informatik/theoretische_informatik/qr_codes/docs/qr_standard.pdf</a></p></blockquote><p>二维码同样区分各种码制，目前最常用的就是 qrcode，quick response code，快速响应矩阵，我们同样从最常用的码制出发，分析二维码的生成原理</p><h3 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h3><ul><li><strong>版本</strong>：可以简单理解为二维码尺寸<ul><li>最小版本1，尺寸为21*21</li><li>最大版本40，尺寸为177*177</li><li>版本号每加一，尺寸多四格</li></ul></li></ul><p>不同尺寸能够容纳的字符根据容错等级和编码模式确定，容量表如下：</p><table><thead><tr><th style="text-align:center">版本</th><th style="text-align:center">容错等级</th><th style="text-align:center">数字模式</th><th style="text-align:center">字母数字模式</th><th style="text-align:center">字节模式</th><th style="text-align:center">汉字模式</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">L</td><td style="text-align:center">41</td><td style="text-align:center">25</td><td style="text-align:center">17</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">34</td><td style="text-align:center">20</td><td style="text-align:center">14</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">27</td><td style="text-align:center">16</td><td style="text-align:center">11</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">17</td><td style="text-align:center">10</td><td style="text-align:center">7</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">L</td><td style="text-align:center">77</td><td style="text-align:center">47</td><td style="text-align:center">32</td><td style="text-align:center">20</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">63</td><td style="text-align:center">38</td><td style="text-align:center">26</td><td style="text-align:center">16</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">48</td><td style="text-align:center">29</td><td style="text-align:center">20</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">34</td><td style="text-align:center">20</td><td style="text-align:center">14</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">L</td><td style="text-align:center">127</td><td style="text-align:center">77</td><td style="text-align:center">53</td><td style="text-align:center">32</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">101</td><td style="text-align:center">61</td><td style="text-align:center">42</td><td style="text-align:center">26</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">77</td><td style="text-align:center">47</td><td style="text-align:center">32</td><td style="text-align:center">20</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">58</td><td style="text-align:center">35</td><td style="text-align:center">24</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">L</td><td style="text-align:center">187</td><td style="text-align:center">114</td><td style="text-align:center">78</td><td style="text-align:center">48</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">149</td><td style="text-align:center">90</td><td style="text-align:center">62</td><td style="text-align:center">38</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">111</td><td style="text-align:center">67</td><td style="text-align:center">46</td><td style="text-align:center">28</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">82</td><td style="text-align:center">50</td><td style="text-align:center">34</td><td style="text-align:center">21</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">L</td><td style="text-align:center">255</td><td style="text-align:center">154</td><td style="text-align:center">106</td><td style="text-align:center">65</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">202</td><td style="text-align:center">122</td><td style="text-align:center">84</td><td style="text-align:center">52</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">144</td><td style="text-align:center">87</td><td style="text-align:center">60</td><td style="text-align:center">37</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">106</td><td style="text-align:center">64</td><td style="text-align:center">44</td><td style="text-align:center">27</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">L</td><td style="text-align:center">322</td><td style="text-align:center">195</td><td style="text-align:center">134</td><td style="text-align:center">82</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">255</td><td style="text-align:center">154</td><td style="text-align:center">106</td><td style="text-align:center">65</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">178</td><td style="text-align:center">108</td><td style="text-align:center">74</td><td style="text-align:center">45</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">139</td><td style="text-align:center">84</td><td style="text-align:center">58</td><td style="text-align:center">36</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">L</td><td style="text-align:center">370</td><td style="text-align:center">224</td><td style="text-align:center">154</td><td style="text-align:center">95</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">293</td><td style="text-align:center">178</td><td style="text-align:center">122</td><td style="text-align:center">75</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">207</td><td style="text-align:center">125</td><td style="text-align:center">86</td><td style="text-align:center">53</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">154</td><td style="text-align:center">93</td><td style="text-align:center">64</td><td style="text-align:center">39</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">L</td><td style="text-align:center">461</td><td style="text-align:center">279</td><td style="text-align:center">192</td><td style="text-align:center">118</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">365</td><td style="text-align:center">221</td><td style="text-align:center">152</td><td style="text-align:center">93</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">259</td><td style="text-align:center">157</td><td style="text-align:center">108</td><td style="text-align:center">66</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">202</td><td style="text-align:center">122</td><td style="text-align:center">84</td><td style="text-align:center">52</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">L</td><td style="text-align:center">552</td><td style="text-align:center">335</td><td style="text-align:center">230</td><td style="text-align:center">141</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">432</td><td style="text-align:center">262</td><td style="text-align:center">180</td><td style="text-align:center">111</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">312</td><td style="text-align:center">189</td><td style="text-align:center">130</td><td style="text-align:center">80</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">235</td><td style="text-align:center">143</td><td style="text-align:center">98</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">L</td><td style="text-align:center">652</td><td style="text-align:center">395</td><td style="text-align:center">271</td><td style="text-align:center">167</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">513</td><td style="text-align:center">311</td><td style="text-align:center">213</td><td style="text-align:center">131</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">364</td><td style="text-align:center">221</td><td style="text-align:center">151</td><td style="text-align:center">93</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">288</td><td style="text-align:center">174</td><td style="text-align:center">119</td><td style="text-align:center">74</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">L</td><td style="text-align:center">772</td><td style="text-align:center">468</td><td style="text-align:center">321</td><td style="text-align:center">198</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">604</td><td style="text-align:center">366</td><td style="text-align:center">251</td><td style="text-align:center">155</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">427</td><td style="text-align:center">259</td><td style="text-align:center">177</td><td style="text-align:center">109</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">331</td><td style="text-align:center">200</td><td style="text-align:center">137</td><td style="text-align:center">85</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">L</td><td style="text-align:center">883</td><td style="text-align:center">535</td><td style="text-align:center">367</td><td style="text-align:center">226</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">691</td><td style="text-align:center">419</td><td style="text-align:center">287</td><td style="text-align:center">177</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">489</td><td style="text-align:center">296</td><td style="text-align:center">203</td><td style="text-align:center">125</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">374</td><td style="text-align:center">227</td><td style="text-align:center">155</td><td style="text-align:center">96</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">L</td><td style="text-align:center">1022</td><td style="text-align:center">619</td><td style="text-align:center">425</td><td style="text-align:center">262</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">796</td><td style="text-align:center">483</td><td style="text-align:center">331</td><td style="text-align:center">204</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">580</td><td style="text-align:center">352</td><td style="text-align:center">241</td><td style="text-align:center">149</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">427</td><td style="text-align:center">259</td><td style="text-align:center">177</td><td style="text-align:center">109</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">L</td><td style="text-align:center">1101</td><td style="text-align:center">667</td><td style="text-align:center">458</td><td style="text-align:center">282</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">871</td><td style="text-align:center">528</td><td style="text-align:center">362</td><td style="text-align:center">223</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">621</td><td style="text-align:center">376</td><td style="text-align:center">258</td><td style="text-align:center">159</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">468</td><td style="text-align:center">283</td><td style="text-align:center">194</td><td style="text-align:center">120</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">L</td><td style="text-align:center">1250</td><td style="text-align:center">758</td><td style="text-align:center">520</td><td style="text-align:center">320</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">991</td><td style="text-align:center">600</td><td style="text-align:center">412</td><td style="text-align:center">254</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">703</td><td style="text-align:center">426</td><td style="text-align:center">292</td><td style="text-align:center">180</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">530</td><td style="text-align:center">321</td><td style="text-align:center">220</td><td style="text-align:center">136</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">L</td><td style="text-align:center">1408</td><td style="text-align:center">854</td><td style="text-align:center">586</td><td style="text-align:center">361</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1082</td><td style="text-align:center">656</td><td style="text-align:center">450</td><td style="text-align:center">277</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">775</td><td style="text-align:center">470</td><td style="text-align:center">322</td><td style="text-align:center">198</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">602</td><td style="text-align:center">365</td><td style="text-align:center">250</td><td style="text-align:center">154</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">L</td><td style="text-align:center">1548</td><td style="text-align:center">938</td><td style="text-align:center">644</td><td style="text-align:center">397</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1212</td><td style="text-align:center">734</td><td style="text-align:center">504</td><td style="text-align:center">310</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">876</td><td style="text-align:center">531</td><td style="text-align:center">364</td><td style="text-align:center">224</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">674</td><td style="text-align:center">408</td><td style="text-align:center">280</td><td style="text-align:center">173</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">L</td><td style="text-align:center">1725</td><td style="text-align:center">1046</td><td style="text-align:center">718</td><td style="text-align:center">442</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1346</td><td style="text-align:center">816</td><td style="text-align:center">560</td><td style="text-align:center">345</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">948</td><td style="text-align:center">574</td><td style="text-align:center">394</td><td style="text-align:center">243</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">746</td><td style="text-align:center">452</td><td style="text-align:center">310</td><td style="text-align:center">191</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">L</td><td style="text-align:center">1903</td><td style="text-align:center">1153</td><td style="text-align:center">792</td><td style="text-align:center">488</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1500</td><td style="text-align:center">909</td><td style="text-align:center">624</td><td style="text-align:center">384</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1063</td><td style="text-align:center">644</td><td style="text-align:center">442</td><td style="text-align:center">272</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">813</td><td style="text-align:center">493</td><td style="text-align:center">338</td><td style="text-align:center">208</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">L</td><td style="text-align:center">2061</td><td style="text-align:center">1249</td><td style="text-align:center">858</td><td style="text-align:center">528</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1600</td><td style="text-align:center">970</td><td style="text-align:center">666</td><td style="text-align:center">410</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1159</td><td style="text-align:center">702</td><td style="text-align:center">482</td><td style="text-align:center">297</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">919</td><td style="text-align:center">557</td><td style="text-align:center">382</td><td style="text-align:center">235</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">L</td><td style="text-align:center">2232</td><td style="text-align:center">1352</td><td style="text-align:center">929</td><td style="text-align:center">572</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1708</td><td style="text-align:center">1035</td><td style="text-align:center">711</td><td style="text-align:center">438</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1224</td><td style="text-align:center">742</td><td style="text-align:center">509</td><td style="text-align:center">314</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">969</td><td style="text-align:center">587</td><td style="text-align:center">403</td><td style="text-align:center">248</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">L</td><td style="text-align:center">2409</td><td style="text-align:center">1460</td><td style="text-align:center">1003</td><td style="text-align:center">618</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">1872</td><td style="text-align:center">1134</td><td style="text-align:center">779</td><td style="text-align:center">480</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1358</td><td style="text-align:center">823</td><td style="text-align:center">565</td><td style="text-align:center">348</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1056</td><td style="text-align:center">640</td><td style="text-align:center">439</td><td style="text-align:center">270</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">L</td><td style="text-align:center">2620</td><td style="text-align:center">1588</td><td style="text-align:center">1091</td><td style="text-align:center">672</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">2059</td><td style="text-align:center">1248</td><td style="text-align:center">857</td><td style="text-align:center">528</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1468</td><td style="text-align:center">890</td><td style="text-align:center">611</td><td style="text-align:center">376</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1108</td><td style="text-align:center">672</td><td style="text-align:center">461</td><td style="text-align:center">284</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">L</td><td style="text-align:center">2812</td><td style="text-align:center">1704</td><td style="text-align:center">1171</td><td style="text-align:center">721</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">2188</td><td style="text-align:center">1326</td><td style="text-align:center">911</td><td style="text-align:center">561</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1588</td><td style="text-align:center">963</td><td style="text-align:center">661</td><td style="text-align:center">407</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1228</td><td style="text-align:center">744</td><td style="text-align:center">511</td><td style="text-align:center">315</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">L</td><td style="text-align:center">3057</td><td style="text-align:center">1853</td><td style="text-align:center">1273</td><td style="text-align:center">784</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">2395</td><td style="text-align:center">1451</td><td style="text-align:center">997</td><td style="text-align:center">614</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1718</td><td style="text-align:center">1041</td><td style="text-align:center">715</td><td style="text-align:center">440</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1286</td><td style="text-align:center">779</td><td style="text-align:center">535</td><td style="text-align:center">330</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">L</td><td style="text-align:center">3283</td><td style="text-align:center">1990</td><td style="text-align:center">1367</td><td style="text-align:center">842</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">2544</td><td style="text-align:center">1542</td><td style="text-align:center">1059</td><td style="text-align:center">652</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1804</td><td style="text-align:center">1094</td><td style="text-align:center">751</td><td style="text-align:center">462</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1425</td><td style="text-align:center">864</td><td style="text-align:center">593</td><td style="text-align:center">365</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">L</td><td style="text-align:center">3517</td><td style="text-align:center">2132</td><td style="text-align:center">1465</td><td style="text-align:center">902</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">2701</td><td style="text-align:center">1637</td><td style="text-align:center">1125</td><td style="text-align:center">692</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">1933</td><td style="text-align:center">1172</td><td style="text-align:center">805</td><td style="text-align:center">496</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1501</td><td style="text-align:center">910</td><td style="text-align:center">625</td><td style="text-align:center">385</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">L</td><td style="text-align:center">3669</td><td style="text-align:center">2223</td><td style="text-align:center">1528</td><td style="text-align:center">940</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">2857</td><td style="text-align:center">1732</td><td style="text-align:center">1190</td><td style="text-align:center">732</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2085</td><td style="text-align:center">1263</td><td style="text-align:center">868</td><td style="text-align:center">534</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1581</td><td style="text-align:center">958</td><td style="text-align:center">658</td><td style="text-align:center">405</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">L</td><td style="text-align:center">3909</td><td style="text-align:center">2369</td><td style="text-align:center">1628</td><td style="text-align:center">1002</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">3035</td><td style="text-align:center">1839</td><td style="text-align:center">1264</td><td style="text-align:center">778</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2181</td><td style="text-align:center">1322</td><td style="text-align:center">908</td><td style="text-align:center">559</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1677</td><td style="text-align:center">1016</td><td style="text-align:center">698</td><td style="text-align:center">430</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">L</td><td style="text-align:center">4158</td><td style="text-align:center">2520</td><td style="text-align:center">1732</td><td style="text-align:center">1066</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">3289</td><td style="text-align:center">1994</td><td style="text-align:center">1370</td><td style="text-align:center">843</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2358</td><td style="text-align:center">1429</td><td style="text-align:center">982</td><td style="text-align:center">604</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1782</td><td style="text-align:center">1080</td><td style="text-align:center">742</td><td style="text-align:center">457</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">L</td><td style="text-align:center">4417</td><td style="text-align:center">2677</td><td style="text-align:center">1840</td><td style="text-align:center">1132</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">3486</td><td style="text-align:center">2113</td><td style="text-align:center">1452</td><td style="text-align:center">894</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2473</td><td style="text-align:center">1499</td><td style="text-align:center">1030</td><td style="text-align:center">634</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">1897</td><td style="text-align:center">1150</td><td style="text-align:center">790</td><td style="text-align:center">486</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">L</td><td style="text-align:center">4686</td><td style="text-align:center">2840</td><td style="text-align:center">1952</td><td style="text-align:center">1201</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">3693</td><td style="text-align:center">2238</td><td style="text-align:center">1538</td><td style="text-align:center">947</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2670</td><td style="text-align:center">1618</td><td style="text-align:center">1112</td><td style="text-align:center">684</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2022</td><td style="text-align:center">1226</td><td style="text-align:center">842</td><td style="text-align:center">518</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">L</td><td style="text-align:center">4965</td><td style="text-align:center">3009</td><td style="text-align:center">2068</td><td style="text-align:center">1273</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">3909</td><td style="text-align:center">2369</td><td style="text-align:center">1628</td><td style="text-align:center">1002</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2805</td><td style="text-align:center">1700</td><td style="text-align:center">1168</td><td style="text-align:center">719</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2157</td><td style="text-align:center">1307</td><td style="text-align:center">898</td><td style="text-align:center">553</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">L</td><td style="text-align:center">5253</td><td style="text-align:center">3183</td><td style="text-align:center">2188</td><td style="text-align:center">1347</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">4134</td><td style="text-align:center">2506</td><td style="text-align:center">1722</td><td style="text-align:center">1060</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">2949</td><td style="text-align:center">1787</td><td style="text-align:center">1228</td><td style="text-align:center">756</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2301</td><td style="text-align:center">1394</td><td style="text-align:center">958</td><td style="text-align:center">590</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center">L</td><td style="text-align:center">5529</td><td style="text-align:center">3351</td><td style="text-align:center">2303</td><td style="text-align:center">1417</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">4343</td><td style="text-align:center">2632</td><td style="text-align:center">1809</td><td style="text-align:center">1113</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">3081</td><td style="text-align:center">1867</td><td style="text-align:center">1283</td><td style="text-align:center">790</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2361</td><td style="text-align:center">1431</td><td style="text-align:center">983</td><td style="text-align:center">605</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center">L</td><td style="text-align:center">5836</td><td style="text-align:center">3537</td><td style="text-align:center">2431</td><td style="text-align:center">1496</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">4588</td><td style="text-align:center">2780</td><td style="text-align:center">1911</td><td style="text-align:center">1176</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">3244</td><td style="text-align:center">1966</td><td style="text-align:center">1351</td><td style="text-align:center">832</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2524</td><td style="text-align:center">1530</td><td style="text-align:center">1051</td><td style="text-align:center">647</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center">L</td><td style="text-align:center">6153</td><td style="text-align:center">3729</td><td style="text-align:center">2563</td><td style="text-align:center">1577</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">4775</td><td style="text-align:center">2894</td><td style="text-align:center">1989</td><td style="text-align:center">1224</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">3417</td><td style="text-align:center">2071</td><td style="text-align:center">1423</td><td style="text-align:center">876</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2625</td><td style="text-align:center">1591</td><td style="text-align:center">1093</td><td style="text-align:center">673</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center">L</td><td style="text-align:center">6479</td><td style="text-align:center">3927</td><td style="text-align:center">2699</td><td style="text-align:center">1661</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">5039</td><td style="text-align:center">3054</td><td style="text-align:center">2099</td><td style="text-align:center">1292</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">3599</td><td style="text-align:center">2181</td><td style="text-align:center">1499</td><td style="text-align:center">923</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2735</td><td style="text-align:center">1658</td><td style="text-align:center">1139</td><td style="text-align:center">701</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center">L</td><td style="text-align:center">6743</td><td style="text-align:center">4087</td><td style="text-align:center">2809</td><td style="text-align:center">1729</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">5313</td><td style="text-align:center">3220</td><td style="text-align:center">2213</td><td style="text-align:center">1362</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">3791</td><td style="text-align:center">2298</td><td style="text-align:center">1579</td><td style="text-align:center">972</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">2927</td><td style="text-align:center">1774</td><td style="text-align:center">1219</td><td style="text-align:center">750</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center">L</td><td style="text-align:center">7089</td><td style="text-align:center">4296</td><td style="text-align:center">2953</td><td style="text-align:center">1817</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">M</td><td style="text-align:center">5596</td><td style="text-align:center">3391</td><td style="text-align:center">2331</td><td style="text-align:center">1435</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Q</td><td style="text-align:center">3993</td><td style="text-align:center">2420</td><td style="text-align:center">1663</td><td style="text-align:center">1024</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">H</td><td style="text-align:center">3057</td><td style="text-align:center">1852</td><td style="text-align:center">1273</td><td style="text-align:center">784</td></tr></tbody></table><ul><li><strong>容错等级</strong>：二维码有极大的容错能力，根据可污损面积，有不同的容错等级</li></ul><table><thead><tr><th style="text-align:center">容错等级</th><th style="text-align:center">可污损面积</th></tr></thead><tbody><tr><td style="text-align:center">L</td><td style="text-align:center">7%</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">15%</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">25%</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">30%</td></tr></tbody></table><ul><li><p><strong>掩码模式</strong>：共八种，根据特定规则更改方块的颜色（黑改白 or 白改黑），便于扫码器识别</p></li><li><p><strong>纠错算法</strong>：核心是<strong>里德-所罗门码</strong>，经过计算后的字符串，即使丢失某些字符，依旧可以计算出整个字符的原始值</p></li></ul><h3 id="基本构成"><a href="#基本构成" class="headerlink" title="基本构成"></a>基本构成</h3><p>二维码各个区域分为功能区和数据区，先看下二维码图案的基本构成：</p><p><img src="./1611913183757-4f727bed-2eca-48b2-b3bf-254cd2418395.png" alt="二维码基本构成.png"></p><p>二维码版本号大于7，即尺寸大于45*45后，需增加版本信息加快识别速度，如下：</p><p><img src="./1611891049226-6f6e2e91-6e02-41b5-b9e6-877f96fbbebb.png" alt="二维码 45*45.png"></p><h4 id="定位区"><a href="#定位区" class="headerlink" title="定位区"></a>定位区</h4><p>7*7 的回字形图案，分布在左上、右上、左下<img src="./1611887717818-331ced4f-23f9-45a9-bb4f-b948399476be.png" alt="定位区.png"></p><h4 id="分隔区"><a href="#分隔区" class="headerlink" title="分隔区"></a>分隔区</h4><p>围绕定位区的图案，白色</p><h4 id="时序信息"><a href="#时序信息" class="headerlink" title="时序信息"></a>时序信息</h4><p>两条从第七列或第七排开始，黑白交替，黑色开始，黑色结束的图案，用于告知扫码器识别的顺序</p><h4 id="矫正区"><a href="#矫正区" class="headerlink" title="矫正区"></a>矫正区</h4><p>5*5 的回字形图案，用于扫码器加快定位速度</p><p><img src="./1611887965265-8dbf39e2-5d00-46dd-aae1-742f2754223a.png" alt="矫正区.png"></p><p>版本号大于等于2，需要增加矫正区，版本号越多矫正区越多，各个版本号对应的矫正区中心点坐标如下：</p><table><thead><tr><th style="text-align:center">版本</th><th style="text-align:center">中心点坐标</th><th>左上为 (0,0)</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:center">2</td><td style="text-align:center">6</td><td>18</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">6</td><td>22</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">6</td><td>26</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">6</td><td>30</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">6</td><td>34</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">6</td><td>22</td><td>38</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">6</td><td>24</td><td>42</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">6</td><td>26</td><td>46</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">6</td><td>28</td><td>50</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">6</td><td>30</td><td>54</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">6</td><td>32</td><td>58</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">6</td><td>34</td><td>62</td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">6</td><td>26</td><td>46</td><td>66</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">6</td><td>26</td><td>48</td><td>70</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">6</td><td>26</td><td>50</td><td>74</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">6</td><td>30</td><td>54</td><td>78</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">6</td><td>30</td><td>56</td><td>82</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">6</td><td>30</td><td>58</td><td>86</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">6</td><td>34</td><td>62</td><td>90</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">6</td><td>28</td><td>50</td><td>72</td><td>94</td><td></td><td></td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">6</td><td>26</td><td>50</td><td>74</td><td>98</td><td></td><td></td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">6</td><td>30</td><td>54</td><td>78</td><td>102</td><td></td><td></td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">6</td><td>28</td><td>54</td><td>80</td><td>106</td><td></td><td></td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">6</td><td>32</td><td>58</td><td>84</td><td>110</td><td></td><td></td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">6</td><td>30</td><td>58</td><td>86</td><td>114</td><td></td><td></td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">6</td><td>34</td><td>62</td><td>90</td><td>118</td><td></td><td></td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">6</td><td>26</td><td>50</td><td>74</td><td>98</td><td>122</td><td></td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">6</td><td>30</td><td>54</td><td>78</td><td>102</td><td>126</td><td></td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">6</td><td>26</td><td>52</td><td>78</td><td>104</td><td>130</td><td></td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">6</td><td>30</td><td>56</td><td>82</td><td>108</td><td>134</td><td></td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">6</td><td>34</td><td>60</td><td>86</td><td>112</td><td>138</td><td></td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">6</td><td>30</td><td>58</td><td>86</td><td>114</td><td>142</td><td></td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">6</td><td>34</td><td>62</td><td>90</td><td>118</td><td>146</td><td></td></tr><tr><td style="text-align:center">35</td><td style="text-align:center">6</td><td>30</td><td>54</td><td>78</td><td>102</td><td>126</td><td>150</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center">6</td><td>24</td><td>50</td><td>76</td><td>102</td><td>128</td><td>154</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center">6</td><td>28</td><td>54</td><td>80</td><td>106</td><td>132</td><td>158</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center">6</td><td>32</td><td>58</td><td>84</td><td>110</td><td>136</td><td>162</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center">6</td><td>26</td><td>54</td><td>82</td><td>110</td><td>138</td><td>166</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center">6</td><td>30</td><td>58</td><td>86</td><td>114</td><td>142</td><td>170</td></tr></tbody></table><p>以版本号7为例，中心点坐标为 6 | 22 | 38，则需要 (6,6) (6,22) (6,38) (22,6) (22,22) (22,38) (38,6) (38,22) (38,38) 共九个矫正区，但实际绘制时，如果和定位区重叠，则不绘制此矫正区，如下：<img src="./1611891820243-712945d8-b3d6-405c-82cc-1f7c9a6f8dca.png" alt="编组 8.png"></p><h4 id="格式信息"><a href="#格式信息" class="headerlink" title="格式信息"></a>格式信息</h4><p>用于记录<strong>容错等级、掩码模式</strong>，并且通过<strong>纠错算法</strong>编码后得到<strong>长度为15</strong>的二进制数</p><p>容错等级对应字节：</p><ul><li>L –&gt; <code>01</code> </li><li>M –&gt; <code>00</code> </li><li>Q –&gt; <code>11</code> </li><li>H –&gt; <code>10</code> </li></ul><p>掩码模式，用于对二维码进行“美化”，便于机器识别，共有八种，编码从 1 到 8，比如用 <code>Mask Pattern 4</code> ，格式信息中的掩码模式编码则为 <code>(4).toString(2) = 100</code> </p><p>计算过程：</p><ul><li>容错等级为 L: <code>01</code> </li><li>掩码模式为 4： <code>100</code> </li><li>拼接： <code>01100</code> </li><li>纠错码（计算过程看伪代码）： <code>1000111101</code> </li><li>拼接： <code>011001000111101</code> </li><li>用于异或计算的常量： <code>101010000010010</code> </li><li>异或计算： <code>001010011011100 ^ 101010000010010 = 110011000101111</code> </li></ul><p>伪代码如下：</p><pre><code class="line-numbers language-javascript">// 二进制字符串转十进制异或再转为二进制字符串function xorBinaryString(a, b) {  return (parseInt(a, 2) ^ parseInt(b, 2)).toString(2);}function calcFormatBits(correctLevel = &#39;L&#39;, maskPattern = &#39;4&#39;) {  const correctLevelBitsMap = {    L: &#39;01&#39;, M: &#39;00&#39;,    Q: &#39;11&#39;, H: &#39;10&#39;,  };  // 二维码规范中规定的用于计算格式信息【纠错码】的固定多项式  const errorCorrectionFixedPolynomial = &#39;10100110111&#39;;  // x^10 + x^8 + x^5 + x^4 + x^2 + x + 1  // 二维码规范中规定的用于计算格式信息【最终结果】的固定多项式  const calcResultFixedPolynomial = &#39;101010000010010&#39;; // x^14 + x^12 + x^10 + x^4 + x  // 容错等级  const correctLevelBits = correctLevelBitsMap[correctLevel];  // 掩码模式，补足 3 位  const maskPatternBits = Number(maskPattern).toString(2).padStart(3, &#39;0&#39;);  // 拼接容错等级和掩码模式，右侧补 0 到 15 位，并移除左侧的 0  const originBits = `${correctLevelBits}${maskPatternBits}`.padEnd(15, &#39;0&#39;).replace(/0*/, &#39;&#39;);  // 纠错码计算逻辑  function division(bits) {    const currentFormattedBits = bits;    const currentFormattedBitsLen = currentFormattedBits.length;    // 如果多项式和当前字符串位数不同，多项式右侧补 0 到相同位数    const paddedPolynomial = currentFormattedBitsLen &gt; errorCorrectionFixedPolynomial.length ? errorCorrectionFixedPolynomial.padEnd(currentFormattedBitsLen, &#39;0&#39;) : errorCorrectionFixedPolynomial;    // 当前字符串和多项式进行异或计算，然后移除左侧的 0    const xorResult = xorBinaryString(currentFormattedBits, paddedPolynomial).replace(/0*/, &#39;&#39;);    // 多次计算，直到字符串长度小于等于 10    if (xorResult.length &gt; 10) return division(xorResult);    // 左侧补 0 到 10 位    return xorResult.padStart(10, &#39;0&#39;);  }  // 纠错码  const errorCorrectionCode = division(originBits);  // 容错等级 + 掩码模式 + 纠错码，与多项式进行异或计算，最后左侧补 0 到 15 位  const result = xorBinaryString(`${correctLevelBits}${maskPatternBits}${errorCorrectionCode}`, calcResultFixedPolynomial).padStart(15, &#39;0&#39;);  // console.log(correctLevel, maskPattern, correctLevelBits, maskPatternBits, originBits.padEnd(15, &#39; &#39;), errorCorrectionCode.padEnd(10, &#39; &#39;), result)  return result;}calcFormatBits(&#39;L&#39;, &#39;0&#39;) // -&gt; L 0 01 000 10000000000000  1111010110 111011111000100calcFormatBits(&#39;L&#39;, &#39;1&#39;) // -&gt; L 1 01 001 10010000000000  1011100001 111001011110011calcFormatBits(&#39;L&#39;, &#39;2&#39;) // -&gt; L 2 01 010 10100000000000  0110111000 111110110101010calcFormatBits(&#39;L&#39;, &#39;3&#39;) // -&gt; L 3 01 011 10110000000000  0010001111 111100010011101calcFormatBits(&#39;L&#39;, &#39;4&#39;) // -&gt; L 4 01 100 11000000000000  1000111101 110011000101111calcFormatBits(&#39;L&#39;, &#39;5&#39;) // -&gt; L 5 01 101 11010000000000  1100001010 110001100011000calcFormatBits(&#39;L&#39;, &#39;6&#39;) // -&gt; L 6 01 110 11100000000000  0001010011 110110001000001calcFormatBits(&#39;L&#39;, &#39;7&#39;) // -&gt; L 7 01 111 11110000000000  0101100100 110100101110110calcFormatBits(&#39;M&#39;, &#39;0&#39;) // -&gt; M 0 00 000                 0000000000 101010000010010calcFormatBits(&#39;M&#39;, &#39;1&#39;) // -&gt; M 1 00 001 10000000000     0100110111 101000100100101calcFormatBits(&#39;M&#39;, &#39;2&#39;) // -&gt; M 2 00 010 100000000000    1001101110 101111001111100calcFormatBits(&#39;M&#39;, &#39;3&#39;) // -&gt; M 3 00 011 110000000000    1101011001 101101101001011calcFormatBits(&#39;M&#39;, &#39;4&#39;) // -&gt; M 4 00 100 1000000000000   0111101011 100010111111001calcFormatBits(&#39;M&#39;, &#39;5&#39;) // -&gt; M 5 00 101 1010000000000   0011011100 100000011001110calcFormatBits(&#39;M&#39;, &#39;6&#39;) // -&gt; M 6 00 110 1100000000000   1110000101 100111110010111calcFormatBits(&#39;M&#39;, &#39;7&#39;) // -&gt; M 7 00 111 1110000000000   1010110010 100101010100000calcFormatBits(&#39;Q&#39;, &#39;0&#39;) // -&gt; Q 0 11 000 110000000000000 0101001101 011010101011111calcFormatBits(&#39;Q&#39;, &#39;1&#39;) // -&gt; Q 1 11 001 110010000000000 0001111010 011000001101000calcFormatBits(&#39;Q&#39;, &#39;2&#39;) // -&gt; Q 2 11 010 110100000000000 1100100011 011111100110001calcFormatBits(&#39;Q&#39;, &#39;3&#39;) // -&gt; Q 3 11 011 110110000000000 1000010100 011101000000110calcFormatBits(&#39;Q&#39;, &#39;4&#39;) // -&gt; Q 4 11 100 111000000000000 0010100110 010010010110100calcFormatBits(&#39;Q&#39;, &#39;5&#39;) // -&gt; Q 5 11 101 111010000000000 0110010001 010000110000011calcFormatBits(&#39;Q&#39;, &#39;6&#39;) // -&gt; Q 6 11 110 111100000000000 1011001000 010111011011010calcFormatBits(&#39;Q&#39;, &#39;7&#39;) // -&gt; Q 7 11 111 111110000000000 1111111111 010101111101101calcFormatBits(&#39;H&#39;, &#39;0&#39;) // -&gt; H 0 10 000 100000000000000 1010011011 001011010001001calcFormatBits(&#39;H&#39;, &#39;1&#39;) // -&gt; H 1 10 001 100010000000000 1110101100 001001110111110calcFormatBits(&#39;H&#39;, &#39;2&#39;) // -&gt; H 2 10 010 100100000000000 0011110101 001110011100111calcFormatBits(&#39;H&#39;, &#39;3&#39;) // -&gt; H 3 10 011 100110000000000 0111000010 001100111010000calcFormatBits(&#39;H&#39;, &#39;4&#39;) // -&gt; H 4 10 100 101000000000000 1101110000 000011101100010calcFormatBits(&#39;H&#39;, &#39;5&#39;) // -&gt; H 5 10 101 101010000000000 1001000111 000001001010101calcFormatBits(&#39;H&#39;, &#39;6&#39;) // -&gt; H 6 10 110 101100000000000 0100011110 000110100001100calcFormatBits(&#39;H&#39;, &#39;7&#39;) // -&gt; H 7 10 111 101110000000000 0000101001 000100000111011</code></pre><p>绘制顺序如下：<img src="./1611886481195-cdf04b07-d77e-4cb5-a8cb-b016338c154a.png" alt="格式信息.png"></p><p>结果列表如下（有限值，实际应用可以先行计算完毕直接取用）：</p><table><thead><tr><th style="text-align:center">容错等级</th><th style="text-align:center">掩码模式</th><th style="text-align:center">格式信息</th></tr></thead><tbody><tr><td style="text-align:center">L</td><td style="text-align:center">0</td><td style="text-align:center">111011111000100</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">1</td><td style="text-align:center">111001011110011</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">2</td><td style="text-align:center">111110110101010</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">3</td><td style="text-align:center">111100010011101</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">4</td><td style="text-align:center">110011000101111</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">5</td><td style="text-align:center">110001100011000</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">6</td><td style="text-align:center">110110001000001</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">7</td><td style="text-align:center">110100101110110</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">0</td><td style="text-align:center">101010000010010</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">1</td><td style="text-align:center">101000100100101</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">2</td><td style="text-align:center">101111001111100</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">3</td><td style="text-align:center">101101101001011</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">4</td><td style="text-align:center">100010111111001</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">5</td><td style="text-align:center">100000011001110</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">6</td><td style="text-align:center">100111110010111</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">7</td><td style="text-align:center">100101010100000</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">0</td><td style="text-align:center">011010101011111</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">1</td><td style="text-align:center">011000001101000</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">2</td><td style="text-align:center">011111100110001</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">3</td><td style="text-align:center">011101000000110</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">4</td><td style="text-align:center">010010010110100</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">5</td><td style="text-align:center">010000110000011</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">6</td><td style="text-align:center">010111011011010</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">7</td><td style="text-align:center">010101111101101</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">0</td><td style="text-align:center">001011010001001</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">1</td><td style="text-align:center">001001110111110</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">2</td><td style="text-align:center">001110011100111</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">3</td><td style="text-align:center">001100111010000</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">4</td><td style="text-align:center">000011101100010</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">5</td><td style="text-align:center">000001001010101</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">6</td><td style="text-align:center">000110100001100</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">7</td><td style="text-align:center">000100000111011</td></tr></tbody></table><h4 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h4><p>二维码版本号大于7需要添加版本信息，为<strong>18位二进制数</strong>，组成 3*6 的图案</p><p>计算过程：</p><ul><li>版本号为7：<code>000111</code></li><li>右侧补0到18位，并清楚左侧的0： <code>111000000000000</code> </li><li>纠错码（计算过程看伪代码）：  <code>110010010100</code>    </li><li>拼接：<code>000111110010010100</code></li></ul><p>伪代码如下：</p><pre><code class="line-numbers language-javascript">// 二进制字符串转十进制异或再转为二进制字符串function xorBinaryString(a, b) {  return (parseInt(a, 2) ^ parseInt(b, 2)).toString(2);}function calcVersionBits(version = &#39;7&#39;) {  // 二维码规范中规定的用于计算版本信息【纠错码】的固定多项式  const polynomial = &#39;1111100100101&#39;;  // 版本号，补足 6 位  const versionBits = Number(version).toString(2).padStart(6, &#39;0&#39;);  // 右侧补 0 到 18 位，并移除左侧的 0  const originBits = versionBits.padEnd(18, &#39;0&#39;).replace(/0*/, &#39;&#39;);  // 纠错码计算逻辑  function division(bits) {    const currentFormattedBits = bits;    const currentFormattedBitsLen = currentFormattedBits.length;    // 如果多项式和当前字符串位数不同，多项式右侧补 0 到相同位数    const paddedPolynomial = currentFormattedBitsLen &gt; polynomial.length ? polynomial.padEnd(currentFormattedBitsLen, &#39;0&#39;) : polynomial;    // 当前字符串和多项式进行异或计算，然后移除左侧的 0    const xorResult = xorBinaryString(currentFormattedBits, paddedPolynomial).replace(/0*/, &#39;&#39;);    // 多次计算，直到字符串长度小于等于 12    if (xorResult.length &gt; 12) return division(xorResult);    // 左侧补 0 到 12 位    return xorResult.padStart(12, &#39;0&#39;);  }  // 纠错码  const errorCorrectionCode = division(originBits);  // 拼接  const result = `${versionBits}${errorCorrectionCode}`;  console.log(version.padEnd(2, &#39; &#39;), versionBits, errorCorrectionCode, result)  return result;}calcVersionBits(&#39;7&#39;) // -&gt; 7  000111 110010010100 000111110010010100calcVersionBits(&#39;8&#39;) // -&gt; 8  001000 010110111100 001000010110111100calcVersionBits(&#39;9&#39;) // -&gt; 9  001001 101010011001 001001101010011001calcVersionBits(&#39;10&#39;) // -&gt; 10 001010 010011010011 001010010011010011calcVersionBits(&#39;11&#39;) // -&gt; 11 001011 101111110110 001011101111110110calcVersionBits(&#39;12&#39;) // -&gt; 12 001100 011101100010 001100011101100010calcVersionBits(&#39;13&#39;) // -&gt; 13 001101 100001000111 001101100001000111calcVersionBits(&#39;14&#39;) // -&gt; 14 001110 011000001101 001110011000001101calcVersionBits(&#39;15&#39;) // -&gt; 15 001111 100100101000 001111100100101000calcVersionBits(&#39;16&#39;) // -&gt; 16 010000 101101111000 010000101101111000calcVersionBits(&#39;17&#39;) // -&gt; 17 010001 010001011101 010001010001011101calcVersionBits(&#39;18&#39;) // -&gt; 18 010010 101000010111 010010101000010111calcVersionBits(&#39;19&#39;) // -&gt; 19 010011 010100110010 010011010100110010calcVersionBits(&#39;20&#39;) // -&gt; 20 010100 100110100110 010100100110100110calcVersionBits(&#39;21&#39;) // -&gt; 21 010101 011010000011 010101011010000011calcVersionBits(&#39;22&#39;) // -&gt; 22 010110 100011001001 010110100011001001calcVersionBits(&#39;23&#39;) // -&gt; 23 010111 011111101100 010111011111101100calcVersionBits(&#39;24&#39;) // -&gt; 24 011000 111011000100 011000111011000100calcVersionBits(&#39;25&#39;) // -&gt; 25 011001 000111100001 011001000111100001calcVersionBits(&#39;26&#39;) // -&gt; 26 011010 111110101011 011010111110101011calcVersionBits(&#39;27&#39;) // -&gt; 27 011011 000010001110 011011000010001110calcVersionBits(&#39;28&#39;) // -&gt; 28 011100 110000011010 011100110000011010calcVersionBits(&#39;29&#39;) // -&gt; 29 011101 001100111111 011101001100111111calcVersionBits(&#39;30&#39;) // -&gt; 30 011110 110101110101 011110110101110101calcVersionBits(&#39;31&#39;) // -&gt; 31 011111 001001010000 011111001001010000calcVersionBits(&#39;32&#39;) // -&gt; 32 100000 100111010101 100000100111010101calcVersionBits(&#39;33&#39;) // -&gt; 33 100001 011011110000 100001011011110000calcVersionBits(&#39;34&#39;) // -&gt; 34 100010 100010111010 100010100010111010calcVersionBits(&#39;35&#39;) // -&gt; 35 100011 011110011111 100011011110011111calcVersionBits(&#39;36&#39;) // -&gt; 36 100100 101100001011 100100101100001011calcVersionBits(&#39;37&#39;) // -&gt; 37 100101 010000101110 100101010000101110calcVersionBits(&#39;38&#39;) // -&gt; 38 100110 101001100100 100110101001100100calcVersionBits(&#39;39&#39;) // -&gt; 39 100111 010101000001 100111010101000001calcVersionBits(&#39;40&#39;) // -&gt; 40 101000 110001101001 101000110001101001</code></pre><p>绘制顺序如下：<img src="./1611891015008-5936ddc8-0a10-4e35-824f-922cfa7e978d.png" alt="方形区域.png"></p><p>结果列表如下（有限值，实际应用可以先行计算完毕直接取用）：</p><table><thead><tr><th style="text-align:center">版本号</th><th style="text-align:center">版本信息</th></tr></thead><tbody><tr><td style="text-align:center">7</td><td style="text-align:center">000111110010010100</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">001000010110111100</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">001001101010011001</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">001010010011010011</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">001011101111110110</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">001100011101100010</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">001101100001000111</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">001110011000001101</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">001111100100101000</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">010000101101111000</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">010001010001011101</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">010010101000010111</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">010011010100110010</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">010100100110100110</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">010101011010000011</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">010110100011001001</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">010111011111101100</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">011000111011000100</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">011001000111100001</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">011010111110101011</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">011011000010001110</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">011100110000011010</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">011101001100111111</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">011110110101110101</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">011111001001010000</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">100000100111010101</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">100001011011110000</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">100010100010111010</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center">100011011110011111</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center">100100101100001011</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center">100101010000101110</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center">100110101001100100</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center">100111010101000001</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center">101000110001101001</td></tr></tbody></table><h3 id="数据编码"><a href="#数据编码" class="headerlink" title="数据编码"></a>数据编码</h3><p>看完其他区域，回头看数据区，本节以 <code>HELLO WORLD</code> 为例，讲解二维码是如何为字符串编码的</p><h4 id="确定容错等级"><a href="#确定容错等级" class="headerlink" title="确定容错等级"></a>确定容错等级</h4><p>确定本次编码选用哪种容错等级，如 <code>Q</code> </p><h4 id="确定编码模式"><a href="#确定编码模式" class="headerlink" title="确定编码模式"></a>确定编码模式</h4><p>根据字符串的类型，选择不同的编码模式</p><table><thead><tr><th style="text-align:center">编码模式</th><th style="text-align:center">判断方法</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center"><strong>数字模式</strong></td><td style="text-align:center">/0-9/</td><td style="text-align:center">数字</td></tr><tr><td style="text-align:center"><strong>字母数字模式</strong></td><td style="text-align:center">/[0-9A-Z$%\*+-\/.:\s]/</td><td style="text-align:center">数字 + 大写字母 + 特殊符号（$%*+-/.:）+ 空格</td></tr><tr><td style="text-align:center"><strong>字节模式</strong></td><td style="text-align:center">0x00 &lt; x.charCodeAt(0) &lt; 0xFF</td><td style="text-align:center">ISO 8859-1 编码中的字符</td></tr><tr><td style="text-align:center"><strong>汉字模式</strong></td><td style="text-align:center"></td><td style="text-align:center">Shift JIS 中的字符 <a href="http://www.rikai.com/library/kanjitables/kanji_codes.sjis.shtml" target="_blank" rel="external">http://www.rikai.com/library/kanjitables/kanji_codes.sjis.shtml</a></td></tr></tbody></table><p><strong>但是</strong>，在实际应用中，字节模式不仅用来编码 ISO 8859-1 的字符，也用来编码 utf-8 的所有字符。Shift JIS 的所有字符都可以用 utf-8 来表示，所以一般来说，除了字母数字，都用<strong>字节模式</strong>来编码。</p><p>根据上表，<code>HELLO WORLD</code> 应该选择字母的编码模式</p><pre><code class="line-numbers language-javascript">const ENCODING_MODE_NUMBER = &#39;ENCODING_MODE_NUMBER&#39;; // 数字const ENCODING_MODE_ALPHANUMERIC = &#39;ENCODING_MODE_ALPHANUMERIC&#39;; // 字母数字const ENCODING_MODE_BYTE = &#39;ENCODING_MODE_BYTE&#39;; // ISO-8859-1const ENCODING_MODE_KANJI = &#39;ENCODING_MODE_KANJI&#39;; // 其他function detectEncodingMode(value) {    if (/[0-9]/.test(value)) return ENCODING_MODE_NUMBER;  if (/[0-9A-Z$%\\*+-\\/.:\\s]/.test(value)) return ENCODING_MODE_ALPHANUMERIC;  return ENCODING_MODE_BYTE;}detectEncodingMode(123456789); // -&gt; ENCODING_MODE_NUMBERdetectEncodingMode(&#39;HELLO WORLD&#39;); // -&gt; ENCODING_MODE_ALPHANUMERICdetectEncodingMode(&#39;&lt;&gt;&#39;); // -&gt; ENCODING_MODE_BYTEdetectEncodingMode(&#39;中文&#39;); // -&gt; ENCODING_MODE_KANJI</code></pre><h4 id="确定版本号"><a href="#确定版本号" class="headerlink" title="确定版本号"></a>确定版本号</h4><p>根据容错等级以及字符串的类型和长度，确定应该选用哪个版本（尺寸）的二维码</p><p>根据上文的容量表，Q 容错等级，字母的编码模式，11位长度的字符串，版本1即可满足容量需求</p><pre><code class="line-numbers language-javascript">// 字符容量表const CHAR_CAPACITY = [    // 1  [    [41,25,17,10], // L    [34,20,14,8], // M    [27,16,11,7], // Q    [17,10,7,4], // H  ],  // 2  [    [77,47,32,20],    [63,38,26,16],    [48,29,20,12],    [34,20,14,8],  ],  // 3  [    [127,77,53,32],    [101,61,42,26],    [77,47,32,20],    [58,35,24,15],  ],  // ...  [    [187,114,78,48],    [149,90,62,38],    [111,67,46,28],    [82,50,34,21],  ],  [    [255,154,106,65],    [202,122,84,52],    [144,87,60,37],    [106,64,44,27],  ],  [    [322,195,134,82],    [255,154,106,65],    [178,108,74,45],    [139,84,58,36],  ],  [    [370,224,154,95],    [293,178,122,75],    [207,125,86,53],    [154,93,64,39],  ],  [    [461,279,192,118],    [365,221,152,93],    [259,157,108,66],    [202,122,84,52],  ],  [    [552,335,230,141],    [432,262,180,111],    [312,189,130,80],    [235,143,98,60],  ],  [    [652,395,271,167],    [513,311,213,131],    [364,221,151,93],    [288,174,119,74],  ],  [    [772,468,321,198],    [604,366,251,155],    [427,259,177,109],    [331,200,137,85],  ],  [    [883,535,367,226],    [691,419,287,177],    [489,296,203,125],    [374,227,155,96],  ],  [    [1022,619,425,262],    [796,483,331,204],    [580,352,241,149],    [427,259,177,109],  ],  [    [1101,667,458,282],    [871,528,362,223],    [621,376,258,159],    [468,283,194,120],  ],  [    [1250,758,520,320],    [991,600,412,254],    [703,426,292,180],    [530,321,220,136],  ],  [    [1408,854,586,361],    [1082,656,450,277],    [775,470,322,198],    [602,365,250,154],  ],  [    [1548,938,644,397],    [1212,734,504,310],    [876,531,364,224],    [674,408,280,173],  ],  [    [1725,1046,718,442],    [1346,816,560,345],    [948,574,394,243],    [746,452,310,191],  ],  [    [1903,1153,792,488],    [1500,909,624,384],    [1063,644,442,272],    [813,493,338,208],  ],  [    [2061,1249,858,528],    [1600,970,666,410],    [1159,702,482,297],    [919,557,382,235],  ],  [    [2232,1352,929,572],    [1708,1035,711,438],    [1224,742,509,314],    [969,587,403,248],  ],  [    [2409,1460,1003,618],    [1872,1134,779,480],    [1358,823,565,348],    [1056,640,439,270],  ],  [    [2620,1588,1091,672],    [2059,1248,857,528],    [1468,890,611,376],    [1108,672,461,284],  ],  [    [2812,1704,1171,721],    [2188,1326,911,561],    [1588,963,661,407],    [1228,744,511,315],  ],  [    [3057,1853,1273,784],    [2395,1451,997,614],    [1718,1041,715,440],    [1286,779,535,330],  ],  [    [3283,1990,1367,842],    [2544,1542,1059,652],    [1804,1094,751,462],    [1425,864,593,365],  ],  [    [3517,2132,1465,902],    [2701,1637,1125,692],    [1933,1172,805,496],    [1501,910,625,385],  ],  [    [3669,2223,1528,940],    [2857,1732,1190,732],    [2085,1263,868,534],    [1581,958,658,405],  ],  [    [3909,2369,1628,1002],    [3035,1839,1264,778],    [2181,1322,908,559],    [1677,1016,698,430],  ],  [    [4158,2520,1732,1066],    [3289,1994,1370,843],    [2358,1429,982,604],    [1782,1080,742,457],  ],  [    [4417,2677,1840,1132],    [3486,2113,1452,894],    [2473,1499,1030,634],    [1897,1150,790,486],  ],  [    [4686,2840,1952,1201],    [3693,2238,1538,947],    [2670,1618,1112,684],    [2022,1226,842,518],  ],  [    [4965,3009,2068,1273],    [3909,2369,1628,1002],    [2805,1700,1168,719],    [2157,1307,898,553],  ],  [    [5253,3183,2188,1347],    [4134,2506,1722,1060],    [2949,1787,1228,756],    [2301,1394,958,590],  ],  [    [5529,3351,2303,1417],    [4343,2632,1809,1113],    [3081,1867,1283,790],    [2361,1431,983,605],  ],  [    [5836,3537,2431,1496],    [4588,2780,1911,1176],    [3244,1966,1351,832],    [2524,1530,1051,647],  ],  [    [6153,3729,2563,1577],    [4775,2894,1989,1224],    [3417,2071,1423,876],    [2625,1591,1093,673],  ],  [    [6479,3927,2699,1661],    [5039,3054,2099,1292],    [3599,2181,1499,923],    [2735,1658,1139,701],  ],  [    [6743,4087,2809,1729],    [5313,3220,2213,1362],    [3791,2298,1579,972],    [2927,1774,1219,750],  ],  // 40  [    [7089,4296,2953,1817],    [5596,3391,2331,1435],    [3993,2420,1663,1024],    [3057,1852,1273,784],  ],];function detectVersion(value, correctLevel, encodingMode) {  let version = &#39;1&#39;;  const len = value.length;  const correctLevelIndex = [CORRECT_LEVEL_L, CORRECT_LEVEL_M, CORRECT_LEVEL_Q, CORRECT_LEVEL_H].indexOf(correctLevel);  const encodingModeIndex = [ENCODING_MODE_NUMBER, ENCODING_MODE_ALPHANUMERIC, ENCODING_MODE_BYTE, ENCODING_MODE_KANJI].indexOf(encodingMode);  for (let i = 0; i &lt; CHAR_CAPACITY.length; i++) {  if (len &lt;= CHAR_CAPACITY[i][correctLevelIndex][encodingModeIndex]) version = i + 1;    break;  }  return String(version);}detectVersion(&#39;HELLO WORLD&#39;, &#39;Q&#39;, ENCODING_MODE_ALPHANUMERIC); // -&gt; 1</code></pre><h4 id="确定编码模式指示器"><a href="#确定编码模式指示器" class="headerlink" title="确定编码模式指示器"></a>确定编码模式指示器</h4><p>根据编码模式的不同，选择不同的编码模式指示器</p><table><thead><tr><th>编码模式</th><th>模式指示器</th></tr></thead><tbody><tr><td><strong>数字模式</strong></td><td>0001</td></tr><tr><td><strong>字母数字模式</strong></td><td>0010</td></tr><tr><td><strong>字节模式</strong></td><td>0100</td></tr><tr><td><strong>汉字模式</strong></td><td>1000</td></tr></tbody></table><p>根据上表，<code>HELLO WORLD</code> 应该选择字母的编码模式指示器，<code>0010</code></p><pre><code class="line-numbers language-javascript">function detectEncodingModeIndicator(encodingMode) {    switch (encodingMode) {      case ENCODING_MODE_NUMBER:      return &#39;0001&#39;;    case ENCODING_MODE_ALPHANUMERIC:      return &#39;0010&#39;;    case ENCODING_MODE_BYTE:      return &#39;0100&#39;;    case ENCODING_MODE_KANJI:      return &#39;1000&#39;;  }}detectEncodingModeIndicator(ENCODING_MODE_NUMBER); // -&gt; 0001</code></pre><h4 id="确定字符数量指示器"><a href="#确定字符数量指示器" class="headerlink" title="确定字符数量指示器"></a>确定字符数量指示器</h4><p>字符数量指示器用来表示要编码的字符数的二进制字符串，根据版本 + 编码模式以及字符串的长度确定，列表如下：</p><table><thead><tr><th>版本号</th><th>编码模式</th><th>字符数量指示器长度</th></tr></thead><tbody><tr><td>1-9</td><td>数字模式</td><td>10</td></tr><tr><td></td><td>字母数字模式</td><td>9</td></tr><tr><td></td><td>字节模式</td><td>8</td></tr><tr><td></td><td>汉字模式</td><td>8</td></tr><tr><td>10-26</td><td>数字模式</td><td>12</td></tr><tr><td></td><td>字母数字模式</td><td>11</td></tr><tr><td></td><td>字节模式</td><td>16</td></tr><tr><td></td><td>汉字模式</td><td>10</td></tr><tr><td>27-40</td><td>数字模式</td><td>14</td></tr><tr><td></td><td>字母数字模式</td><td>13</td></tr><tr><td></td><td>字节模式</td><td>16</td></tr><tr><td></td><td>汉字模式</td><td>12</td></tr></tbody></table><p>根据上表， <code>HELLO WORLD</code> 的字符长度为11，转成二进制为 <code>1011</code> ，版本号为1，编码模式为字母数字模式，字符数量指示器的长度为9，将 <code>1011</code> 左侧补0到9位，得到 <code>000001011</code> </p><pre><code class="line-numbers language-javascript">// 字符指示器长度表const CHAR_COUNT_INDICATOR_LENGTH = [  [10, 9, 8, 8], // version 1 - 9 [数字, 字母数字, 字节, 汉字]  [12, 11, 16, 10], // version 10 - 26  [14, 13, 16, 12], // version 27 - 40];function detectCharCountIndicator(value, version, encodingMode) {  const encodingModeIndex = ENCODING_MODE_ORDER.indexOf(encodingMode);  let charCountIndicatorLenTableIndex = 0;  if (Number(version) &lt;= 9) charCountIndicatorLenTableIndex = 0;  if (Number(version) &gt;= 10 &amp;&amp; Number(version) &lt;= 26) charCountIndicatorLenTableIndex = 1;  if (Number(version) &gt;= 27) charCountIndicatorLenTableIndex = 2;  const valueLen = value.length;  const charCountIndicatorLen = CHAR_COUNT_INDICATOR_LENGTH[charCountIndicatorLenTableIndex][encodingModeIndex];  return valueLen.toString(2).padStart(charCountIndicatorLen, &#39;0&#39;);}detectCharCountIndicator(&#39;HELLO WORLD&#39;, &#39;1&#39;, &#39;ENCODING_MODE_ALPHANUMERIC&#39;); // -&gt; 000001011</code></pre><h4 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h4><p>根据编码模式的不同，有不同的编码逻辑，具体如下：</p><ul><li><p>数字模式</p><p>直接转成二进制数</p><pre><code class="line-numbers language-javascript">function encodeDataWithNumberMode(value) {  return Number(value).toString(2);}</code></pre></li><li><p>字母数字模式</p><ul><li>原始字符串两两分组，比如 <code>HE</code> <code>LL</code> <code>O</code> <code>WO</code> <code>RL</code> <code>D</code> </li><li>从字母数字模式的字符数字对照表找到分组内各字符的数字</li><li><code>H</code> -&gt; 17； <code>E</code> -&gt; 14</li><li>(45 * 17) + 14 = 779 （45 是固定值）</li><li>转成二进制并左侧补 0 到 11 位，<code>Number(779).toString(2).padStart(11, 0) = &#39;01100001011&#39;</code> </li><li>奇数长度字符，直接返回索引值的二进制，左侧补 0 到 6 位</li></ul></li></ul><table><thead><tr><th>字符</th><th>数字</th><th>字符</th><th>数字</th><th>字符</th><th>数字</th><th>字符</th><th>数字</th><th>字符</th><th>数字</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>A</td><td>10</td><td>K</td><td>20</td><td>U</td><td>30</td><td>+</td><td>40</td></tr><tr><td>1</td><td>1</td><td>B</td><td>11</td><td>L</td><td>21</td><td>V</td><td>31</td><td>-</td><td>41</td></tr><tr><td>2</td><td>2</td><td>C</td><td>12</td><td>M</td><td>22</td><td>W</td><td>32</td><td>.</td><td>42</td></tr><tr><td>3</td><td>3</td><td>D</td><td>13</td><td>N</td><td>23</td><td>X</td><td>33</td><td>/</td><td>43</td></tr><tr><td>4</td><td>4</td><td>E</td><td>14</td><td>O</td><td>24</td><td>Y</td><td>34</td><td>:</td><td>44</td></tr><tr><td>5</td><td>5</td><td>F</td><td>15</td><td>P</td><td>25</td><td>Z</td><td>35</td><td></td><td></td></tr><tr><td>6</td><td>6</td><td>G</td><td>16</td><td>Q</td><td>26</td><td>(空格)</td><td>36</td><td></td><td></td></tr><tr><td>7</td><td>7</td><td>H</td><td>17</td><td>R</td><td>27</td><td>$</td><td>37</td><td></td><td></td></tr><tr><td>8</td><td>8</td><td>I</td><td>18</td><td>S</td><td>28</td><td>%</td><td>38</td><td></td><td></td></tr><tr><td>9</td><td>9</td><td>J</td><td>19</td><td>T</td><td>29</td><td>*</td><td>39</td><td></td></tr></tbody></table><pre><code class="line-numbers language-javascript">  // 编码模式 - 字母数字模式对照表  const ENCODING_MODE_ALPHANUMERIC_MAP = {      0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9,    A: 10, B: 11, C: 12, D: 13, E:14, F: 15, G: 16, H: 17, I: 18, J: 19, K: 20, L: 21, M: 22, N: 23, O: 24, P: 25, Q: 26, R: 27, S: 28, T: 29, U: 30, V: 31, W: 32, X: 33, Y: 34, Z: 35,    [&#39; &#39;]: 36, $: 37,  };  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;%&#39;] = 38;  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;*&#39;] = 39;  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;+&#39;] = 40;  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;-&#39;] = 41;  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;.&#39;] = 42;  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;/&#39;] = 43;  ENCODING_MODE_ALPHANUMERIC_MAP[&#39;:&#39;] = 44;  function encodeDataWithAlphanumericMode(value) {    // 两两分割    const splittedValue = value.split(/(.{2})/).filter(i =&gt; !!i);    return splittedValue.reduce((r, item) =&gt; {      const current = []      item.split(&#39;&#39;).forEach(i =&gt; {          // 找到分组内每个字符对应的索引        current.push(ENCODING_MODE_ALPHANUMERIC_MAP[i]);      })      let result = &#39;&#39;      // 奇数长度字符串，索引值转二进制左侧补 0 到 6 位      if (!current[1]) result = current[0].toString(2).padStart(6, &#39;0&#39;);      // 偶数长度字符串，45 * [0] + [1] 转二进制左侧补 0 到 11 位，      if (current[1]) result = (45 * current[0] + current[1]).toString(2).padStart(11, &#39;0&#39;);      return `${r}${result}`;    }, &#39;&#39;);  }  encodeDataWithAlphanumericMode(&#39;HELLO WORLD&#39;); // -&gt; 0110000101101111000110100010111001011011100010011010100001101</code></pre><ul><li><p>字节模式</p><p>获取每个字符的 unicode 索引再转二进制，左侧补 0 到 8 位即可</p><pre><code class="line-numbers language-javascript">function encodeDataWithByteMode(value) {  return value.split(&#39;&#39;).reduce((r, item) =&gt; {    return `${r}${item.charCodeAt(0).toString(2).padStart(8, &#39;0&#39;)}`;  }, &#39;&#39;);}encodeDataWithByteMode(&#39;Hello, world!&#39;); // -&gt; 01001000011001010110110001101100011011110010110000100000011101110110111101110010011011000110010000100001</code></pre></li><li><p>汉字模式</p><ul><li>获取每个字符的 Shift JIS 索引</li><li>针对 0x8140 到 0x9ffc 的字符（以 “荷” <0x89d7> 为例）：<ul><li>0x89D7 - 0x8140 = 0x0897</li><li>得到 0x08 0x97</li><li>(0x08 * 0xC0) + 0x97 = 0x697</li><li>0x697 -&gt; 0011010010111</li></ul></0x89d7></li><li>针对 0xE040 到 0xEBBF 的字符（以 “茗” <0xe4aa> 为例）:<ul><li>0xE4AA - 0xC140 = 0x236A</li><li>得到 0x23 0x6A</li><li>(0x23 * 0xC0) + 0x6A = 0x1AAA</li><li>0x1AAA -&gt; 1101010101010</li></ul></0xe4aa></li></ul></li></ul><pre><code class="line-numbers language-javascript">function encodeDataWithKanjiMode(value) {    // 略}</code></pre><h4 id="整合编码结果"><a href="#整合编码结果" class="headerlink" title="整合编码结果"></a>整合编码结果</h4><p>根据以上复杂的计算后，可以获取以下的结果：</p><p><code>HELLO WORLD</code> ：</p><table><thead><tr><th>编码模式指示器</th><th>字符数量指示器</th><th>内容</th></tr></thead><tbody><tr><td>0010</td><td>000001011</td><td>0110000101101111000110100010111001011011100010011010100001101</td></tr></tbody></table><p>最后，二维码规范规定编码后的字符串长度必须根据容错等级和版本拓展到8的倍数，所以针对上文的结果还需做额外处理。</p><p>版本、容错等级和字节长度的对应表如下：</p><table><thead><tr><th style="text-align:left">版本号</th><th style="text-align:left">容错等级</th><th style="text-align:left">字节长度</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">L</td><td style="text-align:left">19</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">16</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">13</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">9</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">L</td><td style="text-align:left">34</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">28</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">22</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">16</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">L</td><td style="text-align:left">55</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">44</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">34</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">26</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">L</td><td style="text-align:left">80</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">64</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">48</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">36</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">L</td><td style="text-align:left">108</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">86</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">62</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">46</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">L</td><td style="text-align:left">136</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">108</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">76</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">60</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">L</td><td style="text-align:left">156</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">124</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">88</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">66</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">L</td><td style="text-align:left">194</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">154</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">110</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">86</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">L</td><td style="text-align:left">232</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">182</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">132</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">100</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">L</td><td style="text-align:left">274</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">216</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">154</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">122</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">L</td><td style="text-align:left">324</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">254</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">180</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">140</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">L</td><td style="text-align:left">370</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">290</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">206</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">158</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">L</td><td style="text-align:left">428</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">334</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">244</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">180</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">L</td><td style="text-align:left">461</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">365</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">261</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">197</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">L</td><td style="text-align:left">523</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">415</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">295</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">223</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">L</td><td style="text-align:left">589</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">453</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">325</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">253</td></tr><tr><td style="text-align:left">17</td><td style="text-align:left">L</td><td style="text-align:left">647</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">507</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">367</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">283</td></tr><tr><td style="text-align:left">18</td><td style="text-align:left">L</td><td style="text-align:left">721</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">563</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">397</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">313</td></tr><tr><td style="text-align:left">19</td><td style="text-align:left">L</td><td style="text-align:left">795</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">627</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">445</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">341</td></tr><tr><td style="text-align:left">20</td><td style="text-align:left">L</td><td style="text-align:left">861</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">669</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">485</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">385</td></tr><tr><td style="text-align:left">21</td><td style="text-align:left">L</td><td style="text-align:left">932</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">714</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">512</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">406</td></tr><tr><td style="text-align:left">22</td><td style="text-align:left">L</td><td style="text-align:left">1006</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">782</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">568</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">442</td></tr><tr><td style="text-align:left">23</td><td style="text-align:left">L</td><td style="text-align:left">1094</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">860</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">614</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">464</td></tr><tr><td style="text-align:left">24</td><td style="text-align:left">L</td><td style="text-align:left">1174</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">914</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">664</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">514</td></tr><tr><td style="text-align:left">25</td><td style="text-align:left">L</td><td style="text-align:left">1276</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">718</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">538</td></tr><tr><td style="text-align:left">26</td><td style="text-align:left">L</td><td style="text-align:left">1370</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1062</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">754</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">596</td></tr><tr><td style="text-align:left">27</td><td style="text-align:left">L</td><td style="text-align:left">1468</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1128</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">808</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">628</td></tr><tr><td style="text-align:left">28</td><td style="text-align:left">L</td><td style="text-align:left">1531</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1193</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">871</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">661</td></tr><tr><td style="text-align:left">29</td><td style="text-align:left">L</td><td style="text-align:left">1631</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1267</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">911</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">701</td></tr><tr><td style="text-align:left">30</td><td style="text-align:left">L</td><td style="text-align:left">1735</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1373</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">985</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">745</td></tr><tr><td style="text-align:left">31</td><td style="text-align:left">L</td><td style="text-align:left">1843</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1455</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1033</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">793</td></tr><tr><td style="text-align:left">32</td><td style="text-align:left">L</td><td style="text-align:left">1955</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1541</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1115</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">845</td></tr><tr><td style="text-align:left">33</td><td style="text-align:left">L</td><td style="text-align:left">2071</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1631</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1171</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">901</td></tr><tr><td style="text-align:left">34</td><td style="text-align:left">L</td><td style="text-align:left">2191</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1725</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1231</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">961</td></tr><tr><td style="text-align:left">35</td><td style="text-align:left">L</td><td style="text-align:left">2306</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1812</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1286</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">986</td></tr><tr><td style="text-align:left">36</td><td style="text-align:left">L</td><td style="text-align:left">2434</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1914</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1354</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">1054</td></tr><tr><td style="text-align:left">37</td><td style="text-align:left">L</td><td style="text-align:left">2566</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">1992</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1426</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">1096</td></tr><tr><td style="text-align:left">38</td><td style="text-align:left">L</td><td style="text-align:left">2702</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">2102</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1502</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">1142</td></tr><tr><td style="text-align:left">39</td><td style="text-align:left">L</td><td style="text-align:left">2812</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">2216</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1582</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">1222</td></tr><tr><td style="text-align:left">40</td><td style="text-align:left">L</td><td style="text-align:left">2956</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">M</td><td style="text-align:left">2334</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">Q</td><td style="text-align:left">1666</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">H</td><td style="text-align:left">1276</td></tr></tbody></table><p>具体流程如下：</p><ul><li>确定最终字符长度，如版本1，容错等级 Q 的 <code>Hello World</code> 最终比特长度应该为 13*8 = 104</li><li>补0，最多补4位，比如整合前的编码是74位，小于104，而且补4个0也没到104位，那就补4个0</li><li>补0，补到8的倍数，比如补完0之后只有78位，还需要补两个0，到80位，8的倍数</li><li>重复补特定二进制，直到补满长度，比如80位还是小于104，用 <code>11101100</code> 和 <code>00010001</code> 重复补，一直补到104位</li></ul><pre><code class="line-numbers language-javascript">function mergeEncodedData(encodingModeIndicator, charCountIndicator, encodedData, version, correctLevel) {  const repeatBits = [&#39;11101100&#39;, &#39;00010001&#39;];  const correctLevelIndex = CORRECT_LEVEL_ORDER.indexOf(correctLevel);  const codeWordsBitsLen = CODE_WORDS_LENGTH[version - 1][correctLevelIndex] * 8; // 比特长度  let result = `${encodingModeIndicator}${charCountIndicator}${encodedData}`;  const codeWordsDiff = codeWordsBitsLen - result.length;  // 直接补 0 到相应长度  if (codeWordsDiff &lt;= 4) return result.padEnd(codeWordsBitsLen, &#39;0&#39;);  // 先补四个 0  result = result.padEnd(result.length + 4, &#39;0&#39;);  // 再补到 8 的倍数  result = result.padEnd(result.length + 8 - result.length % 8, &#39;0&#39;);  // 长度还是不够，再补重复字节  const len = result.length;  for (let i = 0; i &lt; codeWordsBitsLen - len; i += 8) {    result = `${result}${repeatBits[(i / 8) % 2]}`;  }  return result;}mergeEncodedData(&#39;0010&#39;, &#39;000001011&#39;, &#39;0110000101101111000110100010111001011011100010011010100001101&#39;, &#39;1&#39;, &#39;Q&#39;); // -&gt; 00100000010110110000101101111000110100010111001011011100010011010100001101000000111011000001000111101100</code></pre><p>回忆下整个流程，如下图：</p><p><img src="./1612171777537-9964930d-6246-4e84-b2ac-0e0b644fab62.png" alt="编组 22.png"></p><h4 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h4><p>整合所有逻辑，伪代码如下：</p><pre><code class="line-numbers language-javascript">// 容错等级const CORRECT_LEVEL_L = &#39;L&#39;;const CORRECT_LEVEL_M = &#39;M&#39;;const CORRECT_LEVEL_Q = &#39;Q&#39;;const CORRECT_LEVEL_H = &#39;H&#39;;const CORRECT_LEVEL_ORDER = [CORRECT_LEVEL_L, CORRECT_LEVEL_M, CORRECT_LEVEL_Q, CORRECT_LEVEL_H];// 编码模式const ENCODING_MODE_NUMBER = &#39;ENCODING_MODE_NUMBER&#39;; // 数字const ENCODING_MODE_ALPHANUMERIC = &#39;ENCODING_MODE_ALPHANUMERIC&#39;; // 字母数字const ENCODING_MODE_BYTE = &#39;ENCODING_MODE_BYTE&#39;; // ISO-8859-1const ENCODING_MODE_KANJI = &#39;ENCODING_MODE_KANJI&#39;; // 其他const ENCODING_MODE_ORDER = [ENCODING_MODE_NUMBER, ENCODING_MODE_ALPHANUMERIC, ENCODING_MODE_BYTE, ENCODING_MODE_KANJI];// 字符容量表const CHAR_CAPACITY = [  // 1  [    [41,25,17,10], // L    [34,20,14,8], // M    [27,16,11,7], // Q    [17,10,7,4], // H  ],  // 2  [    [77,47,32,20],    [63,38,26,16],    [48,29,20,12],    [34,20,14,8],  ],  // 3  [    [127,77,53,32],    [101,61,42,26],    [77,47,32,20],    [58,35,24,15],  ],  // ...  [    [187,114,78,48],    [149,90,62,38],    [111,67,46,28],    [82,50,34,21],  ],  [    [255,154,106,65],    [202,122,84,52],    [144,87,60,37],    [106,64,44,27],  ],  [    [322,195,134,82],    [255,154,106,65],    [178,108,74,45],    [139,84,58,36],  ],  [    [370,224,154,95],    [293,178,122,75],    [207,125,86,53],    [154,93,64,39],  ],  [    [461,279,192,118],    [365,221,152,93],    [259,157,108,66],    [202,122,84,52],  ],  [    [552,335,230,141],    [432,262,180,111],    [312,189,130,80],    [235,143,98,60],  ],  [    [652,395,271,167],    [513,311,213,131],    [364,221,151,93],    [288,174,119,74],  ],  [    [772,468,321,198],    [604,366,251,155],    [427,259,177,109],    [331,200,137,85],  ],  [    [883,535,367,226],    [691,419,287,177],    [489,296,203,125],    [374,227,155,96],  ],  [    [1022,619,425,262],    [796,483,331,204],    [580,352,241,149],    [427,259,177,109],  ],  [    [1101,667,458,282],    [871,528,362,223],    [621,376,258,159],    [468,283,194,120],  ],  [    [1250,758,520,320],    [991,600,412,254],    [703,426,292,180],    [530,321,220,136],  ],  [    [1408,854,586,361],    [1082,656,450,277],    [775,470,322,198],    [602,365,250,154],  ],  [    [1548,938,644,397],    [1212,734,504,310],    [876,531,364,224],    [674,408,280,173],  ],  [    [1725,1046,718,442],    [1346,816,560,345],    [948,574,394,243],    [746,452,310,191],  ],  [    [1903,1153,792,488],    [1500,909,624,384],    [1063,644,442,272],    [813,493,338,208],  ],  [    [2061,1249,858,528],    [1600,970,666,410],    [1159,702,482,297],    [919,557,382,235],  ],  [    [2232,1352,929,572],    [1708,1035,711,438],    [1224,742,509,314],    [969,587,403,248],  ],  [    [2409,1460,1003,618],    [1872,1134,779,480],    [1358,823,565,348],    [1056,640,439,270],  ],  [    [2620,1588,1091,672],    [2059,1248,857,528],    [1468,890,611,376],    [1108,672,461,284],  ],  [    [2812,1704,1171,721],    [2188,1326,911,561],    [1588,963,661,407],    [1228,744,511,315],  ],  [    [3057,1853,1273,784],    [2395,1451,997,614],    [1718,1041,715,440],    [1286,779,535,330],  ],  [    [3283,1990,1367,842],    [2544,1542,1059,652],    [1804,1094,751,462],    [1425,864,593,365],  ],  [    [3517,2132,1465,902],    [2701,1637,1125,692],    [1933,1172,805,496],    [1501,910,625,385],  ],  [    [3669,2223,1528,940],    [2857,1732,1190,732],    [2085,1263,868,534],    [1581,958,658,405],  ],  [    [3909,2369,1628,1002],    [3035,1839,1264,778],    [2181,1322,908,559],    [1677,1016,698,430],  ],  [    [4158,2520,1732,1066],    [3289,1994,1370,843],    [2358,1429,982,604],    [1782,1080,742,457],  ],  [    [4417,2677,1840,1132],    [3486,2113,1452,894],    [2473,1499,1030,634],    [1897,1150,790,486],  ],  [    [4686,2840,1952,1201],    [3693,2238,1538,947],    [2670,1618,1112,684],    [2022,1226,842,518],  ],  [    [4965,3009,2068,1273],    [3909,2369,1628,1002],    [2805,1700,1168,719],    [2157,1307,898,553],  ],  [    [5253,3183,2188,1347],    [4134,2506,1722,1060],    [2949,1787,1228,756],    [2301,1394,958,590],  ],  [    [5529,3351,2303,1417],    [4343,2632,1809,1113],    [3081,1867,1283,790],    [2361,1431,983,605],  ],  [    [5836,3537,2431,1496],    [4588,2780,1911,1176],    [3244,1966,1351,832],    [2524,1530,1051,647],  ],  [    [6153,3729,2563,1577],    [4775,2894,1989,1224],    [3417,2071,1423,876],    [2625,1591,1093,673],  ],  [    [6479,3927,2699,1661],    [5039,3054,2099,1292],    [3599,2181,1499,923],    [2735,1658,1139,701],  ],  [    [6743,4087,2809,1729],    [5313,3220,2213,1362],    [3791,2298,1579,972],    [2927,1774,1219,750],  ],  // 40  [    [7089,4296,2953,1817],    [5596,3391,2331,1435],    [3993,2420,1663,1024],    [3057,1852,1273,784],  ],];// 字符指示器长度表const CHAR_COUNT_INDICATOR_LENGTH = [  [10, 9, 8, 8], // version 1 - 9  [12, 11, 16, 10], // version 10 - 26  [14, 13, 16, 12], // version 27 - 40];// 编码模式 - 字母数字模式对照表const ENCODING_MODE_ALPHANUMERIC_MAP = {  0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9,  A: 10, B: 11, C: 12, D: 13, E:14, F: 15, G: 16, H: 17, I: 18, J: 19, K: 20, L: 21, M: 22, N: 23, O: 24, P: 25, Q: 26, R: 27, S: 28, T: 29, U: 30, V: 31, W: 32, X: 33, Y: 34, Z: 35,  [&#39; &#39;]: 36, $: 37,};ENCODING_MODE_ALPHANUMERIC_MAP[&#39;%&#39;] = 38;ENCODING_MODE_ALPHANUMERIC_MAP[&#39;*&#39;] = 39;ENCODING_MODE_ALPHANUMERIC_MAP[&#39;+&#39;] = 40;ENCODING_MODE_ALPHANUMERIC_MAP[&#39;-&#39;] = 41;ENCODING_MODE_ALPHANUMERIC_MAP[&#39;.&#39;] = 42;ENCODING_MODE_ALPHANUMERIC_MAP[&#39;/&#39;] = 43;ENCODING_MODE_ALPHANUMERIC_MAP[&#39;:&#39;] = 44;const CODE_WORDS_LENGTH = [  // 1  [19,16,13,9], // L M Q H  // 2  [34,28,22,16],  // 3  [55,44,34,26],  // ...  [80,64,48,36],  [108,86,62,46],  [136,108,76,60],  [156,124,88,66],  [194,154,110,86],  [232,182,132,100],  [274,216,154,122],  [324,254,180,140],  [370,290,206,158],  [428,334,244,180],  [461,365,261,197],  [523,415,295,223],  [589,453,325,253],  [647,507,367,283],  [721,563,397,313],  [795,627,445,341],  [861,669,485,385],  [932,714,512,406],  [1006,782,568,442],  [1094,860,614,464],  [1174,914,664,514],  [1276,1000,718,538],  [1370,1062,754,596],  [1468,1128,808,628],  [1531,1193,871,661],  [1631,1267,911,701],  [1735,1373,985,745],  [1843,1455,1033,793],  [1955,1541,1115,845],  [2071,1631,1171,901],  [2191,1725,1231,961],  [2306,1812,1286,986],  [2434,1914,1354,1054],  [2566,1992,1426,1096],  [2702,2102,1502,1142],  [2812,2216,1582,1222],  // 40  [2956,2334,1666,1276],]/** * 确定编码模式 * @param { string } value 原始字符串 */function detectEncodingMode(value) {  if (/[0-9]/.test(value)) return ENCODING_MODE_NUMBER;  if (/[0-9A-Z$%\\*+-\\/.:\\s]/.test(value)) return ENCODING_MODE_ALPHANUMERIC;  return ENCODING_MODE_BYTE;}/** * 确定版本号 * @param { string } value 原始字符串 * @param { &#39;L&#39; | &#39;M&#39; | &#39;Q&#39; | &#39;H&#39; } correctLevel 容错等级 * @param { &#39;ENCODING_MODE_NUMBER&#39; |  &#39;ENCODING_MODE_ALPHANUMERIC&#39; | &#39;ENCODING_MODE_BYTE&#39; | &#39;ENCODING_MODE_KANJI&#39; } encodingMode 编码模式 */function detectVersion(value, correctLevel, encodingMode) {  let version = &#39;1&#39;;  const len = value.length;  const correctLevelIndex = CORRECT_LEVEL_ORDER.indexOf(correctLevel);  const encodingModeIndex = ENCODING_MODE_ORDER.indexOf(encodingMode);  for (let i = 0; i &lt; CHAR_CAPACITY.length; i++) {    if (len &lt;= CHAR_CAPACITY[i][correctLevelIndex][encodingModeIndex]) version = i + 1;    break;  }  return String(version);}/** * 确定编码模式指示器 * @param { &#39;ENCODING_MODE_NUMBER&#39; |  &#39;ENCODING_MODE_ALPHANUMERIC&#39; | &#39;ENCODING_MODE_BYTE&#39; | &#39;ENCODING_MODE_KANJI&#39; } encodingMode 编码模式 */function detectEncodingModeIndicator(encodingMode) {  switch (encodingMode) {    case ENCODING_MODE_NUMBER:      return &#39;0001&#39;;    case ENCODING_MODE_ALPHANUMERIC:      return &#39;0010&#39;;    case ENCODING_MODE_BYTE:      return &#39;0100&#39;;    case ENCODING_MODE_KANJI:      return &#39;1000&#39;;  }}/** * 确定字符数量指示器 * @param { string } value 原始字符串 * @param { string } version 版本号（1-40） * @param { &#39;ENCODING_MODE_NUMBER&#39; |  &#39;ENCODING_MODE_ALPHANUMERIC&#39; | &#39;ENCODING_MODE_BYTE&#39; | &#39;ENCODING_MODE_KANJI&#39; } encodingMode 编码模式 */function detectCharCountIndicator(value, version, encodingMode) {  const encodingModeIndex = ENCODING_MODE_ORDER.indexOf(encodingMode);  let charCountIndicatorLenTableIndex = 0;  if (Number(version) &lt;= 9) charCountIndicatorLenTableIndex = 0;  if (Number(version) &gt;= 10 &amp;&amp; Number(version) &lt;= 26) charCountIndicatorLenTableIndex = 1;  if (Number(version) &gt;= 27) charCountIndicatorLenTableIndex = 2;  const valueLen = value.length;  const charCountIndicatorLen = CHAR_COUNT_INDICATOR_LENGTH[charCountIndicatorLenTableIndex][encodingModeIndex];  return valueLen.toString(2).padStart(charCountIndicatorLen, &#39;0&#39;);}/** * 编码数字 * @param { string } value 原始字符串 */function encodeDataWithNumberMode(value) {  return Number(value).toString(2);}/** * 编码字母数字 * @param { string } value 原始字符串 */function encodeDataWithAlphanumericMode(value) {  // 两两分割  const splittedValue = value.split(/(.{2})/).filter(i =&gt; !!i);  return splittedValue.reduce((r, item) =&gt; {    const current = []    item.split(&#39;&#39;).forEach(i =&gt; {      // 找到分组内每个字符对应的索引      current.push(ENCODING_MODE_ALPHANUMERIC_MAP[i]);    })    let result = &#39;&#39;    // 奇数长度字符串，索引值转二进制左侧补 0 到 6 位    if (!current[1]) result = current[0].toString(2).padStart(6, &#39;0&#39;);    // 偶数长度字符串，45 * [0] + [1] 转二进制左侧补 0 到 11 位，    if (current[1]) result = (45 * current[0] + current[1]).toString(2).padStart(11, &#39;0&#39;);    return `${r}${result}`;  }, &#39;&#39;);}/** * 编码字节 * @param { string } value 原始字符串 */function encodeDataWithByteMode(value) {  return value.split(&#39;&#39;).reduce((r, item) =&gt; {    return `${r}${item.charCodeAt(0).toString(2).padStart(8, &#39;0&#39;)}`;  }, &#39;&#39;);}/** * 编码汉字 * @param { string } value 原始字符串 */function encodeDataWithKanjiMode(value) {  // 略}/** * 合并最终计算结果 * @param { string } encodingModeIndicator 编码模式指示器 * @param { string } charCountIndicator 字符数量指示器 * @param { string } encodedData 编码后的结果 * @param { string } version 版本号（1-40） * @param { &#39;L&#39; | &#39;M&#39; | &#39;Q&#39; | &#39;H&#39; } correctLevel 容错等级 */function mergeEncodedData(encodingModeIndicator, charCountIndicator, encodedData, version, correctLevel) {  const repeatBits = [&#39;11101100&#39;, &#39;00010001&#39;];  const correctLevelIndex = CORRECT_LEVEL_ORDER.indexOf(correctLevel);  const codeWordsBitsLen = CODE_WORDS_LENGTH[version - 1][correctLevelIndex] * 8; // 比特长度  let result = `${encodingModeIndicator}${charCountIndicator}${encodedData}`;  const codeWordsDiff = codeWordsBitsLen - result.length;  // 直接补 0 到相应长度  if (codeWordsDiff &lt;= 4) return result.padEnd(codeWordsBitsLen, &#39;0&#39;);  // 先补四个 0  result = result.padEnd(result.length + 4, &#39;0&#39;);  // 再补到 8 的倍数  result = result.padEnd(result.length + 8 - result.length % 8, &#39;0&#39;);  // 长度还是不够，再补重复字节  const len = result.length;  for (let i = 0; i &lt; codeWordsBitsLen - len; i += 8) {    result = `${result}${repeatBits[(i / 8) % 2]}`;  }  return result;}/** * 编码 * @param { string } value 原始字符串 * @param { string } correctLevel 容错等级 */function encodeData(value, correctLevel = &#39;L&#39;) {  const encodingMode = detectEncodingMode(value);  const version = detectVersion(value, correctLevel, encodingMode);  const encodingModeIndicator = detectEncodingModeIndicator(encodingMode);  const charCountIndicator = detectCharCountIndicator(value, version, encodingMode)  let encodedData = &#39;&#39;;  switch (encodingMode) {    case ENCODING_MODE_NUMBER:      encodedData = encodeDataWithNumberMode(value);      break;    case ENCODING_MODE_ALPHANUMERIC:      encodedData = encodeDataWithAlphanumericMode(value);      break;    case ENCODING_MODE_BYTE:      encodedData = encodeDataWithByteMode(value);      break;    case ENCODING_MODE_KANJI:      encodedData = encodeDataWithKanjiMode(value);      break;  }  return mergeEncodedData(encodingModeIndicator, charCountIndicator, encodedData, version, correctLevel);}encodeData(&#39;HELLO WORLD&#39;, &#39;Q&#39;); // -&gt; 00100000010110110000101101111000110100010111001011011100010011010100001101000000111011000001000111101100</code></pre><h3 id="容错和纠错"><a href="#容错和纠错" class="headerlink" title="容错和纠错"></a>容错和纠错</h3><p>讲了这么久，终于可以来到二维码最核心的部分，容错纠错</p><p>二维码能够大规模普及的很重要因素就是容错，即使一部分画面被污损，依旧可以被识别，而容错的实现原理，就是纠错算法中的里德-所罗门码</p><p>里德-所罗门码，可以对目标信息进行冗余拓展，在传输过程中，只要出错量少于事先定义好的值，就能完美的纠错解码</p><blockquote><p>本节会涉及到一些简单的数学知识，包括有限域、多项式等</p></blockquote><h4 id="有限域"><a href="#有限域" class="headerlink" title="有限域"></a>有限域</h4><blockquote><p>熟悉的朋友可以略过</p></blockquote><p>有限域是指包含有限个元素的域，这是一个封闭的域，域内元素的四则运算，总会得到域内的结果</p><p>有限域又称，伽罗瓦域（Galois field），用 GF 表示</p><p><img src="./13d7f9f1f837dd8322d8dc16e9a699c0.svg" alt=""></p><p>表示含有 p 个元的有限域，p 必须是质数的方幂，如</p><p><img src="./2ccf2592479bbf2c2f0d62dadecc1cf5.svg" alt=""></p><p>域内有 <code>2^8 = 256</code> 个元</p><h5 id="有限域的四则运算"><a href="#有限域的四则运算" class="headerlink" title="有限域的四则运算"></a>有限域的四则运算</h5><p>有限域中的四则运算，加等于减，乘等于除，并且四则运算的结果也必定在域中</p><p>以</p><p><img src="./c06d564797fc959a4d16fbb5ecda75c0.svg" alt=""></p><p>为例，域内有8个数，分别是 <code>0 1 2 3 4 5 6 7</code> ，对应的二进制如下：</p><p><img src="./1612328893440-5cce8725-1853-4308-b4e4-d95793a12e10.png" alt=""></p><ul><li><p>有限域中的加减都是异或运算，如 <code>1 + 2 = 1 ^ 2 = 001 ^ 010 = 011 = 3</code> ，得出 </p><p><img src="./c06d564797fc959a4d16fbb5ecda75c0.svg" alt=""></p><p>的加法表如下：</p></li></ul><table><thead><tr><th style="text-align:center">＋</th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">6</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">5</td><td style="text-align:center">4</td><td style="text-align:center">7</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">4</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">7</td><td style="text-align:center">8</td><td style="text-align:center">5</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">5</td><td style="text-align:center">4</td><td style="text-align:center">7</td><td style="text-align:center">6</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">7</td><td style="text-align:center">6</td><td style="text-align:center">5</td><td style="text-align:center">4</td><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr></tbody></table><ul><li><p>有限域中的乘除较为复杂，规则如下：</p><ul><li>两个数先做模二相乘</li><li>如果结果不在域内，再除以固定值 1011，取余数作为结果</li></ul><p>模二加法： <code>0 + 0 = 0; 0 + 1 = 1; 1 + 0 = 1; 1 + 1 = 0</code><br>模二减法： <code>0 - 0 = 0; 0 - 1 = 1; 1 - 0 = 1; 1 - 1 = 0</code><br>模二乘法： <code>0 * 0 = 0; 0 * 1 = 0; 1 * 0 = 0; 1 * 1 = 1</code><br>模二除法： <code>0 / 0 = 0; 1 / 1 = 1</code></p><p>以 <code>6 * 7</code> 为例， <code>6 * 7 = 110 * 111</code> ，模二相乘算法如下：</p><p><img src="./1ecaac7b4f73ba833ec2731726a804d5.svg" alt=""></p><p>结果为 <code>10010 = 39</code> ，大于域中的数，所以继续做模二除法：</p><p><img src="./7a5a78774f6415a69c7b9e71c3e8172f.svg" alt=""></p><p>结果为余数，即 <code>100</code> ，得出</p><p><img src="./c06d564797fc959a4d16fbb5ecda75c0.svg" alt=""></p><p>的乘法表如下：</p></li></ul><table><thead><tr><th style="text-align:center"><strong>x</strong></th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">6</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">2</td><td style="text-align:center">4</td><td style="text-align:center">6</td><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">7</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">6</td><td style="text-align:center">5</td><td style="text-align:center">7</td><td style="text-align:center">4</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">0</td><td style="text-align:center">4</td><td style="text-align:center">3</td><td style="text-align:center">7</td><td style="text-align:center">6</td><td style="text-align:center">2</td><td style="text-align:center">5</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">1</td><td style="text-align:center">4</td><td style="text-align:center">2</td><td style="text-align:center">7</td><td style="text-align:center">3</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">0</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">1</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">2</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">0</td><td style="text-align:center">7</td><td style="text-align:center">5</td><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">6</td><td style="text-align:center">4</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h4><blockquote><p>熟悉的朋友可以略过</p></blockquote><p>多项式，英文 Polynomial ，形如</p><p><img src="./2048d7946a062b722175aeb52a1f6874.svg" alt=""></p><p>可以含有常数、变量、指数，指数只能是 0、1、2</p><h5 id="多项式和二进制"><a href="#多项式和二进制" class="headerlink" title="多项式和二进制"></a>多项式和二进制</h5><p>多项式和二进制数一一对应，规则是：存在指数的项记为1，不存在的记为0</p><p>以</p><p><img src="./2b8d9826228308b56556b3bf19950c2e.svg" alt=""></p><p>为例，指数存在的项分别是， <code>0 1 2 4 5 8 10</code> ，那最终二进制数的这几位（从右向左）都为1，其他为0，也就是</p><p><img src="./4b49d5b5aea9686479fb23ac7654c44d.svg" alt=""></p><p>易得结果 <code>10100110111</code> </p><p>反过来，以 <code>11111100101</code> 为例，指数存在的项应该是 <code>0 2 5 6 7 8 9 10</code> ，结果为</p><p><img src="./97037a516df3779ee8ab4ff7428bf7e7.svg" alt=""></p><h5 id="多项式长除法"><a href="#多项式长除法" class="headerlink" title="多项式长除法"></a>多项式长除法</h5><p>多项式除以或者乘以多项式，结果都是多项式，为了计算除以的结果，这里讲下多项式的长除法</p><p>如 <img src="./e598555faf247c4f8663f51fe0034d41.svg" alt=""></p><p>计算过程如下：</p><video id="video" controls preload="none" style="width: 100%;"><br>  <source id="mp4" src="./1.mp4" type="video/mp4"><br></video><p>再如无法整除的例子</p><p><img src="./96b8d5f2570e67092a648d00eeb215af.svg" alt=""></p><p>计算过程如下：</p><video id="video" controls preload="none" style="width: 100%;"><br>  <source id="mp4" src="./2.mp4" type="video/mp4"><br></video><h4 id="里德-所罗门编码"><a href="#里德-所罗门编码" class="headerlink" title="里德-所罗门编码"></a>里德-所罗门编码</h4><p>讲完基础知识，下面讲解里德-所罗门是如何做到纠错的</p><p>要做到对某个字符进行纠错，必须知道两个信息：</p><ul><li>这串字符错了</li><li>错误的值与正确的值的误差是多少</li></ul><p>先看下里德-所罗门（RS）编码的图解：</p><p><img src="./1612504457088-d5ddf0b9-45c1-40bf-95a3-542398b9b3de.png" alt=""></p><p>计算机体系中，一个字节有八个比特，所以最常用的RS编码是</p><p><img src="./23b051c3910814ebbf0f5db7530d65f0.svg" alt=""></p><p>255代表整个密语的比特数，223代表原始数据比特数，校验数据比特数则为 <code>255 - 223 = 32</code> ，上图中的变量如下：</p><ul><li>m = 8</li><li>n = 255</li><li>k = 223</li><li>2t = 32</li></ul><p>同样，涉及到伽罗瓦域的计算，也使用拥有255个元的</p><p><img src="./2ccf2592479bbf2c2f0d62dadecc1cf5.svg" alt=""></p><p>再看下RS规定的编码算法：</p><p><img src="./1612507008790-d4d06cfa-e6bb-4501-97ba-4f89c989f7d8.png" alt="编组 28.png"></p><blockquote><p>举例，如 <code>2021</code> 这个字符，我们的目标是得到一串“加密”后的字符，修改加密后字符中的任意值，通过算法都可以得到 <code>2021</code> 这个原始值</p><p>待补充。</p></blockquote><h4 id="二维码规范中的纠错码计算"><a href="#二维码规范中的纠错码计算" class="headerlink" title="二维码规范中的纠错码计算"></a>二维码规范中的纠错码计算</h4><ul><li>分组</li><li>计算</li><li>合并</li></ul><h3 id="绘制"><a href="#绘制" class="headerlink" title="绘制"></a>绘制</h3><p>回顾以上所有信息，整理整个二维码各个区域的绘制顺序如下</p><ul><li>绘制定位区</li><li>绘制分隔区</li><li>绘制矫正区</li><li>绘制时序信息</li><li>绘制格式信息</li><li>绘制版本信息</li><li>绘制数据区</li></ul><p>除数据区外，其他区域如何绘制都以详细讲解，本节主要关注数据区的绘制逻辑，如下：![编组 19.png](./1612510048074-c1a2d072-8874-4916-9a46-ff3f6c61c25c.png过</p><h3 id="掩码"><a href="#掩码" class="headerlink" title="掩码"></a>掩码</h3><p>经过一系列复杂的步骤之后，终于来到二维码生成的最后一步，掩码</p><p>掩码之前的图案很可能如下图，特别是字符较少，大部分需要用0填充的时候：</p><p><img src="./1612512864307-c078eefa-73da-4dbc-b9bb-80f2343c9d44.png" alt="image.png"></p><p>所以掩码其实就是对最后的数据区进行操作，让图案更加零散，便于机器识别，不同的掩码模式会根据坐标和对应的计算规则进行异或运算（如 0,3 是 1，计算后公式成立，取反改为 0）</p><p>上文提到，二维码规范中的掩码模式有八种，各种掩码模式的计算逻辑如下：</p><table><thead><tr><th style="text-align:center">掩码模式编号</th><th style="text-align:center">计算逻辑（根据坐标计算公式，成立则取反）</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">(x + y) % 2 === 0</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">x % 2 === 0</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">y % 3 === 0</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">(x + y) % 3 === 0</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">(floor(x / 2) + floor(y / 3)) % 2 === 0</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">((x <em> y) % 2) + ((x </em> y) % 3) === 0</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">(((x <em> y) % 2) + ((x </em> y % 3))) % 2 === 0</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">(((x + y) % 2) + ((x +*y) % 3)) % 2 === 0</td></tr></tbody></table><p>当然，掩码模式的选择并不是随机任选，而是根据掩码模式计算出四个惩罚分，选择惩罚分总和最低的那种模式作为最终掩码模式。惩罚分计算逻辑如下（<strong>惩罚分的计算，需要包含二维码所有区域</strong>）：</p><ul><li><p>惩罚分一：</p><p>同行或同列连续5块颜色相同记三分，每多一块加一分</p><p><img src="./1612512087955-bf0e6221-71b8-403b-945f-79a4fd46b58c.png" alt="image.png"></p></li><li><p>惩罚分二：</p><p><code>m * n</code> 的同色色块，记分</p><p><img src="./ef56cec149eea65847106fd9bc28636f.svg" alt=""></p><p>比如 <code>2*2</code> 色块相同，则记 3 分， <code>3*3</code> 色块相同，则记 12 分</p><p><img src="./1612512260779-b4103f74-d042-4996-88ba-78257cc0388d.png" alt="image.png"></p></li><li><p>惩罚分三：</p><p>同行或者同列出现 <code>10111010000</code> 或者 <code>00001011101</code> 则记 40 分</p><p><img src="./1612512697828-19920556-19ef-4d14-9992-e85f68058a18.png" alt="编组 31.png"></p></li><li><p>惩罚分四：</p><p>用黑色色块在整个二维码中的占比，减去50%得到绝对值，每差5%记10分，不满5%的忽略，比如黑色色块占        62%，则应该记 <code>Math.floor(Math.abs(62 - 50) / 5) * 3 = 20</code> 20分</p><p>图略。</p></li></ul><p>以 <code>HELLO WORLD</code> 容错 <code>Q</code> 为例，未掩码绘制的图案如下：</p><p>用八种不同的掩码模式绘制结果及惩罚分如下：</p><p><img src="./1612511813652-1dd17ddc-792e-43ff-ba02-948273815aa6.png" alt="image.png"></p><p>可知惩罚分最少的是掩码模式一，所以最终结果就是：</p><p><img src="./1612511837629-d60548a6-544c-4953-a4f8-2b864959fc82.png" alt="image.png"></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>二维码的字符容量是如何计算的？<a href="https://stackoverflow.com/questions/34465106/how-to-calculate-the-maximum-of-data-bits-for-each-qr-code" target="_blank" rel="external">https://stackoverflow.com/questions/34465106/how-to-calculate-the-maximum-of-data-bits-for-each-qr-code</a></li><li>各个流程性能更高的算法</li><li>RS 编码公式的推导</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;讲一讲一维码、二维码的生成原理，长文预警！&lt;/p&gt;
&lt;h2 id=&quot;一维码&quot;&gt;&lt;a href=&quot;#一维码&quot; class=&quot;headerlink&quot; title=&quot;一维码&quot;&gt;&lt;/a&gt;一维码&lt;/h2&gt;&lt;p&gt;barcode 白皮书：&lt;a href=&quot;https://www.barc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>折腾折腾家庭网络架构</title>
    <link href="https://luoyefe.com/blog/2020/12/18/%E6%8A%98%E8%85%BE%E6%8A%98%E8%85%BE%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84/"/>
    <id>https://luoyefe.com/blog/2020/12/18/折腾折腾家庭网络架构/</id>
    <published>2020-12-18T10:13:00.000Z</published>
    <updated>2023-05-24T09:56:27.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="先上图"><a href="#先上图" class="headerlink" title="先上图"></a>先上图</h2><blockquote><p>全屏，放大，看细节</p></blockquote><p><img src="./1607846697398-cbedba69-c3d7-4b34-94ef-3271b8d86f6c.svg" alt=""></p><h2 id="来吧，展示"><a href="#来吧，展示" class="headerlink" title="来吧，展示"></a>来吧，展示</h2><ul><li><p>聚阅：<a href="http://render.luoyefe.com/juyue" target="_blank" rel="external">http://render.luoyefe.com/juyue</a></p></li><li><p>goh5：太老，不展示了</p></li><li><p>喝水提醒：非节假日早九到晚九提醒喝水</p><p><img src="./1607846816545-fa7b5336-3a9c-47cb-afee-741356479b5f.png" alt="image.png"></p></li><li><p>plex：家庭影音、照片等媒体资源管理工具</p><p><img src="./1607846937467-f3d2f69d-1db5-422e-9dbc-ef59b9bcd578.png" alt="image.png"></p><p><img src="./1607847007968-e76c73aa-dd35-4e03-b34f-55fcaf2a70a9.png" alt="image.png"></p></li><li><p>Nginx：端口转发，反代内网服务，允许外网通过域名的 80/443 端口访问内网服务</p><p><img src="./1607847173948-57c3a835-11a3-445b-9ac8-b925a0091125.png" alt="image.png"></p></li><li><p>Portaniner: Docker 容器管理</p><p><img src="./1607847297365-a82aa362-15a3-4ca5-ba75-b680e4b48461.png" alt="image.png"></p></li></ul><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><p>域名备案不复杂，阿里云现在的备案流程大概一个星期即可</p><h3 id="SSL-证书"><a href="#SSL-证书" class="headerlink" title="SSL 证书"></a>SSL 证书</h3><ul><li><p>各云厂商免费的证书（需一年重新生成一次，麻烦）</p></li><li><p><a href="https://cheapsslsecurity.com/" target="_blank" rel="external">https://cheapsslsecurity.com/</a> 按需购买全球最便宜的 SSL 证书</p></li></ul><h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><p>推荐度从上到下</p><ul><li>各厂商的新手服务器</li><li>阿里云国际版机器</li><li>阿里云</li></ul><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>云厂商负载均衡产品或者自建 nginx，我是买了一台 1H0.5G 的超低配 ECS 自建 nginx。</p><h3 id="软路由"><a href="#软路由" class="headerlink" title="软路由"></a>软路由</h3><p>路由分硬路由和软路由，硬路由就是传统路由器，tplink、华硕、网件等等，常用功能完备，但是性能较弱，溢价较高，可玩性太低。</p><p>如果你爱折腾，并且希望家庭内网免工具科学上网、无广告，并且联网设备较多，并且带宽高于100M（小水管就放弃吧），快上软路由！</p><p>软路由其实就是一台多网口的服务器，你可以选择 厂商准系统 &gt; 自建 &gt; NUC 工控机 &gt; 老电脑 + pcie 多网口网卡。</p><p>软路由系统，openwrt/lede 都试试，找个你喜欢的。</p><p>科学上网，自己摸索吧~</p><p>去广告，软路由系统都带。</p><h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><p>千兆POE交换机。</p><h3 id="AP"><a href="#AP" class="headerlink" title="AP"></a>AP</h3><p>装修的时候，吊顶走一根网线！！！AP直接吸顶放在全家中央，哪里都是信号满格，没到多层别墅或者大平层的兄弟不要折腾无线漫游，坑死。</p><h3 id="NAS（重点！！！）"><a href="#NAS（重点！！！）" class="headerlink" title="NAS（重点！！！）"></a>NAS（重点！！！）</h3><h4 id="NAS-选购"><a href="#NAS-选购" class="headerlink" title="NAS 选购"></a>NAS 选购</h4><ul><li>您有钱嘛？-&gt; 群晖</li><li>性价比高，不喜欢折腾？-&gt; 威联通</li><li>轻量使用（无影音解码、无挂机下载、无远程桌面） -&gt; 树莓派、成品 NUC 工控机</li><li>常规使用（低功耗、高性能、大容量）-&gt; 自建（后叙详情）</li><li>重度使用 -&gt; 2U服务器 + 机架（芜湖起飞，没涉及的领域，大佬走好）</li></ul><p><strong>常规使用自建NAS：</strong></p><blockquote><p>总则：低功耗、高性能、大容量，具体硬件型号就不推荐了额~</p></blockquote><ul><li>CPU：别选AMD，TDP太高，稳定性堪忧；选新不选旧，10100 比 8100 强了何止2代的差距；</li><li>主板：sata 口 &gt;= 6；支持所选U的入门款；</li><li>内存：需要虚拟化 windows 的话至少 16G，其他 8G 足够</li><li>硬盘：单盘越大越好；5400转速，噪音低；</li><li>显卡：CPU 集显已经足够硬解2k视频，如需要更高的 gpu 能力可以加</li><li>其他：电源、散热、机箱看着办吧</li></ul><h4 id="NAS-数据"><a href="#NAS-数据" class="headerlink" title="NAS 数据"></a>NAS 数据</h4><p>家庭使用不推荐任何阵列！！！</p><p>阵列对硬盘要求很高，长时间的恢复过程有大量的读写，极有可能对硬盘造成二次伤害，阵列卡同理。</p><p>最推荐的做法，<strong>重要数据定时、定条件冷备。**</strong>非要阵列可以选选择 snapraid，需要一块容量大于任意一块数据盘的校验盘，恢复数据时，只用唤醒校验盘，不会对其他数据盘造成二次伤害。</p><h4 id="NAS-系统"><a href="#NAS-系统" class="headerlink" title="NAS 系统"></a>NAS 系统</h4><p>太多了，freenas、unraid、unas、openmediavault 等等，但是如果你有基本的服务器知识，推荐使用原生 linux 系统。大部分的 nas 系统只是提供了一套UI外加数据池、阵列等能力，却带来了很多非标 linux 的问题，深入使用发生问题难以排查，所以我选择 debian 作为 nas 系统。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><p><strong>家庭宽带怎么获取公网IP？</strong></p><p>电话宽带服务商，将光猫改为桥接模式，自行在路由器上拨号，即可获取公网IP。</p></li><li><p><strong>实在没有公网IP怎么办？</strong></p><p>在有公网IP的 vps 上部署 frp 内网穿透服务，使用 frp 访问家庭内网</p></li><li><p><strong>家庭带宽要多大？怎么办最便宜？</strong></p><p>提速降费说了这么多年了，百兆时代该过去了，千兆你好（现在精装的新房已经超六类网线，支持万兆网速）。</p><p>办宽带？上闲鱼！千兆电信只要999！</p></li><li><p><strong>外网如何不带端口号，直接通过域名访问内网服务？</strong></p><ul><li>通过 DDNS，把域名（比如 *.home.example.com）解析到家内的公网 IP </li><li>此时路由器做端口转发，通过 xx.home.example.com:port 已经可以访问内网服务</li><li>公网 nginx 代理 <em>.route.example.com 到 </em>.home.example.com 的开放端口（比如 10080）</li><li>路由器转发开放端口（比如 10080）到内网 nginx 服务端口（比如 80）</li><li>内网 nginx 反代具体域名到相应端口，比如 xx.route.example.com 到 192.168.1.111:8080</li><li>此时通过 xx.route.example.com 可以直接访问内网服务</li></ul><p>相当于在内网的 nginx 做 dns 解析服务，把 <em>.route.example.com 的 </em>，具体解析到 xx</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;先上图&quot;&gt;&lt;a href=&quot;#先上图&quot; class=&quot;headerlink&quot; title=&quot;先上图&quot;&gt;&lt;/a&gt;先上图&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;全屏，放大，看细节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;./1607846697
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NPM 的基础知识</title>
    <link href="https://luoyefe.com/blog/2020/12/18/NPM-%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://luoyefe.com/blog/2020/12/18/NPM-的基础知识/</id>
    <published>2020-12-18T05:09:00.000Z</published>
    <updated>2023-05-24T09:56:27.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="npm-的安装"><a href="#npm-的安装" class="headerlink" title="npm 的安装"></a>npm 的安装</h2><p>作为 <code>NodeJS</code> 的包管理工具， 安装 <code>NodeJS</code> 的过程中， <code>npm</code> 就会自动安装，而安装 <code>NodeJS</code> 的方法一般有三种：</p><ul><li><p><strong>官网安装包</strong></p><p>官方已经为各个系统构架好安装包，访问 <a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a> 根据系统下载安装即可。</p></li><li><p><strong>编译安装</strong></p><p>如果想要体验 <code>NodeJS</code> 最新特性，可以从源码编译安装，较为复杂，需 clone 源码并安装整套的编译工具，具 体可访问 <a href="https://github.com/nodejs/node/blob/master/BUILDING.md" target="_blank" rel="external">https://github.com/nodejs/node/blob/master/BUILDING.md</a>，这里不展开。</p></li><li><p><strong><code>NodeJS</code> 版本管理工具</strong></p><p>上面两种安装方式都有一个无法避免的问题：无法切换版本。 <code>NodeJS</code> 从和 <code>io.js</code> 决裂又合并后的第一个大      版本，v2 之后，就采用 Long Term Support（LTS）的方式发布 <code>NodeJS</code> ，这意味着 <code>NodeJS</code> 的版本会快速迭代。从15年的 v2，到现如今20年的 v15，注定会出现某些特性不兼容的现象，那注定会遇到切换<code>NodeJS</code> 运行时版本的问题（LTS 是长期支持版本，版本号为偶数，每年4月发布，奇数号版本为不稳定版本，建议使用 LTS 版本）。</p><p><code>nvm</code> 和 <code>n</code> 就是为了解决这个问题，两者在功能和使用上没有明显差异，但是实测 <code>nvm</code> 会导致 <code>zsh</code> 打开缓慢，可见官方 <a href="https://github.com/nvm-sh/nvm/issues/860" target="_blank" rel="external">issue</a> ，所以推荐使用 <code>n</code> 来管理 <code>NodeJS</code> 版本</p><p>访问 <code>n</code> 的 <a href="https://github.com/tj/n" target="_blank" rel="external">官方仓库</a>，可以看到安装脚本：</p><pre><code class="line-numbers language-bash">curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n</code></pre><p>安装后会自动安装最新的 LTS 版本， <code>npm</code> 也会安装最新版本（ <code>n</code> 的具体使用此处不展开）。</p></li></ul><h2 id="npm-的组成"><a href="#npm-的组成" class="headerlink" title="npm 的组成"></a>npm 的组成</h2><p>先看下 npm 的组成：</p><ul><li>npm cli: 用于开发者本地开发、安装、更新、发布模块</li><li>npm web: 用于展示、搜索模块，官方网站：<a href="https://www.npmjs.com/" target="_blank" rel="external">https://www.npmjs.com/</a></li><li>npm registry（源）: 用于存储、管理模块，以及模块相关的用户信息、组织信息等，官方 registry：<a href="https://registry.npmjs.org" target="_blank" rel="external">https://registry.npmjs.org</a></li></ul><h2 id="npm-的源"><a href="#npm-的源" class="headerlink" title="npm 的源"></a>npm 的源</h2><p>官方的 registry 属于公开源，虽然有私有模块的能力，但是实际数据也是存储在 <code>npm</code> 的服务器上，对于企业来说，风险较大，所以企业用户一般采用自建源的方式维护私有模块。</p><p><strong>常见的源如下：</strong></p><ul><li>官方：<a href="https://registry.npmjs.org" target="_blank" rel="external">https://registry.npmjs.org</a></li><li>阿里国内源（只镜像官方数据）：<a href="https://registry.npm.taobao.org/" target="_blank" rel="external">https://registry.npm.taobao.org/</a></li><li>阿里集团私有源（镜像官方数据 + 私有模块）：<a href="https://registry.npm.alibaba-inc.com" target="_blank" rel="external">https://registry.npm.alibaba-inc.com</a></li></ul><p><strong>源的使用：</strong></p><ul><li><p>临时使用</p><pre><code class="line-numbers language-bash">npm install [模块名] --registry=https://registry.npm.alibaba-inc.com</code></pre></li><li><p>长期使用</p><p><code>npm</code> 的配置文件路径为 <code>~/.npmrc</code> ，如果需要长期使用其他源，可以直接更改配置文件</p><pre><code class="line-numbers language-bash">vim ~/.npmrc</code></pre><pre><code class="line-numbers language-none">// ~/.npmrcregistry=https://registry.npm.alibaba-inc.com</code></pre></li><li><p>分 scope 使用</p><p>实际使用中，经常会碰到在未连接内网的情况下安装公开模块，此时就需要切换源才可安装，因为，源可以按照 scope 分别配置。</p><p>阿里集团内的 scope 有三种， <code>@ali</code> <code>@alipay</code> <code>@alife</code> ，所以，配置如下：</p><pre><code class="line-numbers language-none">// ~/.npmrc@ali:registry=https://registry.npm.alibaba-inc.com@alipay:registry=https://registry.npm.alibaba-inc.com@alife:registry=https://registry.npm.alibaba-inc.comregistry=https://registry.npm.taobao.org/</code></pre><p>如果不想手动修改源，可以使用开源工具 <a href="https://github.com/Pana/nrm" target="_blank" rel="external">nrm</a>。</p></li></ul><p>接下来我们看下几种 <code>npm</code> 的区别。</p><h2 id="npm-cli-的差异"><a href="#npm-cli-的差异" class="headerlink" title="npm cli 的差异"></a>npm cli 的差异</h2><h3 id="npm-和-yarn-的区别"><a href="#npm-和-yarn-的区别" class="headerlink" title="npm 和 yarn 的区别"></a>npm 和 yarn 的区别</h3><p><code>yarn</code> 诞生在 <code>npm</code> v4 的时代，主要解决两个问题：</p><ul><li><p><strong>依赖平铺</strong></p><p>早期，使用 windows 的同学如果删除 <code>node_modules</code> 目录时，经常会遇到目录名太长，无法删除的问题，原因是 <code>npm</code> 在安装依赖时，会以树的方式新建目录，如下：</p><pre><code class="line-numbers language-none">app@1.0.0├─┬ module-a│ ├─┬ module-b│ │ ├─┬ module-c│ │ │ ├── module-d│ │ │ ├─┬ module-e├─┬ │ │ └── module-f  ├─┬ module-1  │ ├─┬ module-2  │ │ └── module-3  └─└── module-4</code></pre><p>如果依赖较深， <code>node_modules</code> 的目录层级会非常非常深，并且同版本的模块会被重复安装，所以，关于 <code>npm</code> 的这个问题，网络上就有了一张非常有名的图：<img src="./1607671117029-de91814a-f780-4dac-8b0f-e49d59609fb5.png" alt="image.png"></p></li><li><p><strong>版本锁定</strong></p><p>另一个就是版本锁定的问题，举个例子：某个前端项目依赖 <code>babel@6.9.0</code> ， <code>package.json</code> 里的 babel 版本号配置为，^6.9.0，<code>npm</code> 安装时会安装 <code>6.9.x</code> 的最新版本。如果 babel 发布了新版本 6.9.1，引入了一个 bug，项目构建失败，此时版本带来的问题就会被暴露。更极端的情况，一个运行时依赖的包，预发测试没问题，重新构建上线的过程中，包更新了，将会导致线上业务直接出问题。</p><p>虽然在 <code>package.json</code> 中可以锁定版本，但是只能锁当前项目所依赖的模块的版本，二级依赖或者更深则无法锁定，所以 <code>yarn</code> 引入了 <code>yanr.lock</code> 文件，用来记录整个依赖树的版本号，重新安装时，会以 lock 文件为准安装依赖。</p></li><li><p><strong>安装速度</strong></p><p><code>yarn</code> 采用了缓存 + 并行安装的方式加快依赖安装速度，极大减少安装耗时，用空间换时间的典型例子。</p><p>不过，在 <code>npm</code> 的不管更新中，上述问题都已经解决，并且解决的更加优秀，也新增了更优秀的新特性，所以，现如今<strong>更推荐使用 <code>npm</code> 管理依赖</strong>。</p></li></ul><h3 id="npm-和-cnpm-的区别"><a href="#npm-和-cnpm-的区别" class="headerlink" title="npm 和 cnpm 的区别"></a>npm 和 cnpm 的区别</h3><p>一句话总结， <code>npm</code> + 阿里国内源 = <code>cnpm</code> ，使用上和 <code>npm</code> 无区别。</p><h3 id="npm-和-tnpm-的区别"><a href="#npm-和-tnpm-的区别" class="headerlink" title="npm 和 tnpm 的区别"></a>npm 和 tnpm 的区别</h3><p><code>tnpm</code> 的定位更像 <code>yarn</code> ，从底层逻辑上针对依赖安装做了优化，采取了软链 + 缓存 + 平铺的方式加快安装、减少层级，不过这也带来了不少问题，比如最常见的，小程序的项目无法识别软链，或者软链导致 <code>npm bin</code> 找到的路径不正确等问题。</p><p>所以 <code>tnpm</code> 也引入了 mode 参数，允许使用 <code>npm</code> 或者 <code>yarn</code> 的模式，此时 <code>tnpm</code> 和更改源后的 <code>npm</code> <code>yarn</code> 无太大差异。</p><p><code>tnpm</code> 在包的发布上也做了很多改造，如只允许合法 scope 内的包发布、与内网信息打通、云端构建平台联动等。</p><p>总结：</p><ul><li><p><strong>安装用 <code>npm</code> + 内网源</strong></p></li><li><p><strong>发布用 <code>tnpm</code></strong></p></li></ul><h2 id="package-json-中的字段"><a href="#package-json-中的字段" class="headerlink" title="package.json 中的字段"></a>package.json 中的字段</h2><p><code>package.json</code> 是 <code>npm</code> 的配置文件，字段极多，复杂度较高，这里以常见的字段举例说明用法及相关知识。</p><h3 id="name、description、keywords"><a href="#name、description、keywords" class="headerlink" title="name、description、keywords"></a>name、description、keywords</h3><p>这三个字段用来描述模块的相关信息， <code>name</code> <code>description</code> 为 string， <code>keywords</code> 为 string 数组。</p><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><p>用于标记模块的版本号，遵循 semver 语义化版本规范，详解如下：</p><ul><li><p><strong>版本号格式</strong></p><p>版本号格式：<strong>x.y.z</strong>，每一位只能递增</p><ul><li>x：主版本号（major），当模块引入不兼容的 API 时，需要升级此版本号</li><li>y：次版本号（minor），当模块引入向下兼容的 API 时，需要升级此版本号</li><li>z：修订版本号（patch），当模块引入线下兼容的修复时，需要升级此版本号</li></ul></li><li><p><strong>先行版本</strong></p><p>当要发行测试版本，或者还未百分百验证的大版本时，需要先发布先行版本，先行版本号格式：<strong>x.y.z-[版本类型].[版本标记]</strong>，常见的先行版本如下：</p><ul><li>beta：内部测试版本</li><li>alpha：公开测试版本</li><li>rc：正式版本的候选版本（离正式发布仅一步之遥）</li></ul><p><strong>如，1.0.1-beta.0，16.7.9-alpha.a14cef56，17.0.0-rc.0 等。</strong></p></li></ul><h3 id="main"><a href="#main" class="headerlink" title="main"></a>main</h3><p>用于标记本模块的入口文件，默认值为 <code>./index.js</code> ，如：</p><pre><code class="line-numbers language-javascript">import moduleA from &#39;moduleA&#39;;</code></pre><p><code>NodeJS</code> 将解析 <code>node_modules/moduleA</code> 文件下 <code>package.json</code> 里的 main 字段，如配置为 <code>src/index.js</code> ，则实际效果为：</p><pre><code class="line-numbers language-javascript">import moduleA from &#39;moduleA/src/index&#39;;</code></pre><h3 id="bin"><a href="#bin" class="headerlink" title="bin"></a>bin</h3><p>用于标记本模块作为命令行工具时的命令名称和入口，如：</p><pre><code class="line-numbers language-json">{  &quot;name&quot;: &quot;cmd-test&quot;,  &quot;bin&quot;: {    &quot;cmd-test-init&quot;: &quot;./src/init.js&quot;,    &quot;cmd-test-build&quot;: &quot;./src/build.js&quot;,  }}</code></pre><p>如果全局安装 <code>cmd-test</code> 模块后，将会在系统路径中添加 <code>cmd-test-init</code> 和 <code>cmd-test-build</code> 这两个命令，执行后将分别运行对应的 js 文件。</p><h3 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h3><p>用于标记本项目中可用的脚本命令，由多个 bash 脚本组成，如：</p><pre><code class="line-numbers language-json">{  &quot;name&quot;: &quot;scripts-test&quot;,  &quot;scripts&quot;: {  &quot;dev&quot;: &quot;webpack dev&quot;,  &quot;build&quot;: &quot;webpack build&quot;  }}</code></pre><p>使用时，可以用 <code>npm run dev</code> <code>npm run build</code> 来执行相关命令。</p><p>scripts 中配置的 bash 脚本，会优先从 <code>./node_modules/.bin</code> 目录中找本地的 bin，再一级一级向上找，与 npm 的包解析逻辑一致（有空展开讲）。</p><p>讲到 scripts 有一个经常用到的工具， <code>npx</code> ，这是 <code>NodeJS</code> 自带的模块，主要有两个作用：</p><ul><li><p><strong>直接调用本地模块</strong></p><p>如上面例子中的 webpack，如果不通过 <code>npm run</code> ，则必须用 <code>./node_modules/.bin/webpack</code> 来调用。 <code>npx</code> 则可以简化这个过程，可以直接 <code>npx webpack</code> ， <code>npx</code> 会自动寻找 bin 所在路径，再进行调用。</p></li><li><p><strong>不安装的情况下调用全局模块</strong></p><p>比如 <code>create-react-app</code> ，这个包用于初始化 react 项目，正常使用时，需全局安装，再进行调用，使用 <code>npx</code> 则可以 <code>npx create-reac-app init</code> ， <code>npx</code> 会自动安装所需依赖，执行相关命令，执行完毕后删除依赖。</p><p>其他高级用法，可以查看官方仓库：<a href="https://github.com/npm/npx" target="_blank" rel="external">https://github.com/npm/npx</a></p></li></ul><h3 id="dependencies、devDependencies、peerDependencies"><a href="#dependencies、devDependencies、peerDependencies" class="headerlink" title="dependencies、devDependencies、peerDependencies"></a>dependencies、devDependencies、peerDependencies</h3><p>用于标记本项目的依赖：</p><ul><li>dependencies：运行时依赖</li><li>devDependencies：开发、构建时依赖</li><li>peerDependencies：前置依赖（即当前模块必须在安装了某模块后才可运行）</li></ul><p>安装模块时，带上 <code>--save</code> 将会把模块写入 <code>dependencies</code> 字段，带上 <code>--save-dev</code> 将会把模块写入 <code>devDependencies</code> 字段。</p><p>依赖的模块版本号规范如下：</p><ul><li>兼容 patch 版本号：~1.2.0、1.2.x、1.2（将会安装 patch 版本中最新的）</li><li>兼容 minor + patch 版本号：^1.2.0、1.x、1（将会安装 minor 版本中最新的）</li><li>兼容 major + minor + patch 版本号：*、x（将会安装 major 版本中最新的）</li><li>指定 dish-tag：beta、alpha（将会安装指定 dist-tag 的最新版本）</li></ul><h3 id="author"><a href="#author" class="headerlink" title="author"></a>author</h3><p>用于标记模块作者，格式为： <code>name&lt;mail@example.com&gt;</code> </p><h3 id="repository"><a href="#repository" class="headerlink" title="repository"></a>repository</h3><p>用于标记模块仓库地址，格式为：</p><pre><code class="line-numbers language-json">{  &quot;name&quot;: &quot;repository-test&quot;,  &quot;repository&quot;: &quot;https://gitlab.alipay-inc.com/group/repo.git&quot;}</code></pre><pre><code class="line-numbers language-json">{  &quot;name&quot;: &quot;repository-test&quot;,  &quot;repository&quot;: {    &quot;type&quot;: &quot;git&quot;,    &quot;url&quot;: &quot;git@gitlab.alipay-inc.com:group/repo.git&quot;  }}</code></pre><pre><code class="line-numbers language-json">{  &quot;name&quot;: &quot;repository-test&quot;,  &quot;repository&quot;: {    &quot;type&quot; : &quot;svn&quot;,    &quot;url&quot; : &quot;https://svn.alibaba-inc.com/svn/trunk/&quot;  }}</code></pre><h3 id="license"><a href="#license" class="headerlink" title="license"></a>license</h3><p>用于标记当前模块的代码许可证，不同的许可有不同的限制， <code>React</code> 此前就因为许可问题闹的沸沸扬扬，详解借用阮老师的一张图：<img src="./1607679142007-29b54106-6521-4230-9fc8-5841850f05a6.png" alt="image.png"></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>除了 npm 的官方字段之后，package.json 里也可以放其他工具的配置字段，比如 <code>eslint</code> <code>lint-stage</code> 等，具体使用可参考各工具的官方文档</p><h2 id="模块的发布"><a href="#模块的发布" class="headerlink" title="模块的发布"></a>模块的发布</h2><blockquote><p>这里以 <code>npm</code> 为例， <code>tnpm</code> 的使用类似 </p></blockquote><ul><li><p>注册账号</p><p>发布前需在相应的源注册账号，并确定账号的 scope（为了减少包重复的问题，目前 <code>npm</code> 已强制使用 scope 的形式管理模块，如 @luoyefe 等）。</p></li><li><p>登录</p><p>本地开发完成，发布模块前，需在本地进行登录，执行 <code>npm login</code> 输入账号密码邮箱即可。</p></li><li><p>发布</p><p>发布的命令为 <code>npm publish</code> ，执行后会找到 <code>package.json</code> 中的 <code>version</code> 字段进行发布。</p><p>上文提到 version 存在先行版本，比如 beta、alpha 等，npm 发布时也有相关概念，即 dist-tag，发布时可以指定 dist-tag 来发布不同的先行版本，如 <code>npm publish --tag beta</code> ，将发布 beta 版本。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;npm-的安装&quot;&gt;&lt;a href=&quot;#npm-的安装&quot; class=&quot;headerlink&quot; title=&quot;npm 的安装&quot;&gt;&lt;/a&gt;npm 的安装&lt;/h2&gt;&lt;p&gt;作为 &lt;code&gt;NodeJS&lt;/code&gt; 的包管理工具， 安装 &lt;code&gt;NodeJS&lt;/co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS 新特性：Temporal</title>
    <link href="https://luoyefe.com/blog/2020/09/21/JS-%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9ATemporal/"/>
    <id>https://luoyefe.com/blog/2020/09/21/JS-新特性：Temporal/</id>
    <published>2020-09-21T12:40:00.000Z</published>
    <updated>2023-05-24T09:56:27.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近日（2020.9.16）， <code>Moment</code> 团队发布<a href="https://momentjs.com/docs/#/-project-status/recommendations/" target="_blank" rel="external">声明</a>，宣布 <code>Moment</code> 将进入<strong>维护状态</strong>，除非必要，将不再更新：</p><ul><li>未来不会新增任何新特性</li><li>不会改成 <code>immutable</code> </li><li>不会做 <code>tree shakeing</code> ，也不会解决包体积问题</li><li>不会更新 v3 版本</li><li>不会修复 bug 或非预期行为，特别是长期以来的已知问题</li></ul><p>同时，声明中着重强调了新项目不要再使用 <code>Moment</code> ，并且给出了充分的理由，以及替代方案， 其中提到了一个正处于 stage2 状态的 js 新特性 <code>Temporal</code> ，虽然离生产还有很长的路，但是不妨提前学习下这个未来可以取代所有第三方时间库的新特性。</p><p>学习 <code>Temporal</code> 之前，先来看下从 JS 诞生之初就存在的 <code>Date</code> 有什么问题，为何重头设计一个全新的事件对象：</p><ul><li><p><strong>不支持时区</strong>：<code>Date</code> 对象无法修改时区，永远以当前系统的时区为准，如果需要计算不同时区的时间，只能手动根据时区之间的时间差手动计算</p></li><li><p><strong>时间格式化不可靠</strong>：这个很好理解，应该没有一个 JSER 会觉得原生的 <code>Date</code> 对象格式化成 <code>YYYY-MM-DD</code> 是个简单操作</p></li><li><p><strong><code>Date</code> 对象是 <code>mutable</code> 的</strong>：与 <code>String</code> 对象的所有方法都返回一个新对象，不会修改原始字符串对象不同，对 <code>Date</code> 对象的操作都会修改原始对象，导致结果难以保证</p></li><li><p><strong>夏令时行为诡异</strong>：中国有一段时间（1986-1991）实行过夏令时，所以这个时间段的时间在不同的浏览器上得到的时间戳不一致，并且没有直接判断是夏令时的 API</p></li><li><p><strong>时间计算 API 难用至极</strong>：需要计算两个时间的间隔或者时间增减时，API 及其难用</p></li><li><p><strong>等等</strong></p></li></ul><p>所以 TC39 工作组提出了遵循 <a href="https://zh.wikipedia.org/zh-hans/ISO_8601" target="_blank" rel="external">ISO_8601 标准</a> 的全新时间对象 <code>Temporal</code> 来解决这些问题，全新的对象将着眼于以下几个方面：</p><ul><li>提供简单易用的 API</li><li>提供 <code>immutable</code> 对象</li><li>严格的时间字符串格式</li><li>支持非公历、支持时区</li></ul><p>详细的 API 可以查看 <a href="https://tc39.es/proposal-temporal/docs/" target="_blank" rel="external">TC39文档</a>，接下来我们用实际的案例感受下 <code>Temporal</code> 的强大（在 <code>Temporal</code> 文档页面，已集成 polyfill，可在控制台直接调用）。</p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h3 id="获取-构造时间"><a href="#获取-构造时间" class="headerlink" title="获取/构造时间"></a>获取/构造时间</h3><p>相较于 <code>Date</code>，使用 <code>Temporal</code> 获取/构造时间有以下优点：</p><ul><li>最大精度为纳秒，可以对时间进行更精准的计算（为了配合纳秒， <code>Temporal</code> 以 <code>bigInit</code> 为基础参数） </li><li>标准的时间构造方法</li><li>完整的时间静态属性</li></ul><blockquote><p><code>bigInit</code> 是 JS 新特性之一，简单来讲，在 <code>number</code> 后跟上 <code>n</code> 即为一个 <code>bigInit</code> 变量，比如 <code>0n</code>  <code>12345678900987654321n</code> ，此处不具体展开。</p></blockquote><pre><code class="line-numbers language-javascript">// 当前系统时间const now = Temporal.now.dateTime().toString(); // -&gt; 2020-09-18T11:49:34.076618285// 忽略时区的绝对时间const now = Temporal.now.absolute().toString(); // -&gt; 2020-09-18T03:49:34.871974076Z// 构造距 1970-1-1 xx 纳秒的 Temporal 对象const now = new Temporal.Absolute(0n).toString(); // -&gt; 1970-01-01T00:00Z// 根据 年 月 日 时 分 秒 毫秒 微妙 纳秒 构造时间 !!!const now = new Temporal.DateTime(2020, 9, 20, 12, 15, 32, 666, 233, 999).toString(); // -&gt; 2020-09-20T12:15:32.666233999// 更全的时间静态属性const now = Temporal.now.dateTime();/* ⬇️⬇️⬇️{  year: 2020, // 年  month: 9, // 月  day: 21, // 日  hour: 17, // 时  minute: 18, // 分  second: 7, // 秒  millisecond: 771, // 毫秒  microsecond: 785, // 微妙  nanosecond: 972, // 纳秒  dayOfWeek: 1, // 全周的第几天（从1开始）  dayOfYear: 265, // 全年的第几天  weekOfYear: 39, // 全年的第几周  daysInWeek: 7, // 当前时间所在周的天数  daysInMonth: 30, // 当前时间所在月的天数  daysInYear: 366, // 当前时间所在年的天数  monthsInYear: 12, // 当前时间所在年的月数  isLeapYear: true, // 是否是闰年}*/</code></pre><h3 id="时间计算"><a href="#时间计算" class="headerlink" title="时间计算"></a>时间计算</h3><p>原生时间对象 <code>Date</code> 缺少时间计算相关 API，如果需要在当前时间基础上新增或减少天数得到另一个时间，只能通过先获取天数，再进行加减，再合并成完整时间，更要考虑跨天、跨月、跨年，甚至闰年、夏令时的影响，极其难用。</p><p>相比较而言， <code>moment.js</code> <code>day.js</code> 等第三方库提供了便捷的时间计算 API，我们来做个简单比较</p><pre><code class="line-numbers language-javascript">// day.js / moment.jsconst futureTime = dayjs().add(7, &#39;day&#39;).toString(); // -&gt; Mon, 28 Sep 2020 09:33:31 GMTconst futureTime = dayjs().subtract(7, &#39;d&#39;).toString(); // -&gt; Mon, 14 Sep 2020 09:39:45 GMT// Temporalconst futureTime = Temporal.now.dateTime().plus({ days: 7 }).toString(); // -&gt; Mon, 28 Sep 2020 09:33:31 GMTconst futureTime = Temporal.now.dateTime().minus(new Temporal.Duration(&#39;P7D&#39;)).toString(); // -&gt; 2020-09-21T17:40:17.539198751// P7D 为 Temporal 中构造段时间的语法，简介如下// P1Y1M1DT1H1M1.1S -&gt; 一年一月一天一小时一分一百毫秒// P1M -&gt; 一个月// PT1M -&gt; 一分钟</code></pre><h3 id="时间展示"><a href="#时间展示" class="headerlink" title="时间展示"></a>时间展示</h3><p>对大部分场景来说，展示时间是采用各种第三方库的首要原因，这样非常痛点的能力在 <code>Temporal</code> 是怎样使用的呢？</p><h4 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h4><p>很遗憾，目前 <code>Temporal</code> 未提供与 <code>day.js</code> 类似的占位符格式化 API。不过根据上文提到的时间静态属性，结合模板字符串，与原生 <code>Date</code> 相比，格式化的工作量也将大大降低。根据这些静态属性，实现一个类似三方库的 API，工作量也不会太大。</p><h4 id="时间偏差"><a href="#时间偏差" class="headerlink" title="时间偏差"></a>时间偏差</h4><p>计算两个时间之间的差值，展示时间差也是一个经常遇到的场景， <code>Temporal</code> 提供的 API 与 <code>day.js</code> 相比更具灵活性，差值单位甚至可以多单位组合。</p><pre><code class="line-numbers language-javascript">// day.js / moment.jsdayjs(&#39;2019-01-25&#39;).diff(&#39;2017-06-05&#39;, &#39;month&#39;); // -&gt; 19dayjs(&#39;2019-01-25&#39;).diff(&#39;2017-06-05&#39;, &#39;m&#39;); // -&gt; 19// TemporalTemporal.DateTime.from(&#39;2019-01-25&#39;).difference(Temporal.DateTime.from(&#39;2017-06-05&#39;)).toString(); // -&gt; P599D = 599天Temporal.DateTime.from(&#39;2019-01-25&#39;).difference(Temporal.DateTime.from(&#39;2017-06-05&#39;), {  largestUnit: &#39;years&#39;,  smallestUnit: &#39;seconds&#39;}).toString(); // -&gt; P1Y7M20D = 一年七个月二十天</code></pre><h3 id="时区支持"><a href="#时区支持" class="headerlink" title="时区支持"></a>时区支持</h3><p>与 <code>Date</code> 不同， <code>Temporal</code> 将天然支持时区。 <code>Temporal</code> 的时间默认无时区信息，所以需要在不同时区转换时间信息时，将用到时区相关 API。</p><pre><code class="line-numbers language-javascript">// 构造中国东八区时区const tz = new Temporal.TimeZone(&#39;Asia/Shanghai&#39;); // 时区参数支持 IANA 名称，支持 UTC等 https://en.wikipedia.org/wiki/List_of_tz_database_time_zones// 获取绝对时间const absoluteNow = Temporal.now.absolute(); // -&gt; 2020-09-21T12:02:50.041733410// 时间转换const now = tz.getDateTimeFor(Temporal.now.absolute()); // -&gt; 2020-09-21T20:02:50.041733410</code></pre><h3 id="历法支持"><a href="#历法支持" class="headerlink" title="历法支持"></a>历法支持</h3><p>在上文提到的时间静态属性中，细心的朋友可能已经发现有是否是闰年这个属性，其实这就是历法在起作用。</p><p>时间定义中，历法决定了了一年中有多少天，一年有多少月，一个月有多少天，所以能够灵活而准确的采用不同历法在时间计算中相当重要。</p><p>目前世界上最常用的历法是 <a href="https://en.wikipedia.org/wiki/Gregorian_calendar" target="_blank" rel="external">Gregorian calendar</a>，在此基础上演变出来的时间标准 ISO_8601， <code>Temporal</code> 就是采用此种标准。</p><p>以 <a href="https://en.wikipedia.org/wiki/Hebrew_calendar" target="_blank" rel="external">Hebrew calendar</a>（犹太历）为例，犹太历根据大小月，每个月有29或30天，八月九月是润月，根据常年缺年满年的不同，有不同的天数，以犹太历为例：</p><pre><code class="line-numbers language-javascript">// 获取犹太历 5756年3月14号 的绝对时间const dateWithCalendar = Temporal.DateTime.from({    year: 5756,  month: 3,  day: 14,  hour: 3,  minute: 24,  second: 30,  calendar: new Temporal.Calendar(&#39;hebrew&#39;),}); // -&gt; 1995-12-07T03:24:30[c=hebrew]</code></pre><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他方面， <code>Temporal</code> 相较于 <code>Date</code> 也有非常多的新特性，比如本地化、验证、比较等，期待 <code>Temporal</code> 尽早进入 stage3 甚至 stage4 阶段，彻底替代所有第三方时间库。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近日（2020.9.16）， &lt;code&gt;Moment&lt;/code&gt; 团队发布&lt;a href=&quot;https://momentjs.com/d
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>深挖 css 垂直居中的实现</title>
    <link href="https://luoyefe.com/blog/2020/07/02/%E6%B7%B1%E6%8C%96-css-%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://luoyefe.com/blog/2020/07/02/深挖-css-垂直居中的实现/</id>
    <published>2020-07-02T08:40:00.000Z</published>
    <updated>2023-05-24T09:56:27.715Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>请说说如何实现垂直居中？</p></blockquote><p>前端面试，垂直居中总是一个绕不开的问题，在座的各位可能可以说出不下10种解决方案，最常见的 flex、margin、绝对定位，「复古」一点的用 padding、vertical-align，甚至伪类 after、before 来实现，但是，垂直居中真的那么简单嘛？</p><p><strong>无特殊说明，本文示例都在小程序运行环境中</strong></p><p>我们来看个需求：</p><p><img src="./1592795509993-dfd5ddb2-8f7e-4809-a2d6-0f29853144a2.svg" alt=""></p><p>最终要实现的效果如上图，左侧文本右侧图片，简简单单，朴实无华，拿到视觉稿的第五分钟，代码已经写完。</p><pre><code class="line-numbers language-html">/* index.axml */&lt;view class=&quot;rate&quot;&gt;  &lt;text class=&quot;font-alipay-number&quot;&gt;4.5&lt;/text&gt;  &lt;image src=&quot;https://gw.alicdn.com/tfs/TB1Ujh9LEz1gK0jSZLeXXb9kVXa-226-42.png&quot; /&gt;&lt;/view&gt;</code></pre><pre><code class="line-numbers language-css">/* index.acss */@font-face {  font-family: &quot;CommonNumber&quot;;  src: url(&quot;https://gw.alipayobjects.com/as/g/antui/antui-static/1.0.3/fonts/AlipayNumber-Regular.ttf&quot;) format(&#39;truetype&#39;);}.font-alipay-number {  font-family: &quot;CommonNumber&quot; !important;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.rate {  display: flex;  align-items: center;  margin-bottom: 10rpx;}.rate text {  color: #FF5900;  font-size: 38rpx;}.rate image {  display: block;  width: 113rpx;  height: 21rpx;}</code></pre><p><img src="./1592896849331-3f5860b9-63b0-45da-a40e-9716284e7fc9.png" alt=""></p><p>flex 布局，垂直居中，一顿操作，安卓、iOS预览一番，效果完美，今天工资到手，美滋滋。</p><p>但是现实往往不会如此简单，当视觉要求突出文本 or 突出星星，需要改变字体大小时，你会得到如下的结果：</p><p><img src="./1592897054261-581c76f2-e984-47ab-ad1b-b2a5864db118.png" alt=""></p><p>排除视觉偏差因素，可以看到，文本与图片在垂直方向上并未对齐，这是为什么呢？ <code>align-items: center;</code> 之后，子元素在父容器整个容器框内应该居中才对，带着这个疑问，继续往下看。</p><p>用自带的 debug 工具查看各个元素后，可以发现，文本本身在整个父容器中未垂直居中，为了更清晰的看到效果，加上背景色，效果如下图：</p><p><img src="./1592899530779-9ec60a82-0847-4952-a965-3cee50a3ddbb.png" alt=""></p><p>可以看到，文本的字框和图片在整个容器都已经垂直居中，但是文本主体并未垂直居中，如图所示，绿线为容器中心线，字符偏绿线下方，星星完全居中，这就导致了在视觉上，整个视图并未垂直居中，这是什么原因？又如何解决呢？</p><p>在这之前，先简单学习一下字体排版中的相关术语：</p><p><img src="https://intranetproxy.alipay.com/skylark/lark/0/2020/jpeg/194906/1592820988730-463aabfc-94ec-4e1d-b94a-b8bfdc01735e.jpeg" alt=""></p><p>与中文「方块字」不同，西文字体为了提升可读性与排版的需要，将字体分为不同的部分，如上图：</p><ul><li><p>以小写字母「x」为基准得到 BaseLine、MeanLine</p></li><li><p>BaseLine 与 MeanLine 之间的高度为 x-height</p></li><li><p>MeanLine 到字框上部称为升部（ascener）</p></li><li><p>BaseLine 到字框下部称为降部（decender）</p></li></ul><p>从这几个概念可以得到，文本其实并非占满整个字框，上下往往有间距存在（升部、降部），所以如果升部、降部所占空间不一致，字体越大时，视觉上不居中的情况越严重。</p><p>如何解决？呼之欲出：</p><ul><li><p><strong>方案一：改字体，让整个字体的升部、降部为0，充满整个字框</strong></p></li><li><p><strong>方案二：改图片，让图片根据 x-height 的高度为基准上下偏移，实现「视觉」上的垂直居中</strong></p></li></ul><p>方案一需要用到字体排版软件，这里我们使用 Mac 上的 Glyphs，首先用 Glyphs 打开 <code>Alipay Number</code> 字体：</p><p><img src="./1592824359422-e881c2ed-5154-4315-8a55-51d0cb448ec1.png" alt=""></p><p>可以看到， <code>Alipay Number</code> 除了包含 0-9 的阿拉伯数字外，还包含常用运算符号以及人民币符号（注意看，羊角符号的字形是 underscore，也就是说使用 <code>Alipay Number</code> 时，需要用 <code>_</code> 代替 <code>￥</code> 才能使用正确的 font-family）。</p><p>双击打开字符，可以查看字符的详细信息：</p><p><img src="./1592824585145-e9e73f5b-4c59-4ae9-ae22-c714566300a2.png" alt=""></p><p>这张图可以清晰的看到字符「0」在字框中的布局，整体在基线以上，调整升部、降部，可以得到充满整个字框的文本：</p><p><img src="./1592825972354-e4dcaf22-a150-47a4-8299-dcfbfcce13a5.png" alt=""></p><p>以此类推，改完全部字符后，在代码中引用后查看效果：</p><p><img src="./1592901066556-7492b090-c892-4388-9f30-f4e8242cab9b.png" alt=""></p><p>可以看到，虽然已经将升部、降部改为0，让文本充满整个字框，但是文本上下依旧有空隙，文本和图片依旧无法「完美」的垂直居中，什么原因呢？</p><p>答案是 <code>line-height</code> ，因为 <code>line-height</code> 默认值为 <code>normal</code> ，而 <code>normal</code> 对应的具体数值在不同系统、不同字体的值是不一致的，并且即使字体的升降部为0， <code>normal</code> 的取值依旧不为 <code>1</code> 。</p><p>关于 <code>normal</code> 的值具体是多少，w3c 规范中的原话是：</p><blockquote><p>normal<br>Tells user agents to set the used value to a “reasonable” value based on the font of the element.<br>The value has the same meaning as . We recommend a used value for ‘normal’ between 1.0 to 1.2.<br>The computed value is ‘normal’.</p></blockquote><p>建议值在 1.0 到 1.2 之间，但是具体实现，依旧跟各个渲染引擎的排版逻辑有关，实测后，这个值一般在 1.2 左右。</p><p>除了默认值 <code>normal</code> ， <code>line-height</code> 还支持数字、带单位的长度、百分比，这些相对比较常用，不再展开。为了解决上面行高原因导致文本未充满字框的问题，只需设置字体大小与行高大小一致即可，也就是 <code>line-height: 1;</code></p><pre><code class="line-numbers language-css">.font-alipay-number {  font-family: &quot;CommonNumber&quot; !important;  font-style: normal;  line-height: 1; /* 行高设为 1，与字体大小保持一致 */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}</code></pre><p>再来看结果：</p><p><img src="./1592902837673-e6648a32-32fc-4994-b625-770840614821.png" alt=""></p><p>基本上实现了想要的效果，但是仔细看，还是有问题：</p><ul><li><p>安卓字体过大时，字符会溢出字框（右侧绿虚线，图片点开放大看）</p></li><li><p>字体大小难以统一，正常字体的 30rpx 才相当于无升降部字体的 24 rpx</p></li><li><p>成本太高，业务中无法重置所有字符的升降部</p></li></ul><p>方案一宣告失败，再看方案二。</p><p>方案二需要右侧图片按照 x-height 的高度做上下偏移，以达到在视觉上的垂直居中，要实现这个目的，得先知道 x-height 的具体高度，恰巧，css 中有个极少用的单位可以获取 x-height 的高度， <code>ex</code> 。</p><p><code>1ex</code> 代表<strong>当前元素</strong>所应用字体的一个 x-height 高度，是一个兼容性极好的单位，利用 <code>ex</code> 可以方便的控制元素高度与字体的关系，所以使当前元素的高度等于 <code>1ex</code> 时，在整个容器中会保持「视觉」上的垂直居中，因为 x-height 的高度在整个文本中处于中间位置，如下图：</p><p><img src="./1592905584291-8cffeca0-625e-48fd-8b04-7a647625f666.png" alt=""></p><p>小程序中，图片是以背景方式实现，为了减少高度对背景图的影响（需要根据实际情况调整 mode），这里为 <code>view</code> 标签设置背景图来模拟效果：</p><pre><code class="line-numbers language-html">/* index.axml */&lt;view class=&quot;rate&quot;&gt;  &lt;text class=&quot;font-alipay-number&quot;&gt;4.5&lt;/text&gt;  &lt;!-- &lt;image src=&quot;https://gw.alicdn.com/tfs/TB1ZKs4aBFR4u4jSZFPXXanzFXa-177-38.svg&quot; /&gt;  --&gt;  &lt;view class=&quot;image&quot; /&gt;&lt;/view&gt;</code></pre><pre><code class="line-numbers language-css">/* index.acss */.rate {  margin-bottom: 10rpx;}.rate text {  display: inline-block;  color: #FF5900;  font-size: 38rpx;}.rate .image {  height: 1ex; /* 重点，1ex 高度 */  display: inline-block;  background-image: url(&quot;https://gw.alicdn.com/tfs/TB1Ujh9LEz1gK0jSZLeXXb9kVXa-226-42.png&quot;);  background-size: 113rpx 21rpx;  background-position: left center;  background-repeat: no-repeat;  width: 113rpx;  /* 为了与文本的 1ex 高度保持一致，为图片元素赋值与文本一致的文字属性 */  font-family: &quot;CommonNumber&quot; !important;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;  font-size: 58rpx;}</code></pre><p>重点关注 <code>Image</code> 元素的 <code>1ex</code> 高度，并且去掉了父容器的 flex 布局，将子元素改为 <code>line-block</code> 行内元素（原因稍后继续分析），看效果：</p><p><img src="https://intranetproxy.alipay.com/skylark/lark/0/2020/jpeg/194906/1592907889926-344dc816-c700-466c-81b1-22898c6af29d.jpeg" alt=""></p><p><img src="./1592907921072-0555aa0d-296a-4e63-9d75-6fe0b606ee46.png" alt=""></p><p>效果完美！今天的工资拿的可以安心一点了，但是，就这样就结束了？</p><p>上面的例子只关注了文本比图片大的情况，如果文本小，图片大，这个时候的 <code>1ex</code> 还能用嘛？答案很明显，不可以， <code>1ex</code> 高度的容器无法容纳整个图片。即使用各种 hack 手段，实现了在一个比图片实际高度小的容器内完整展示图片，并垂直居中，那整个容器的高度也难以计算，而且 hack，我所不欲也，继续！</p><p>按照方案二的思路，需要调整图片，让图片按照 x-height 来布局，<code>ex</code> 的路子已验证无法走通，但是和 x-height 相关的属性可不止 <code>ex</code> 一个 —— 有请 <code>vertical-align</code> 上场。</p><p>其实在字体中讲解到 BaseLine 时，对 css 熟悉的同学应该就会想到 <code>vertical-align</code> ，因为 <code>vertical-align</code> 的默认值就是 <code>base-line</code> ，「巧合」的是，这里的 <code>base-line</code> 就是指的字体排版中的 BaseLine。</p><p>多个行内元素在同一个父元素内参与布局时，默认的排版方式就是以当前元素文本的 BaseLine 对齐，举个例子，如果想要<strong>实现不同大小的文本混排</strong>，并且<strong>文本底端对齐</strong>时，只要将子元素设为行内元素即可，如下图</p><p><img src="./1592909239919-7791f5b0-4706-47a7-8b17-8cca74ee1665.png" alt=""></p><p>价格中的羊角或小数，通常与主价格大小不一致，经常见到用 flex 布局，然后使用各种 hack 手段，给不同的端、不同的系统添加上下边距，使文本底端「看起来」对齐，其实给各个子元素  <code>display: inline-block;</code> 之后，天然对齐，不用做任何处理。</p><p>讲完 <code>vertical-align</code> 中 <code>base-line</code> 的基本应用，再回到我们的话题中，讲一讲 <code>vertical-align</code> 中的其他属性 。</p><p>首先看 <code>middle</code> ，与 <code>base-line</code> 同理， <code>middle</code> 也是相对于 BaseLine 的概念，是指 「基线往上的 x-height/2 处」，也就是指将<strong>当前元素的垂直中心位置与 x-height 二分之一处重合</strong>，也就是与小写字母「x」的交叉点对齐，伪代码如下（减少 rpx 单位换算为 rem 后小数位不精确问题，采用 px 单位）：</p><pre><code class="line-numbers language-html">/* index.axml */&lt;view class=&quot;rate rate-1&quot;&gt;  &lt;text&gt;0.1&lt;/text&gt;  &lt;image src=&quot;https://gw.alicdn.com/tfs/TB1Ujh9LEz1gK0jSZLeXXb9kVXa-226-42.png&quot; /&gt;&lt;/view&gt;&lt;view class=&quot;rate rate-2&quot;&gt;  &lt;text&gt;2.3&lt;/text&gt;  &lt;image src=&quot;https://gw.alicdn.com/tfs/TB1Ujh9LEz1gK0jSZLeXXb9kVXa-226-42.png&quot; /&gt;&lt;/view&gt;&lt;view class=&quot;rate rate-3&quot;&gt;  &lt;text&gt;4.5&lt;/text&gt;  &lt;image src=&quot;https://gw.alicdn.com/tfs/TB1Ujh9LEz1gK0jSZLeXXb9kVXa-226-42.png&quot; /&gt;&lt;/view&gt;</code></pre><pre><code class="line-numbers language-css">/* index.acss */.rate {  margin-bottom: 10px;}.rate text {  font-family: &quot;CommonNumber&quot; !important;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;  line-height: 1;}.rate text {  display: inline-block;  color: #FF5900;  vertical-align: middle; /* 重点 */}.rate-1 text {  font-size: 24px;}.rate-2 text {  font-size: 13px;}.rate-3 text {  font-size: 44px;}.rate image {  display: inline-block;  vertical-align: middle; /* 重点 */  margin-left: 4px;}.rate-1 image {  width: 113px;  height: 21px;}.rate-2 image {  width: 113px;  height: 21px;}.rate-3 image {  width: 113px;  height: 21px;}</code></pre><p>看下实际效果：</p><p><img src="https://intranetproxy.alipay.com/skylark/lark/0/2020/jpeg/194906/1592966218047-15c30bb4-180e-46b5-9e29-944b7c5352f2.jpeg" alt=""></p><p>视觉上看着是「居中」了，为了更精确，放大再看下：</p><p><img src="./1592966575494-c1e1286c-9a2b-4677-a574-354437a423d0.png" alt=""></p><p><img src="./1592967604033-b2749967-945f-4b44-a043-7bfbb6c12b51.png" alt=""></p><p>（有几个像素的偏差，深究之后发现是字体原因，数字升部有一些偏差，不改字体此处无解）</p><p>蓝色和紫色色块的高度一致，绿线为整个容器的垂直居中线，可以看到，不管在 iOS 还是安卓，效果都「近乎」完美（点开图片放大，可以数像素格），至此，终于可以长出一口气了。</p><p>不过都走到这了，让我们更进一步，上面讲到 <code>middle</code> 是将<strong>当前元素的垂直中心位置与 x-height 二分之一处重合</strong>，可是这句话忽略了一个问题，到底是跟<strong>哪个文本</strong>的 x-height 二分之一处重合呢？</p><p>首先肯定不是当前元素，因为文本和图片元素的 x-height 肯定不一致，设置 <code>vertical-align: middle;</code> 时无法保证在同一条平分线上，所以只能是父容器，但是问题来了，父容器并没有设置字体、字号，那 x-height 哪里来的呢？</p><p>为了验证这个问题，清空所有子元素，只保留一个设置了 <code>inline-block</code> 的文本元素，父容器也无任何属性，伪代码如下：</p><pre><code class="line-numbers language-html">&lt;view class=&quot;rate&quot;&gt;  &lt;text&gt;&lt;/text&gt;&lt;/view&gt;</code></pre><pre><code class="line-numbers language-css">.rate text {  display: inline-block;}</code></pre><p>看下实际渲染结果：</p><p><img src="./1592968338349-862a010f-737a-4436-806a-c63c2b065b55.png" alt=""></p><p>很神奇，子元素无任何内容，整个父容器居然也有高度，是什么因素影响了呢，答案是「幽灵空白节点」（来源于张鑫旭老师命名），在内联元素之前，永远存在着一个「空白节点」，不占据宽度，无法获取，但是真实存在，并且表现和文本节点一样，这就是内联元素设置 <code>vertical-align</code> 时 x-height 对齐的对象。</p><p>这样，就很好理解当为两个内联子元素设置 <code>vertical-align</code> 时，它们能够严格对齐，就是因为它们所对齐的「基准」是同一个「节点」。</p><p>插句题外话，使用内联元素时，元素与元素之间，会有缝隙出现，也是这个「幽灵空白节点」在作祟，一般处理就是让这个「节点」「消失」，比如将父容器的字号设为0、行高设为0等等。</p><p>所以，很多 CSS 问题在各个场景都需要具体分析，上面的例子主要用来讲解 CSS 字体排版的一些问题，除了用 <code>vertical-align</code> 实现基线对齐，其实也有其他办法实现。比如星星用  icon font 实现，然后改造 icon font 的升降部与文本完全一致，这样不管如何排版，基线永远一样，可以省去很多事情，有兴趣可以试下。</p><p>好了，垂直居中的问题终于可以完美解决了，再看下最终结果，美滋滋拿今天的工资：</p><p><img src="https://intranetproxy.alipay.com/skylark/lark/0/2020/jpeg/194906/1592966218047-15c30bb4-180e-46b5-9e29-944b7c5352f2.jpeg" alt=""></p><hr><p>讲了这么多，其实最终的知识点都还是在 css 的盒模型范围内。</p><p>关于盒模型，前端经常提到 BFC（Block Formatting Context），但是在块级盒模型之外，还有 IFC（Inline Formatting Context）行内盒模型。</p><p>IFC 的使用场景大部分聚焦在字体排版上，而且使用起来极其复杂，原理性内容也更多，所以 BFC 的使用场景更广，小程序内甚至默认 Flex 布局，但是实际应用中，Flex 会带来不少问题，开发中还是需要具体问题具体分析。</p><p>如果想要了解更多关于 IFC 的知识，推荐张鑫旭老师的「CSS世界」。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;请说说如何实现垂直居中？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;前端面试，垂直居中总是一个绕不开的问题，在座的各位可能可以说出不下10种解决方案，最常见的 flex、margin、绝对定位，「复古」一点的用 padding、vertical-a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你需要更简洁的 Redux（二）</title>
    <link href="https://luoyefe.com/blog/2019/09/18/%E4%BD%A0%E9%9C%80%E8%A6%81%E6%9B%B4%E7%AE%80%E6%B4%81%E7%9A%84-Redux%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://luoyefe.com/blog/2019/09/18/你需要更简洁的-Redux（二）/</id>
    <published>2019-09-18T04:44:01.000Z</published>
    <updated>2023-05-24T09:56:27.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="上期回顾"><a href="#上期回顾" class="headerlink" title="上期回顾"></a>上期回顾</h2><p>首先我们先来回顾一下上一篇文章我们总结的几个痛点：</p><ul><li><p>低入侵</p></li><li><p>异步 Action</p></li><li><p>跨组件获取 Store</p></li><li><p>模块化</p></li><li><p>辅助函数</p></li></ul><p>然后我们针对以上痛点，一步步实现对 Redux 的封装。</p><h2 id="API-设计"><a href="#API-设计" class="headerlink" title="API 设计"></a>API 设计</h2><p>在开始编码之前，容我们先花一点时间按照痛点来定一下 API 应该是什么样子的。</p><p>首先，Redux 的注入应该是非常简单的，不入侵我们业务代码的，类似 Dva 那种彻底改变应用启动方式的方式不是首选方案。所以，采用修饰器是相对来说比较稳妥的方案，不用在原来业务代码上做太多的修改。</p><pre><code class="line-numbers language-javascript">// 根组件注入 Redux@reduxRoot({ store })class Index extends PureComponent {  // xxx}// 子组件注入 Redux （为了子组件可以直接获取整颗 store 树，并提供辅助函数）@reduxChild()class Child extends PureComponent {    // xxx}</code></pre><p>再者，我们还需优化原生 Redux 将 Reducer、Action 等概念散落在不同文件且区分不明确的方式。</p><pre><code class="line-numbers language-javascript">// 用 object 组织 store 树export default {  state: {}, // 状态集合  reducers: { // 真正修改 state 的同步函数集合    ADD(state, payload) {      // xxx    }  },  actions: { // 触发 reducers 的函数集合，支持异步    add({ dispatch, commit, state }, payload) {      dispatch(/* xxx */)      // or      commit(/* xxx */)    },    asyncAdd({ dispatch, commit, state }, payload) {      setTimeout(() =&gt; {        dispatch(/* xxx */)      }, 1000)    },  },  modules: {}, // 同样结构嵌套的模块集合}</code></pre><p>最后，需要统一一下调用 Action 和 Reducer 的方式，为了区分这两种，Action 用 dispatch 方法触发，Reducer 用 commit 方法触发，两者调用方式类似</p><pre><code class="line-numbers language-javascript">// 调用 Actionthis.props.dispatch(&#39;add&#39;, 1, state =&gt; {})this.props.dispatch(&#39;add&#39;, 1).then(state =&gt; {})this.props.dispatch(&#39;asyncAdd&#39;, 1).then(state =&gt; {})this.props.dispatch({ type: &#39;asyncAdd&#39;, payload: 1 }).then(state =&gt; {})this.props.dispatch(&#39;moduleA/add&#39;, 1, state =&gt; {}) // 模块化 提交// 调用 Reducerthis.props.commit(&#39;ADD&#39;, 1)this.props.commit({ type: &#39;ADD&#39;, payload: 1 })this.props.commit(&#39;moduleA/ADD&#39;, 1) // 模块化 提交</code></pre><p>接下来我们来看代码实现</p><h2 id="嵌套模块化的实现"><a href="#嵌套模块化的实现" class="headerlink" title="嵌套模块化的实现"></a>嵌套模块化的实现</h2><pre><code class="line-numbers language-javascript">export default {  state: {},  reducers: {},  actions: {},  modules: {},}</code></pre><p>当 modules 里嵌套多层的时候，我们可以将整颗 store 树当做一个叉树来看，需要完成整合所有state，根据路径获取 module 中的值，根据路径更新某 module 的 state 等功能。</p><pre><code class="line-numbers language-javascript">export default class Module {  constructor(rawModule) {    this.state = null    this._rawModule = rawModule    this.collectionState([], rawModule)  }  // 分割路径  getPath(pathString) {    return pathString.split(&#39;/&#39;).slice(0, -1)  }  // 根据路径获取具体 state  getState(path) {    return path.reduce((state, key) =&gt; state[key], this.state)  }  // 根据路径获取具体 rawModule  getRawModule(path) {    return path.reduce((module, key) =&gt; {      if (!module.modules) return null      return module.modules[key]    }, this._rawModule)  }  // 获取 module 中的 actions 列表  getActions(module) {    return {      ...(module.actions || {}),    }  }  // 更新整棵树  updateState(path, nextState) {    if (path.length === 0) return this.state = nextState    return chainDefine(this.state, path, nextState)  }  // 递归整颗树，获取 state 集合  collectionState(path, rawModule) {    if (path.length === 0) {      this.state = rawModule.state    } else {      const parent = this.getState(path.slice(0, -1))      parent[path[path.length - 1]] = rawModule.state    }    if (rawModule.modules) {      objForEach(rawModule.modules, (rawChildModule, key) =&gt; {        this.collectionState(path.concat(key), rawChildModule)      })    }  }}// 遍历对象export function objForEach(obj, callback) {  Object.keys(obj).forEach(key =&gt; callback(obj[key], key))}// 链式赋值export function chainDefine(map, path, value) {  if (path.length === 1) return map[path[0]] = value  return chainDefine(map[path[0]], path.slice(1), value)}</code></pre><h2 id="ReduxRoot-ReduxChild"><a href="#ReduxRoot-ReduxChild" class="headerlink" title="ReduxRoot + ReduxChild"></a>ReduxRoot + ReduxChild</h2><p>完成了基础类再来完成最关键的 Redux 注入部分</p><pre><code class="line-numbers language-javascript">import { createStore } from &#39;redux&#39;// 为根组件注入 Reduxfunction reduxRoot({  store,}) {  return OriginComponent =&gt; {    const reactReduxStore = createStore(() =&gt; {      // 实现处理不同 reducer 的逻辑    })    class RootStoreComponent extends PureComponent {      getChildContext() {        return {          commit: this.commit,          dispatch: this.dispatch,          originStore: reactReduxStore, // Redux 原始对象，可调用 getState 等方法        }      }      commit() {        // 用于提交 Reducers      }      dispatch() {        // 用于提交 Actions      }      render() {        return (          &lt;OriginComponent /&gt;        )      }    }    const ConnectComponent = connect(state =&gt; ({ state }))(RootStoreComponent)    class ProviderComponent extends PureComponent {      render() {        return (          &lt;Provider store={reactReduxStore}&gt;            &lt;ConnectComponent /&gt;          &lt;/Provider&gt;        )      }    }    return ProviderComponent  }}// 为子组件注入 Reduxfunction reduxChild(options = {}) {  return OriginComponent =&gt; {    class ChildStoreComponent extends PureComponent {      static contextTypes = {        commit: PropTypes.func,        dispatch: PropTypes.func,        originStore: PropTypes.object,      }      render() {        return (          &lt;OriginComponent {...this.props} /&gt;        )      }    }    return connect(state =&gt; ({ state }))(ChildStoreComponent)  }}</code></pre><p>整体上的思路就是通过装饰器，在根组件上使用 Provider组件 和 connect方法，初始化 Redux，在子组件上通过 context 将跟组件的 commit、dispatch 等方法挂载到子组件，并通过 connect 将 state 注入到子组件中。</p><h2 id="Dispatch、Commit-及-异步-Action"><a href="#Dispatch、Commit-及-异步-Action" class="headerlink" title="Dispatch、Commit 及 异步 Action"></a>Dispatch、Commit 及 异步 Action</h2><p>其实异步 Action 的实现相对简单，因为在原生 Redux 中 Action 更像是一个常量，如果我们将 Action 看做一个函数，在 Action 函数执行完毕后，再真正调用 this.props.dispatch 触发原生 reducer 即可实现异步 Action。</p><pre><code class="line-numbers language-javascript">// ...commit() {  const formattedArguments = normalizeArguments(args)  // 此处的 dispatch 为 原生 Redux 的方法，提交后，全部走到 createStore 的回调函数中处理相关逻辑  this.props.dispatch({    type: formattedArguments.type,    payload: formattedArguments.payload,  })}dispatch(...args) {  return new Promise(resolve =&gt; {    // 格式化参数，支持载荷和对象两种提交方式    const formattedArguments = normalizeArguments(args)    const type = formattedArguments.type    const payload = formattedArguments.payload    const callback = formattedArguments.callback    // 等待 action 执行完成再 向 redux dispatch 真实 action，实现异步 action    const splitArray = type.split(&#39;/&#39;)    const actionFuncName = splitArray[splitArray.length - 1]    const path = StoreModules.getPath(type)    const rawModule = StoreModules.getRawModule(path)    function dispatchHelper(...argsArr) {      // argsArr  [&#39;reducerName&#39;, payload]      // 子模块提交需要修正 reducerName      let fixedReducerName = argsArr[0]      if (splitArray.length &gt; 1) fixedReducerName = splitArray.slice(0, splitArray.length - 1).concat([fixedReducerName]).join(&#39;/&#39;)      // 触发真正的 reducer      this.commit(fixedReducerName, argsArr[1])      resolve(this.getState())      callback(this.getState())    }    const actionsCollect = StoreModules.getActions(rawModule)    // 将相应参数传入到 Action 函数中以便调用    return actionsCollect[actionFuncName]({      commit: dispatchHelper.bind(this), // 在 Action 中执行完异步操作，触发 commit 函数，才会触发 store 的更新      state: StoreModules.getState(path),      dispatch: this.dispatch,    }, payload)  })}// ...// 工具函数// 将参数格式化成统一格式function normalizeArguments(args) {  let type  let payload  let callback  if (typeof args[0] === &#39;object&#39;) {    type = args[0].type    payload = args[0].payload    callback = args[1] || function () {}  } else {    type = args[0]    if (typeof args[1] === &#39;function&#39;) {      callback = args[1]    } else {      payload = args[1]      callback = args[2] || function () {}    }  }  return {    type,    payload,    callback,  }}</code></pre><p>dispatch 和 commit 的主要思路是 dispatch 用于执行 store 中定义的 action 函数，在 action 中可以用 commit 方法触发原生的 reducer，在原生 reducer 中触发 store 中定义的各种 reducer 函数，来达到更新 state 的目的，接下来我们看 createStore 中的回调函数如何实现分发 reducer。</p><pre><code class="line-numbers language-javascript">import { createStore, applyMiddleware, compose } from &#39;redux&#39;// 支持 Redux DevToolsconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || composeconst reactReduxStore = createStore((...args) =&gt; {  const subscriber = args[1]  // 过滤 redux 的初始化事件  if (/@@/.test(subscriber.type)) return StoreModules.state  const path = StoreModules.getPath(subscriber.type)  const splitArray = subscriber.type.split(&#39;/&#39;)  const reducerFuncName = splitArray[splitArray.length - 1]  const rawModule = StoreModules.getRawModule(path)  const rawModuleState = StoreModules.getState(path)  if (!rawModule) return StoreModules.state  if (!rawModule.reducers || !rawModule.reducers[reducerFuncName]) {     // reducer func 不存在    return StoreModules.state  }  // 调用 store 中定义的 reducer 函数，来获取新的 state  const nextState = rawModule.reducers[reducerFuncName](rawModuleState, subscriber.payload)  // 以下一个状态更新当前 state 树  StoreModules.updateState(path, nextState)  // 返回全新的 state，来达到更新的目的  return {    ...StoreModules.state,  }  // 处理 Redux 中间件逻辑，在 reduxRoot 初始化是可注入多个 middlewares}, composeEnhancers(applyMiddleware(...middlewares)))// xxx</code></pre><p>到这里，我们上面提到的痛点大部分都已解决，以前需要理解多个概念，多写很多代码的 “学院派” Redux，已经离我们而去，剩下的是代码一看即懂的 “简洁版” Redux。</p><p>还能更方便更简洁嘛？当然。</p><h2 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h2><p>在真实的业务场景中，我们并不用将所有的 state/action/reducer 都注入到组件的 props 上，所以我们可以实现 mapStateToProps、mapActionsToProps、mapReducersToProps 这样的辅助函数来简化我们的组件属性。</p><pre><code class="line-numbers language-javascript">// 辅助函数的调用@reduxRoot({  store,  mapStateToProps: { // 可以对 state 中的值进行二次计算再返回    index: state =&gt; state.index,    childIndex: state =&gt; state.child.index, // 子 module  },  mapReducersToProps: [&#39;ADD&#39;, &#39;child/ADD&#39;],  mapActionsToProps: [&#39;asyncAdd&#39;, &#39;add&#39;, &#39;child/add&#39;, &#39;child/asyncAdd&#39;],})class Index extends PureComponent {  // xxx}// 或者@reduxRoot({  store,  mapStateToProps(state) {    return {      index: state.index    }  },  mapReducersToProps: {    SELF_ADD: &#39;ADD&#39;  },  mapActionsToProps: {    selfAdd: &#39;add&#39;  }})class Index extends PureComponent {  // xxx}</code></pre><p>不管是对象形式还是函数形式，最终都是会返回一个对象，在 render 过程中，可以将三个辅助函数的计算结果通过解构传入到组件中，以便组件中直接使用。</p><pre><code class="line-numbers language-javascript">// xxxrender() {  const mapStateResult = mapStateToPropsHelper(mapStateToProps, this.getState())  const mapActionsResult = mapActionsToPropsHelper(mapActionsToProps, this.dispatch)  const mapReducersResult = mapReducersToPropsHelper(mapReducersToProps, this.commit)  return (    &lt;OriginComponent {...this.props}      {...mapStateResult}      {...mapActionsResult}      {...mapReducersResult}      dispatch={this.dispatch}      commit={this.commit}      store={{        state: this.getState(),        dispatch: this.dispatch,        commit: this.commit,        originStore: reactReduxStore,      }}    /&gt;  )}// xxx// 子组件同理，不再赘述</code></pre><p>至此，一个 “简洁版” Redux 已经可以在生产环境使用，当然，还有一些边界情况没有在伪代码中反映出来，比如 Action、Reducer 不存在时的提示等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;p&gt;首先我们先来回顾一下上一篇文章我们总结的几个痛点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;低入侵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你需要更简洁的 Redux（一）</title>
    <link href="https://luoyefe.com/blog/2019/09/13/%E4%BD%A0%E9%9C%80%E8%A6%81%E6%9B%B4%E7%AE%80%E6%B4%81%E7%9A%84-Redux%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://luoyefe.com/blog/2019/09/13/你需要更简洁的-Redux（一）/</id>
    <published>2019-09-13T09:54:38.000Z</published>
    <updated>2023-05-24T09:56:27.685Z</updated>
    
    <content type="html"><![CDATA[<p>使用 React 的过程中，或多或少都会接触到 <strong>状态管理</strong> ，从 Flux 到 Redux 到 Dva，各种状态管理工具满天飞，今天让我们来聊一聊这些工具，以及思考在这些工具的基础上如何更简洁的使用 <strong>状态管理</strong> 这个大杀器。</p><h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>聊状态管理之前，先让我们梳理下在原生 React 中如何进行组件间通信。</p><ul><li><p>Props</p><p>子组件需要父组件的数据，通过 props 一层层向下传递。</p><p>子组件需要更改父组件数据，通过 props callback 调用父组件的方法更新数据。</p><p>多个组件共享数据，抽象 Container 组件，从 Container 组件统一分发 props。</p><p>这样确实可以让应用的数据流非常明确，但是随着应用复杂度提升，组件层级加深，不同组件都要抽象 Container 组件，带来的状态提升问题非常严重，后期通信成本会越来越高。</p></li><li><p>Context</p><p>为了减少 props 带来的嵌套问题，可以使用 Context API。</p><p>在顶级公共组件中，定义 getChildContext 方法，返回子组件所需的数据，子组件通过 this.context 访问相应数据。</p><p>这样就省去了 props 传递带来的复杂度，但是这样也有自己的问题，比如数据过多 getChildContext 方法会非常臃肿，比如 context 跨多层组件获取时，需要上层组件都进行 render，最终组件才可获取数据等。</p></li><li><p>观察者模式</p><p>观察者模式就是组件通信的一种通用方法了，在需要更新时订阅 event 的变化传入回调函数即可。</p><p>同样的，观察者模式也会带来很多问题，比如订阅散落在各个组件中，维护成本高，违背 React 单向数据流的理念。</p><p>所以，一个统一的状态管理工具从 React 诞生之始，就备受期待。</p></li></ul><h2 id="Flux"><a href="#Flux" class="headerlink" title="Flux"></a>Flux</h2><p>Flux 其实更像是一种思想，类似 MVC、MVVM，提倡严格的单向数据流，组件所用数据全部存放在 Store 中，只能通过 Dispatcher 来告知 Store 修改数据，View 层则订阅数据变化来触发页面更新动作。</p><p>在这个思想的基础上，不管什么框架都可以基于这个实现自己的状态管理工具。</p><p>Flux 的几个主要概念：</p><ul><li><p>View：视图层，根据数据展示界面，订阅数据变化来自动更新界面，并响应用户行为触发 Action</p></li><li><p>Store：存放和处理数据相关的逻辑</p></li><li><p>Action：触发 Dispatcher</p></li><li><p>Dispatcher：告知 Store 修改数据</p></li></ul><p>Flux 需要手动在 view 层订阅数据变化手动触发页面更新，而且没有很好的异步解决方案，所以在 Redux 出现以后，迅速被代替。</p><h2 id="Redux"><a href="#Redux" class="headerlink" title="Redux"></a>Redux</h2><p>Redux 是在吸收 Flux 思想的基础上产生的状态管理工具。</p><blockquote><p>此处默认 Redux 为  React-Redux</p></blockquote><p>Redux 的核心概念：</p><ul><li><p>Store：管理 State，并有 dispatch、subscribe 等方法</p></li><li><p>Action：响应用户事件，触发 Reducer</p></li><li><p>Dispatch：分发 Action</p></li><li><p>Reducer：修改 Store 中的数据，返回一个全新的 State</p></li><li><p>Provider：将 store 注入到应用中</p></li><li><p>Connect：将特定的 state 和 dispatch 函数注入到组件中</p></li><li><p>Middleware：类似 Koa 的中间件思想，拓展 Redux 能力，如 log、dev-tool 等</p></li></ul><p>虽说 Redux 吸收了 Flux 的优秀思想，但是依旧存在着众多问题，比如：</p><ul><li><p>约定太多</p><p>Redux 中提出了很多约定，但是根本不知道为啥要这么写，新手看起来非常头大。</p><p>比如 Action 只是一个个 JS 对象，为什么要放在不同的文件里？</p><p>比如 Reducer 强调纯函数，每次修改必须返回全新的 State。</p><p>比如 Reducer 大量 case 仅仅只是为了改变一个值。</p><p>比如应用复杂了之后，类似文件大量重复，组织繁琐。</p><p>当然，这些可以用更好的代码组织方式来避免，不过既然是约定，如果每个人都有自己的组织方式，那约定也就失去了意义。</p></li><li><p>异步处理</p><p>Redux 中的 Action 其实就是一个个 JS 对象，当需要在 Action 中进行异步操作时，只能在 Redux 上做一些封装。</p><p>目前社区最通用的解决方案是 redux-saga，通过在全局跑着 generator，监听 dispatch 函数分发的 actionType，当命中时，进入 saga，执行异步操作，完成后再调用真实的 Reducer。</p><p>虽说解决了很多问题，但是缺点同样明显。</p><p>比如需要定义的文件又多了一个 saga，应用复杂后，代码组织成本直线增加。</p><p>比如错误处理，基本每个 task 都需要 try catch 捕获错误。</p><p>比如都 9102 年了，依旧需要使用 “丑陋” 的 yield 写法。</p><p>综上，在直接使用 Redux 时，绝大多数都会选择对 Redux 进行一层封装，集合多种中间件的功能。</p></li></ul><h2 id="Dva"><a href="#Dva" class="headerlink" title="Dva"></a>Dva</h2><p>说完 Flux 和 Redux ，发现 Dva 才是 “真香” 的解决方案。</p><blockquote><p>dva 首先是一个基于 redux 和 redux-saga 的数据流方案，然后为了简化开发体验，dva 还额外内置了 react-router 和 fetch，所以也可以理解为一个轻量级的应用框架。</p></blockquote><p>以上是 Dva 的官方说明，简单理解，就是可以让 react-redux 和 redux-saga 编写的代码组织起来更合理，维护起来更简单。</p><p>比如，原先散落在各处的 Action、saga，可以在同一个对象中书写。</p><p>比如，简化配置过程，项目可快速初始化。</p><p>比如，集成 redux、redux-saga、redux-router。</p><p>比如，简洁的 API，相较于 redux 更容易理解的 app.model、app.router、app.use、app.start API。</p><p>比如，动态注册 model。</p><p>接下来又是喜闻乐见的转折，Dva 是有很多优点，但是它的缺点同样“致命”。</p><ul><li><p>Dva 是一个轻量框架</p><p>Dva 集成了很多你可能并不需要的东西，当你想要部分使用它的功能，有点难。</p><p>比如只能绑定使用 Dva 中的 react-router ，无法独立升级。</p><p>比如打包脚本，想要整合进自己的项目，还需要做一番努力。</p></li><li><p>redux-saga 的缺点</p><p>Dva 集成 redux-saga 来实现异步 action，所以它同样继承了 saga generator 的写法，以及 saga put take 等 API，理解困难，书写不直观。</p><p>说了这么多，最终目的还是要解决在使用 <strong>状态管理</strong> 时遇到的各种问题，综合对比以上的各种方案，我们简单列一下还未解决的痛点。</p></li></ul><h2 id="待解决的痛点"><a href="#待解决的痛点" class="headerlink" title="待解决的痛点"></a>待解决的痛点</h2><ul><li><p>低入侵</p><p>尽可能减少对原应用的入侵，提供尽量简洁的 API 来实现 Redux 功能</p></li><li><p>异步 Action</p><p>提供更为现代，更为直观的异步 Action 解决方案</p></li><li><p>跨组件获取 Store</p><p>子组件可以简便的获取 Stroe 树</p></li><li><p>模块化</p><p>提供更自然的模块嵌套解决方案，减少心智负担</p></li><li><p>辅助函数</p><p>提供 mapStateToProps、mapActionsToProps、mapReducersToProps 辅助函数，简化组件状态结构</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对比市面上流行的 <strong>状态管理</strong> 工具，发现并没有完全契合需求的方案，不如我们自己在 Redux 上加一层简单的封装，来解决使用过程中的痛点问题。</p><p>下一章，我们来一步步对 “Redux” 进行封装，让 “Redux” 更加简洁，更加强大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 React 的过程中，或多或少都会接触到 &lt;strong&gt;状态管理&lt;/strong&gt; ，从 Flux 到 Redux 到 Dva，各种状态管理工具满天飞，今天让我们来聊一聊这些工具，以及思考在这些工具的基础上如何更简洁的使用 &lt;strong&gt;状态管理&lt;/strong&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用NodeJS借助阿里云dns解析API实现DDNS</title>
    <link href="https://luoyefe.com/blog/2018/01/03/%E4%BD%BF%E7%94%A8NodeJS%E5%80%9F%E5%8A%A9%E9%98%BF%E9%87%8C%E4%BA%91dns%E8%A7%A3%E6%9E%90API%E5%AE%9E%E7%8E%B0DDNS/"/>
    <id>https://luoyefe.com/blog/2018/01/03/使用NodeJS借助阿里云dns解析API实现DDNS/</id>
    <published>2018-01-03T10:33:50.000Z</published>
    <updated>2023-05-24T09:56:27.686Z</updated>
    
    <content type="html"><![CDATA[<p>DDNS，即动态DNS，简单来说就是服务器的 IP 地址经常变动，这个时候需要一个主动上报的服务来更新 DNS 的解析记录，保证域名指向正确的 IP 地址。  </p><p>比如在自己家中的树莓派上部署了某些服务，且路由器有公网 IP，由于每次重新拨号，公网 IP 都会变，所以想要根据域名去访问树莓派，必须做 DDNS。</p><p>DDNS 可以选择 花生壳，但是花生壳提供的 DDNS 服务无法自定义域名，配置起来也较为麻烦，所以这里用 NodeJS 来实现一个 DDNS 服务。</p><p><a href="https://github.com/luoye-fe/aliyun-ddns" target="_blank" rel="external">源码地址(https://github.com/luoye-fe/aliyun-ddns)</a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li><p>定期获取本机公网 IP</p></li><li><p>比对当前 DNS 解析记录</p></li><li><p>如果不一致，调用阿里云的 API 更新 DNS 记录</p></li></ul><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><ul><li><a href="https://help.aliyun.com/document_detail/29739.html" target="_blank" rel="external">阿里云 API</a></li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h4 id="获取公网-IP"><a href="#获取公网-IP" class="headerlink" title="获取公网 IP"></a>获取公网 IP</h4><p>访问 <code>http://ifconfig.me/ip</code> 获取本机外网 IP，注意需伪造 UA，不然403</p><h4 id="阿里云-API-接口鉴权"><a href="#阿里云-API-接口鉴权" class="headerlink" title="阿里云 API 接口鉴权"></a>阿里云 API 接口鉴权</h4><p>比较复杂，也比较坑爹，具体实现可以看放出的 git 源码</p><ul><li><p>把所有请求参数按顺序序列化</p></li><li><p>把所有请求参数拼接成 <code>encodeURIComponent(key)=encodeURIComponent(value)&amp;encodeURIComponent(key)=encodeURIComponent(value)</code> 的形式得到 <code>signStr</code></p></li><li><p>拼接字符串，<code>[请求方式]&amp;encodeURIComponent(&#39;/&#39;)&amp;[signStr]</code>，如 <code>GET&amp;%2F&amp;[signStr]</code></p></li><li><p>HMAC SHA1 加密，加密的 key 为 <code>[AccessKeySecret]&amp;</code>，注意最后的 <code>&amp;</code></p></li></ul><h4 id="获取当前解析记录"><a href="#获取当前解析记录" class="headerlink" title="获取当前解析记录"></a>获取当前解析记录</h4><p><code>DescribeSubDomainRecords</code></p><p>具体看文档</p><h4 id="更新或新增解析记录"><a href="#更新或新增解析记录" class="headerlink" title="更新或新增解析记录"></a>更新或新增解析记录</h4><p>根据当前解析记录的状态来确定是更新还是新增解析记录</p><p><code>AddDomainRecord</code> <code>UpdateDomainRecord</code></p><h4 id="定时运行"><a href="#定时运行" class="headerlink" title="定时运行"></a>定时运行</h4><p>使用的 <a href="https://github.com/node-schedule/node-schedule" target="_blank" rel="external">node-schedule</a></p><h4 id="服务常驻"><a href="#服务常驻" class="headerlink" title="服务常驻"></a>服务常驻</h4><p>使用的 <a href="https://npm.taobao.org/package/pm2" target="_blank" rel="external">pm2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;DDNS，即动态DNS，简单来说就是服务器的 IP 地址经常变动，这个时候需要一个主动上报的服务来更新 DNS 的解析记录，保证域名指向正确的 IP 地址。  &lt;/p&gt;
&lt;p&gt;比如在自己家中的树莓派上部署了某些服务，且路由器有公网 IP，由于每次重新拨号，公网 IP 都会变
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>借助redis实现定时任务</title>
    <link href="https://luoyefe.com/blog/2017/11/13/%E5%80%9F%E5%8A%A9redis%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://luoyefe.com/blog/2017/11/13/借助redis实现定时任务/</id>
    <published>2017-11-13T01:17:18.000Z</published>
    <updated>2023-05-24T09:56:27.686Z</updated>
    
    <content type="html"><![CDATA[<p>在 nodejs 中实现定时任务可以使用 <a href="https://github.com/node-schedule/node-schedule" target="_blank" rel="external">node-schedule</a> ，但是无法持久化，脚本停止后，不仅任务停止，再次启动也无法恢复未完成的定时任务。</p><p>当然也可以使用 crontab 这种方案，但是较为麻烦，其实可以简单的使用 redis 的 pub/sub 功能实现定时任务。</p><p>pub/sub 功能简单来说就是，当某个事件被触发时 redis 会向监听此事件的频道推送消息，所以，如果我们监听 redis 中某个 key 的过期事件，即可完成定时任务功能。</p><h2 id="redis-配置"><a href="#redis-配置" class="headerlink" title="redis 配置"></a>redis 配置</h2><p>redis 默认未启用 pub/sub 功能，需手动开启。</p><p>配置 <code>redis.conf</code> 的 <code>notify-keyspace-events</code> 字段来开启此功能，其值可以为以下值：</p><ul><li><p><strong>K</strong>，表示 <code>keyspace</code> 事件，有这个字母表示会往 <code>__keyspace@[db]__:[event]</code> 频道推消息</p></li><li><p><strong>E</strong>，表示 <code>keyevent</code> 事件，有这个字母表示会往 <code>__keyevent@[db]__:[event]</code> 频道推消息</p></li><li><p><strong>g</strong>，表示一些通用指令事件支持，如 <code>DEL</code>、<code>EXPIRE</code>、<code>RENAME</code> 等等</p></li><li><p><strong>$</strong>，表示字符串（String）相关指令的事件支持</p></li><li><p><strong>l</strong>，表示列表（List）相关指令事件支持</p></li><li><p><strong>s</strong>，表示集合（Set）相关指令事件支持</p></li><li><p><strong>h</strong>，哈希（Hash）相关指令事件支持</p></li><li><p><strong>z</strong>，有序集（Sorted Set）相关指令事件支持</p></li><li><p><strong>x</strong>，过期事件，与 <strong>g</strong> 中的 <code>EXPIRE</code> 不同的是，<strong>g</strong> 的 <code>EXPIRE</code> 是指执行 <code>EXPIRE key ttl</code> 这条指令的时候顺便触发的事件，而这里是指那个 <code>key</code> 刚好过期的这个时间点触发的事件，即主动与被动的区别</p></li><li><p><strong>e</strong>，驱逐事件，一个 <code>key</code> 由于内存上限而被驱逐的时候会触发的事件</p></li><li><p><strong>A</strong>，<code>g$lshzxe</code> 的别名，也就是说 <code>AKE</code> 的意思就代表了所有的事件</p></li></ul><p>我们要实现定时任务功能，所以需要配置 过期事件，即将 <code>notify-keyspace-events</code> 配置为 <code>Ex</code>。</p><p>配置完成启动 redis 后，可以通过，<code>redis-cli config get notify-keyspace-events</code> 命令来验证是否生效。</p><h2 id="redis-事件名规则"><a href="#redis-事件名规则" class="headerlink" title="redis 事件名规则"></a>redis 事件名规则</h2><p><code>&quot;__keyevent@&quot; + DB_NUMBER + &quot;__:&quot; + EVENT_NAME</code></p><p>EVENT_NAME: 如 <code>del</code> <code>expire</code> <code>rename</code> 等，具体可看 <a href="http://redisdoc.com/topic/notification.html" target="_blank" rel="external">redis-evnet-type</a></p><h2 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h2><pre><code class="line-numbers language-js">const PublishRedisStore = new redis(); // 发布事件 dbNum: 1const SubscribeRedisStore = new redis(); // 订阅事件 dbNum: 2// 订阅者 redis 实例只允许 (P)SUBSCRIBE / (P)UNSUBSCRIBE / PING / QUIT 事件，所以需要两个 redis 实例来完成 pub/sub 功能SubscribeRedisStore.subscribe(&#39;__keyevent@1__:expired&#39;, function() {    // 订阅 redis 数据库 1 的 key expired 事件});SubscribeRedisStore.on(&#39;message&#39;, function(channel, key) {    // channel 频道名称    // key (value 已被删除，只能获取到 key 而拿不到 value)});// 在 PublishRedisStore 实例中设置某个 3s 后过期的值，key 过期时即可监听到，从而做相应处理PublishRedisStore.set(&#39;textEvent&#39;, &#39;textValue&#39;, &#39;EX&#39;, 3);</code></pre><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>除了定时任务功能，借助 pub/sub 还可实现比如 队列消息、循环任务 等功能。</p><p>但是一个比较大的限制就是任务时间只能精确到 s，而无法到 ms。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 nodejs 中实现定时任务可以使用 &lt;a href=&quot;https://github.com/node-schedule/node-schedule&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-schedule&lt;/a&gt; ，但是无法持久化，脚
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nginx将多个服务代理到同一域名</title>
    <link href="https://luoyefe.com/blog/2017/06/07/nginx%E5%B0%86%E5%A4%9A%E4%B8%AA%E6%9C%8D%E5%8A%A1%E4%BB%A3%E7%90%86%E5%88%B0%E5%90%8C%E4%B8%80%E5%9F%9F%E5%90%8D/"/>
    <id>https://luoyefe.com/blog/2017/06/07/nginx将多个服务代理到同一域名/</id>
    <published>2017-06-07T06:38:59.000Z</published>
    <updated>2023-05-24T09:56:27.591Z</updated>
    
    <content type="html"><![CDATA[<p>有时候需要将来自不同端口的服务代理到同一个域名上，利用 <code>nginx</code> 可以轻易实现这样的需求，记录如下。  </p><p>需求如下，两个 <code>node</code> 服务分别启动在 <code>8888</code> 和 <code>9999</code> 端口，然后在访问时需要将 <code>api.com/version1</code> 代理到 <code>127.0.0.1:8888</code>，将 <code>api.com/version2</code> 代理到 <code>127.0.0.1:9999</code>。  </p><p>利用 <code>nginx</code> 的 <code>location</code>，搭配 <code>proxy_pass</code> 来实现此功能的伪代码如下。  </p><pre><code class="line-numbers language-nginx">server {    listen 80;    server_name api.com;    location / {        root /root/www;        index index.html;    }    location ^~ /version1/ {        proxy_pass http://127.0.0.1:8888/;    }    location ^~ /version2/ {        proxy_pass http://127.0.0.1:9999/;    }}</code></pre><p>此时，访问 <code>api.com/version1/getUserInfo</code> 将访问到 <code>127.0.0.1:8888/getUserInfo</code>，同理，访问 <code>api.com/version2/getUserInfo</code> 将访问到 <code>127.0.0.1:9999/getUserInfo</code>。  </p><p><strong>注意</strong>：<code>proxy_pass</code> 最后的 <code>/</code> 不能丢，否则，<code>api.com/version1/getUserInfo</code> 将访问到 <code>127.0.0.1:8888/version1/getUserInfo</code>。  </p><p><code>location</code> 的匹配规则与优先级的详细可以访问，<a href="http://seanlook.com/2015/05/17/nginx-location-rewrite/?from=https%3A%2F%2Fluoyefe.com" target="_blank" rel="external">nginx配置location总结及rewrite规则写法</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时候需要将来自不同端口的服务代理到同一个域名上，利用 &lt;code&gt;nginx&lt;/code&gt; 可以轻易实现这样的需求，记录如下。  &lt;/p&gt;
&lt;p&gt;需求如下，两个 &lt;code&gt;node&lt;/code&gt; 服务分别启动在 &lt;code&gt;8888&lt;/code&gt; 和 &lt;code&gt;999
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>豆瓣阅读的文字解码</title>
    <link href="https://luoyefe.com/blog/2017/01/23/%E8%B1%86%E7%93%A3%E9%98%85%E8%AF%BB%E7%9A%84%E6%96%87%E5%AD%97%E8%A7%A3%E7%A0%81/"/>
    <id>https://luoyefe.com/blog/2017/01/23/豆瓣阅读的文字解码/</id>
    <published>2017-01-23T01:43:34.000Z</published>
    <updated>2023-05-24T09:56:27.754Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间找本小说发现只有豆瓣有资源，然而并不能下载，就想着把全本爬下来，现将接口和解码相关记录如下。</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><ul><li><p>URL: <a href="https://read.douban.com/j/article_v2/get_reader_data" target="_blank" rel="external">https://read.douban.com/j/article_v2/get_reader_data</a></p></li><li><p>Method: <code>POST</code></p></li><li><p>Body: </p><pre><code class="line-numbers language-json">  {      aid: 3538004, // 章节 ID      reader_data_version: &#39;v13&#39;  }</code></pre></li><li><p>Headers: </p><pre><code class="line-numbers language-json">  {      &#39;X-CSRF-Token&#39;: &#39;WZ4W&#39;, // 验证 TOKEN      &#39;Cookie&#39;: &#39;&#39; // 客户端拷贝一份下来      // 其他非必需  }</code></pre></li><li><p>Response:</p><pre><code class="line-numbers language-json">  {      ...      data: &#39;&#39; // 加密后的数据      ...  }</code></pre></li></ul><h2 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h2><p>解码的在 <code>https://img1.doubanio.com/dae/staticng/s/ark/latest/js/dist/reader/4.d65bc2b2702bed44f999.js</code> 这个js文件中，文件地址有 <code>hash</code> 值，发版肯定会变，所以想要找到解码的代码可以在所有的js文件中搜索 <code>012345</code>，一般就可以定位到代码地址。  </p><p>豆瓣阅读的解码代码如下：</p><pre><code class="line-numbers language-js">function(t, e, i) {    var n;    n = function() {        function t(t) { this._key = [], this._tbl = {};            for (var i = 0; i &lt; 64; ++i) this._key[i] = e.charAt(t[i]), this._tbl[this._key[i]] = i;            this._pad = e.charAt(64) }        var e = &quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz$_~&quot;;        t.prototype.dec = function(e) {            var i, n, o, r, s = [],                a = 0,                l = 0;            for (e = e.replace(/[^0-9A-Za-z$_~]/g, &quot;&quot;); a &lt; e.length;) i = this._tbl[e.charAt(a++)], n = this._tbl[e.charAt(a++)], o = this._tbl[e.charAt(a++)], r = this._tbl[e.charAt(a++)], s[l++] = i &lt;&lt; 2 | n &gt;&gt; 4, s[l++] = (15 &amp; n) &lt;&lt; 4 | o &gt;&gt; 2, s[l++] = (3 &amp; o) &lt;&lt; 6 | r;            var h = e.slice(-2);            return h.charAt(0) === this._pad ? s.length = s.length - 2 : h.charAt(1) === this._pad &amp;&amp; (s.length = s.length - 1), t._1to2(s) }, t._1to2 = function(t) {            for (var e = &quot;&quot;, i = 0; i &lt; t.length; ++i) {                var n = t[i];                e += String.fromCharCode(256 * n + t[++i]) }            return e };        var i = [37, 20, 41, 59, 53, 8, 24, 5, 62, 31, 4, 32, 6, 50, 36, 63, 47, 42, 30, 39, 12, 3, 9, 45, 29, 23, 56, 2, 16, 61, 52, 44, 25, 35, 51, 0, 13, 43, 46, 40, 15, 27, 17, 57, 28, 54, 1, 60, 21, 22, 14, 49, 34, 33, 10, 58, 55, 19, 26, 11, 18, 48, 38, 7],            n = new t(i);        return n }.call(e, i, e, t), !(void 0 !== n &amp;&amp; (t.exports = n)) },</code></pre><p>比较难以理解和使用，其实就是定义了一自己的一套编解码方案，最后解码得出的是一段json字符串，将上面的解码代码整理后可以得到：</p><pre><code class="line-numbers language-js">function pretty(metaData) {    function t(t) {        this._key = [];        this._tbl = {};        for (var i = 0; i &lt; 64; ++i) this._key[i] = e.charAt(t[i]),            this._tbl[this._key[i]] = i;        this._pad = e.charAt(64)    }    var e = &quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz$_~&quot;;    t.prototype.dec = function(e) {            var i, n, o, r, s = [],                a = 0,                l = 0;            for (e = e.replace(/[^0-9A-Za-z$_~]/g, &quot;&quot;); a &lt; e.length;) i = this._tbl[e.charAt(a++)],                n = this._tbl[e.charAt(a++)],                o = this._tbl[e.charAt(a++)],                r = this._tbl[e.charAt(a++)],                s[l++] = i &lt;&lt; 2 | n &gt;&gt; 4,                s[l++] = (15 &amp; n) &lt;&lt; 4 | o &gt;&gt; 2,                s[l++] = (3 &amp; o) &lt;&lt; 6 | r;            var h = e.slice(-2);            return h.charAt(0) === this._pad ? s.length = s.length - 2 : h.charAt(1) === this._pad &amp;&amp; (s.length = s.length - 1),                t._1to2(s)        },        t._1to2 = function(t) {            for (var e = &quot;&quot;,                    i = 0; i &lt; t.length; ++i) {                var n = t[i];                e += String.fromCharCode(256 * n + t[++i])            }            return e        };    var i = [37, 20, 41, 59, 53, 8, 24, 5, 62, 31, 4, 32, 6, 50, 36, 63, 47, 42, 30, 39, 12, 3, 9, 45, 29, 23, 56, 2, 16, 61, 52, 44, 25, 35, 51, 0, 13, 43, 46, 40, 15, 27, 17, 57, 28, 54, 1, 60, 21, 22, 14, 49, 34, 33, 10, 58, 55, 19, 26, 11, 18, 48, 38, 7];    let n = new t(i);    return JSON.parse(n.dec(metaData));}</code></pre><p><code>pretty</code> 函数接受一个加密后的字符串，处理后得到解码数据，一个json对象。</p><p>示例:</p><p>《冷雨》第一章地址为：<code>https://read.douban.com/reader/ebook/26395006/</code>，ID是 <code>26395006</code>，调用上述的接口可以得到下面的数据：  </p><pre><code class="line-numbers language-json">{  &quot;lang&quot;: &quot;cn&quot;,  &quot;is_gift&quot;: 0,  &quot;fixed_price&quot;: &quot;4.99&quot;,  &quot;has_formula&quot;: 0,  &quot;title&quot;: &quot;冷雨&quot;,  &quot;price&quot;: &quot;4.99&quot;,  &quot;purchase_time&quot;: 1485150722,  &quot;promotion_remark&quot;: &quot;&quot;,  &quot;is_sample&quot;: 1,  &quot;cover_url&quot;: &quot;https://img5.doubanio.com/view/ark_article_cover/ipad/public/26395006.jpg?v=1484298363.0&quot;,  &quot;data&quot;: &quot;b5Sb$PKnbOrb2lKLbOLbNlbpbxFbzbKEb5CbNlbSbf$bTlKXb5lbubKyb5$bUlKDbf$baPbpbxrb\n6PbJbxlb6lbnbxTb6lbLbf$bWbbpbODbGLKobOIbNbKhb5$b2PKCb5DbGbKhb56bNlKYb5lbulK1\nbOGb$PbQbOTbTlKSb56bNlbSbf$bzbKybO6b$PbQb8SbqLbpb5bbTlKEb5lbjLK1bOIb$PbQbxbb\nWbbpb5lbulKYbOLbNlbpbxFb$PbMbfJTjeQn2WoX3bbpbfLb$PKLbOrbGPKZbOGbGPKZb5bbubKi\nbODbNbbpbxFbobbwbxGboLbtbx$b6lbEbxGbWbbpbOLbNlKAbOCb2bbpbxFb6bKmbfLbqLbpb5bb\nTlKEb5lbjLK1bOIb$PbQbxbbWbbpb5lbulKYbOLbNlbpbxFb$PbEbfQ9Q8iazFgaD3ZCbf$bWbbp\nb5bbTlKEbOrbNLKEbOrbGbKFb8IbulKDbf$baPbYbxGboLbwbxPb6PbMbxGboPbSbf$b2bKhb5Tb\nNlKSbf$baPbLb5YbWbKBbf$bGbKZb5$bzbKibOtb2LbpbxFb6bbSbf$bzbKRb5lb2bKhbf$baPbp\nbx6bWkGQuWflgteKdvRiLLbpbfLb$PKLbOrbGPKZbOGbGPKZb5bbubKibODbNbbpbxFbobbwbxGb\noLbtbx$b6PbJbx6bWbbpbOLbNlKAbOCb2bbpbxFb6bKmbfLbqLbpb5bbTlKEb5lbjLK1bOIb$PbQ\nbxbbWbbpb5lbulKYbOLbNlbpbxFb$PbYbfJelrQQjLKgGLbpbfLb$PKLbOrbGPKZbOGbGPKZb5bb\nubKibODbNbbpbxFbobbwbxGboLbtbx$bobbMbx$bWbbpbOLbNlKAbOCb2bbpbxFb6bKmbfLbqLbp\nb5bbTlKEb5lbjLK1bOIb$PbQbxbbWbbpb5lbulKYbOLbNlbpbxFb$PbXbfQoGVRSGOIb$PbSbf$b\nGbKZb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlboLbwbxGbabbEbxlbabbtbfLb$PKSbOCbzPKh\nbOLb$PbQbxbbilbSb5Sb$PKLbOrbGPKYb8Ib2PKybf$baPbLbfLb$PKYbODbzbKSbOCb$PbQbf$b\noPb1p7Rakk9JPZIb$PbSbf$bGbKZb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlboLbwbxGbabbE\nbxCb6LbtbfLb$PKSbOCbzPKhbOLb$PbQbxbbilbSb5Sb$PKLbOrbGPKYb8Ib2PKybf$baPbLbfLb\n$PKYbODbzbKSbOCb$PbQbf$boLb1P$kb38afjbc9TPbpbfLb$PKLbOrbGPKZbOGbGPKZb5bbubKi\nbODbNbbpbxFbobbwbxGboLbtbx$boPbEbxCbWbbpbOLbNlKAbOCb2bbpbxFb6bKmbfLbqLbpb5bb\nTlKEb5lbjLK1bOIb$PbQbxbbWbbpb5lbulKYbOLbNlbpbxFb$PbtbfJYbATibf$bWbbpb5bbTlKE\nbOrbNLKEbOrbGbKFb8IbulKDbf$baPbYbxGboLbwbxPb6Pbwbx6b6bbSbf$b2bKhb5TbNlKSbf$b\naPbLb5YbWbKBbf$bGbKZb5$bzbKibOtb2LbpbxFb6bbSbf$bzbKRb5lb2bKhbf$baPbpbxDbWFZF\n2Mlb$PbSbf$bGbKZb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlboLbwbxGbabbEbxPb6LbLbfLb\n$PKSbOCbzPKhbOLb$PbQbxbbilbSb5Sb$PKLbOrbGPKYb8Ib2PKybf$baPbLbfLb$PKYbODbzbKS\nbOCb$PbQbf$b6lbLbfJj48Lg9joAZ$4Mjw8afLbpbfLb$PKLbOrbGPKZbOGbGPKZb5bbubKibODb\nNbbpbxFbobbwbxGboLbtbx$balbEbx$bWbbpbOLbNlKAbOCb2bbpbxFb6bKmbfLbqLbpb5bbTlKE\nb5lbjLK1bOIb$PbQbxbbWbbpb5lbulKYbOLbNlbpbxFb$PbMbxrbWRzq2dVFBkqj0Orb$PbSbf$b\nGbKZb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlboLbwbxGbabbnbxbbolbtbfLb$PKSbOCbzPKh\nbOLb$PbQbxbbilbSb5Sb$PKLbOrbGPKYb8Ib2PKybf$baPbLbfLb$PKYbODbzbKSbOCb$PbQbf$b\n6lbEbfJNY8kJbf$bWbbpb5bbTlKEbOrbNLKEbOrbGbKFb8IbulKDbf$baPbYbxGboLbwbxPb6LbM\nbx6b6PbSbf$b2bKhb5TbNlKSbf$baPbLb5YbWbKBbf$bGbKZb5$bzbKibOtb2LbpbxFb6bbSbf$b\nzbKRb5lb2bKhbf$baPbpbxrb6Lb1dpga4k$gbf$bWbbpb5bbTlKEbOrbNLKEbOrbGbKFb8IbulKD\nbf$baPbYbxGboLbwbxPb6LbEbx$balbSbf$b2bKhb5TbNlKSbf$baPbLb5YbWbKBbf$bGbKZb5$b\nzbKibOtb2LbpbxFb6bbSbf$bzbKRb5lb2bKhbf$baPbpbxrbobb1pG8aU3W5d0Fb$PbSbf$bGbKZ\nb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlboLbwbxGbabbnbx6b6PbMbfLb$PKSbOCbzPKhbOLb\n$PbQbxbbilbSb5Sb$PKLbOrbGPKYb8Ib2PKybf$baPbLbfLb$PKYbODbzbKSbOCb$PbQbf$b6lbX\nbfQxSPbpbfLb$PKLbOrbGPKZbOGbGPKZb5bbubKibODbNbbpbxFbobbwbxGboLbtbx6bobbLbxrb\nWbbpbOLbNlKAbOCb2bbpbxFb6bKmbfLbqLbpb5bbTlKEb5lbjLK1bOIb$PbQbxbbWbbpb5lbulKY\nbOLbNlbpbxFb$PbMbxTbWDJkCLCb$PbSbf$bGbKZb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlb\noLbwbxGbabbnbxCb6PbLbfLb$PKSbOCbzPKhbOLb$PbQbxbbilbSb5Sb$PKLbOrbGPKYb8Ib2PKy\nbf$baPbLbfLb$PKYbODbzbKSbOCb$PbQbf$b6lbwbfJFRAZlbf$bWbbpb5bbTlKEbOrbNLKEbOrb\nGbKFb8IbulKDbf$baPbYbxGboLbwbxPb6LbXbxPbabbSbf$b2bKhb5TbNlKSbf$baPbLb5YbWbKB\nbf$bGbKZb5$bzbKibOtb2LbpbxFb6bbSbf$bzbKRb5lb2bKhbf$baPbpbxrbabb1CBssI3Drbf$b\nWbbpb5bbTlKEbOrbNLKEbOrbGbKFb8IbulKDbf$baPbYbxGboLbwbxPb6LbAbx$balbSbf$b2bKh\nb5TbNlKSbf$baPbLb5YbWbKBbf$bGbKZb5$bzbKibOtb2LbpbxFb6bbSbf$bzbKRb5lb2bKhbf$b\naPbpbxrbalb1e0Yb$PbSbf$bGbKZb5$bTlKeb5$bTlKLbOPbjLKRbOlb$PbQbxlboLbwbxGbabbn\nbxPb6LbXbfLb$PKSbOCbzPKhbOLb$PbQbxbbilKzbfLb$PKFbOrbGLKObOIbGPKsb5Cb2bKZbf$b\naPKkbOrb2bKnbOCbWbbpb5bbGPKRbO6bNlbpbxFb$PbYbftbalbJbf$bWbbpbOIb2PKnbOrb2bKh\nb8lbulKsbOCb$PbQbf$b6PbLbxrboLbsbxbb6lbsbxrboPbpbfLb$PKLbOIbGLKYb56b$PbQb8Sb\nqLbpb5lbGPKZbOtbGLKSbOrbzbKyb5$b$PbQbf$b$PbSbf$b2LKEbODbNLKibOrbzlKYbOPb2LKE\nbf$baPbpDaXSkA95bf$bWbbpbO6b2LK1b5lbNlK1b5lbGLbpbxFb9LKBbf$bNbKZb5lbTlbpbxFb\nqLbpb5lbNlKtb5lb$PbQbf$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bb\njLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKY\nbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFb\nNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKR\nbOlb$PbQbxlboLbwbxGbabbEbxrb6PbEb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb\n$PbQbf$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb\n$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKp\nbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5Yb\nilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbw\nbxGbabbEbxrb6Pbnb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$b$PbSbf$b\nNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKi\nbO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56b\nNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKk\nbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bb\nNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbYbxrb6lbX\nb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf4j6kLYzFga8h347LEOi9TyhnVS\no5urdZ27x$NmGdNkWXkfuAlLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$b\nGbKib5rbzlKyb5lbNlbpbxFbzbKEb5CbNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PK0bOCb2PKY\nbOCbGPbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb\n$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbS\nbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbx$bobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCb\nqbKYbf$baPbp$KlP8bK2NqCbj3L_NJzab$6A7LPb6lbwbxTb6EbCbxrbabbEbxd7flbpbfLb$PKk\nbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbzbKEb5CbNlbS\nbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKEbODbNLKFb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTb\nTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKh\nbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbEbxCb\nilbSb5Sb$PKYb5DbGbKhbf$baPbpb5bbTlKebOCbTPKEbOCbTlKvbf$bWbbpbODbNbbpbxFbobbw\nbxGboLbtbxlbobbAbxPbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$PbMbfJT\njeQn2WoX3bbpbfLb$PKSbOCbzPKhbOLb$PbQbxTbWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bubKhbOrbNbKSbODb2PKh\nbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbEbxGbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$b\nzbKhb5PbzbbpbxFb$PbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rb\nzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbS\nbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbp\nbxFbobbwbxGboLbtbxCb6lbLbxCbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb\n9LKBbf$bTLKybOtbzbKhbOtbzbbpbxFb$PbPTZrb$PbSbf$buLKRbOtbNbbpbxFb$PKhbOYbGbKF\nbOrbGLKRb5FbNlbpb5YbWbKBbf$bTLKybOtbzbKhbOtbzbbpbxFb$kGVNiNlOTeVjJi7xrQQC8RF\nRhLMC6mkWXbidFuq5wurznMw9XGFdcmwS$5HjirLbPbpbfLb$PKvbODb2PKDbf$baPbpb5bb2bKZ\nbODb2PKYbOCbqbKYbf$bilKzbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKi\nb5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb\n$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODb\nNbbpbxFbobbwbxGboLbtbx$b6lbEbxPbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pbzbbp\nbxFb$hGFNpZk9eur0mha4kpkDGn7xrQQNpcj6kLYdPKFowurCHZEuiI6NLk6b3GF2P3ku5urPYha\nOJ56prEoG_I6dAKG69EcdPH6bjurpag2C$widsuoG_I6TZubKCmPdPAoG_I6dhcVPCBaC7N2Crt4\n3AKafAzh6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKY\nbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bb\njLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlb\noLbwbxGbabbEbxrb6PbJb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV_dt72\n3toj_hMMzFU_ACJ$9gRqz_I6TZ8zIeB_jtZGr3Kuu4NaZyI6uImv$juru427x85PdDQl79TyD4oa\nb5V5PvaxU9EnjWZAZV5o9lYLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$b\nGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKk\nb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$b\naPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbp\nbODbNbbpbxFbobbwbxGboLbtbx$b6lbnbxbbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pb\nzbbpbxFb$F7NDGMAZ5RQ2Kd7x8Ih2EswlVN$NqzAZ$8lPqXCGJKd7LMgGYtoiUzAZOLYeJhNo8Tb\n3z$Lb3Tb3z$Lb3Tb3zW7x8x_D4odQkRTeSUfGeurjbc3cNUi3EpoG84F7LMpr9YjPdZAZOVW7LMp\nUtx6jiVqbABZzv8c1iI6zUZvAXwcNau_MwurzHQbR_I6z3hefNGV35_7x$7Njx8kWA$gGBKj45ur\nzgmsanbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKh\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8Ib\nTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKm\nb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGb\noLbwbxPb6PbMbx6b6lKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbpjtZhQCBh\nCDw7xO$gNA3U6$7NDGn7x87TpBKaZF7NjHzjnhtfzFgCx3sj7LMajt1LdPX1K9hu0mkgnOTy3aRe\nTTZj7LMaLrJ$3nKjl_I60msaZhqx3nJGGiI6jx8g0CJi248ef35QCB1_M7I6D4oX5ABZh6O3f5ur\n3ygFx7I6NpmNPDB4TZ8X5AYBzFU_1j366b4_A3Qe3IJqbyI6NLhabrtH3EZprT7TNpmGr3hnNiuW\nR$yOzFgXoYQQ7LMpr9EZNLhd1AVcds27xrtozc9lCYB9GBKj4$75jJzPxkPw7LMp8Fb8NpmX5ATy\nuwSLbkjAhigagCQO7LMhmRjYjxO$HA$gdpVaZyI6TZ8AZ5PYjrs2CV56248efN3G9Xx7xO$gzLsa\nxTeKPqRzIjurznMw9XU6Pd07xO$gjmZ0pCQOPqRzIjurjeUiZ8U6zgmhJiI6dYNlzhLCdMRj4Opk\nDGn7x$eKC0flFwV5PvaxU9EnjWPLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbS\nbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLb\nNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$b\nWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbnbx$bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKh\nb5PbzbbpbxFb$kpkzFg1K9NLjHNipVvT6bVanF7G9lgeO7I60mheT9En2C82yNTCNqf_1iI6248e\nf3DH9gRStkcG7LMSSALYC0KaZhLm9dd7x8LM3$MN4T7q3EZab$Xw6bVg035gC0f_Y3Dr7LMdBYBh\npQggckzhD4oakATy3gfikToV6b8EXXLcPYDLbTUEC9EfIdbKNeU9Q$oV6bOfRFW56bO_NhVoPYe7\nx$7TNLhdJhD9dPKakX_vdPXgchlo9Xi7x8_$pQgihAPw9XKAZV5aPmLLbhGFC7NEgnbKC7ujkxbK\n0mZefjRjdPR0bezbzFd7xOTyNeux1NjHG68AZVGE2xd7x8_yd19lOF759toaB5urCipjTyI6zLs1\nK9huC0fgnVzpulXEujurpOpjTeQJ0q77xOEnk6Q_qtmBdPKCaiI69toaBOGVdRsG6TlmdFNafAzh\ndF27xOtj0msj5J566b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb\n$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKM\nb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$b\nWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZ\nbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb\n$PbQbxlboLbwbxGbabbEbxrb6Lbnb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQ\nbfVFRR56zFgab8$5D_Xip5ca6bVdQkTyTZ8wJNKd7LE_ACtHdZNXdrt4TDKefNtizFgw_5z27LM9\ntrtQzgmYKkqrDfKAZ8ai31x7xVxmNpmcw3yJNqKSX3x_dvRAZ5GIzXsabOPwCPu_H85QkVEfGkzh\nzFd7x8CyNLkqYjNm7LMFRDJidPKFonbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb\n2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b\n2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb\n$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbx6bobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKY\nbOCbqbKYbf$baPbpk6JAZ842jtZNV7I6NpZk9h_$TFRprT7NqxgGUXslzFge4Oz7hqZCa3IbdF27\nx$7T3xk_AAzhdPKakXqx3ntLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$b\nGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKk\nb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$b\naPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbp\nbODbNbbpbxFbobbwbxGboLbtbx$b6lbnbxCbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pb\nzbbpbxFb$k$gCyQKG8aBTA8ab8IPqxgLLk4hiv07x5FojQJwfYQOdPKw_rt4hAVAZO9LhiSLbkGV\ndPKeT3yIpcAWSeurNpmabrtHPbOWNhyi7LMj481AdpXibOqHNYKvqYQOPqRzIjur92s2C8laPqRe\nl5urdFy7xO4hivZAZrtWCYHlQ8$OjiVcnwxfCiRaZRBghLe7x8De9gRhG8sj07hzIerANqKSXTcF\npQgaZyI6TZ8_ejFb0mZwfXcjCiReNCt4hAVgkjzbdPKa4eOiT$hjnhtfzFgCx3sj7LMsV9LY6b$b\n$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKD\nbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$b\nzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbE\nbxrb6LbAb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVsV9LY7LElFJ56NyJk\nWA$gzFghgCJZ6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb\n2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbp\nb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLb\nGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQ\nbxlboLbwbxGbabbEbxrb6Lbwb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVp\nr944TH3c1O_VTZK9tyI6dpVj4VjF9gNAZ8QiivZTKR566b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQ\nb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKR\nbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZ\nbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrb6Lbtb5YbWbKBbf$bNbKZb5lb\nTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVgGYt4hq07xO$gzssaZDtbqVzIRiI60mZax9xn3b_7x8LM\nq1mwl81x3XKj48Q4dPRdYjjY3r27x8gX35j7xrQQPb8aZhLMNpc_A9Pw6b$b$PbSbf$bNPKyb5$b\n2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1\nb5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKn\nbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb\n$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrb6LbJb5YbWbKB\nbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVprT7T3EZ9whgnzYKFRR56D4oEgwcad0Xd\nE5Gi9JJAZ$4nPYhSSXEt7LMj4O$gG1A9k$752dsAZrtbzgmaWiI6zMmAZOTydSJeN9EZCB1_Mt7N\nuxz2C5ur3nKh1iI6D4oaU_I6CIZaaDBbdDZ_OkpkC0K2P7Iibf$bWbbpbOTb2LKEbOYbTlKYbf$b\naPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLb\nulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKY\nb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$b\nTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxlb6bKmbfLbqLbpbOlbTlKY\nbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbpbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb\n2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b\n2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb\n$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxlb6lKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKY\nbOCbqbKYbf$baPbpTZrb6lbwj$OlFXJY7LMj4OYh2xgabrtsp71uArQ67LElFAjACKhUOh$uNTzY\nKh$OGcw7x5_sdPRCx8skCIZ0TDQOdPKStk9LzFlLbRf0NiNlOiI6TZ83eOSpGcXafeurzdz2uiI6\n3bX23X_vhDNeiyI6GcXafhKwC5z3eOSpdsNAZ8hn9Ah2C$fy9JRax9spTZ8abrtH7LMaXeurTZKc\nQNzqj0ZNiiI6hjmihYJijPj7xrto0Iz2c9$gNA9Wm_I60mhakJxmNpmv$TkKzFd7xrB9NLKCa8I3\nTZ8AZ8GLN2hkWX0Lh7_7xOGVGWhlnA$gD4ohmhbNhXJqa89GuEVAZ_I6dPKa4DtoTbJaU5ih3bXA\nZOs6TDsi23zk6b4lFAjACKe7xVzUNp3e5wurTZ57xrt4p7J_Ohttj0poG5hq7LMPItMZhDNeikVW\nTycWwjsU7LMw_V563fsPMTrVPle7x$mB0ws369s6ishpr3lSzFgFoXsl6b$b$PbSbf$bNPKyb5$b\n2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1\nb5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKn\nbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb\n$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbobbEb5YbWbKB\nbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVsV9LYdPKaWjuruf8N8yI6NpmabOzZ9UzR\nPkGVdPhAihDui5a3iwurzcA$37I6NEMCx3_v$KM2Nh0vp8GP5iI6dYNkWX2Pd0RNVXDu2TpoaTb8\nNpmabrts9ANX5wuriMZhgiI69Uz2sk2YdkKPBweL9toaapbGdPKaWTZj$KYLbFZjzFgaV$cJ7LMe\nfCc7CphqhXU6jbcoZ3tf6b8ef995CjzqhnbKjbmCbXQj6b8iQJDljRGLb9GVdkNqhXU69juxohQj\n7LMNVXDejbmGxwurjRq3QVzpTEgj4rtb0ji7xOTy9ANX5YBSuImN49Cc9ANdUhL_NiNzJh_nzFgs\np$YJdhK9BiI6Npmcw3De9gRhGO$gd1EWm5BN9Bu3iXlSzFd7xVf0dRs9wh1A9URk9eurCKmdtwur\nzMm2eesCurPLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKy\nb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$b\nGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFb\nobbwbxGboLbtbx$b6lbYbx6bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$h5P\ndDJplOGVdBmU43Qj3bQjTeWsqFUqY9ujzFUoVwVRC4p8nX1D7LEl79TyzdzCx8skd1MAZ5eT9INC\na5xi9Qd7x8lSp7UlFYQ2jbmLwJSId1Mef9jACKhaGrto0jzabO3YCL3Lw7I6dBmU43QjzFUbb9z7\nd1MajYIuTSNibrtbCL3eNiI6dPKFa9PJ3nKgchC1ishaXDBS7LEo9eurhW8vXrtbNjgdK3o9CiRd\n1wur0mpVP3Du7MsCW$yY7LMax9Ty0bOl7TxmdSJaNhQjPb8eiAVWdPRaG8$LdPhcRwV5brlb3PKr\nTZubKNBrPeVy4wCBzFd7x8kfNJM_T52YTQ93BkGV248ef3o97LMa1h1AdPffWrIu3sJB3rmP0mhk\nWJzq2o3AZrtGpjmaxTxmCXuWHCmP0jx7x8kfNJM_T5GizFgPIYJL7LEozwPKjJzj4rB99BNqhJ56\ndef_MXc$9gRv$93N0t9ogO9NTZubK38AdsNAZVzUNp3GxtyY7LEWHTbKNwcWS8cjdAKAZ$rt7MsC\nW$yY9juxohQjNLhabrQ2p63efNjFjZZAZ8L_hRU3m_I6GOmgUNxmNpmkxJBrzFd7xOGVdPKaktxO\n9UzAZ5Cw9joCx8skdMRL1Ct4dpge2Jh1NNe7x8GFDGEjTkWVdPRaZhtT9XKpCLKWbODbGLKn$fTP\nVPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKS\nbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb\n$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbt\nbx$b6lbYbxlbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGTZ8DnCmPzFgN\np8k$3OW7bUbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIb\nzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKL\nb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56b\nNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbY\nbxGboLbwbxPb6PbMbxlbolKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMp\nr9jhdAKEa5urCCZa1h347LrP5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$b\nGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKk\nb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$b\naPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbp\nbODbNbbpbxFbobbwbxGboLbtbx$b6lbYbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pb\nzbbpbxFb$hGF3PZeleurdPKaWTZjdPv7x5GWC0KQiwzbGEHbejQpdPJAiTVEzyZp7OPwjLmAZrtb\ndpXF$9GozFg2NeCiThoesyI6dhmax9TydSKaUO9LeVMap7I6THVNGAGWCIsAZ83k7LEVE3cj0b8N\n4hu0jEKwfYtoTamAZ83k7LMax3L_jIa6bjpLdFu6bCtbdPsAZ83k7LEl79GVCccb73GF9Iu9Meur\nPqH$d$mk2C8aW9aFNf8gtrtWjx8ibOVd7LE_A9jACKhwfwxshihAZ8l69ANaBrtbPpM_Oh2YTZKa\nbrtH3L07xOPJTAJax3l6zFgPM3OX7LElf9WRCHKS19$9CRXesyI6GdNCxh_$d13abO9JZxAoVNbx\n0zrLb9CcG1fWwjQkiQges0bKTZubKTpvGcXqGRxF9joX5wGWpG8dQAzhN3h278DrPb8qfO4ddvRa\naeBdNXILbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lb\nNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKi\nbO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbw\nbxGboLbtbx$b6lbYbxGbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$hmdGd27\nxO$YDz8prk65zFUo4FYpPb8eiXU6ThoeskSQCGMAZrtoPkm2NeCi7LMaxCIuNpc_A9zZp8zafeur\nC9plQxbfdhmef3x_hDNeiF7NuxzAZ8hm9ANX57I6DKsaNhQjdeKhZXsk3bAr37I63EZNzF6AjRzA\nZVuChiUgn$5HdkbLbk2Y9gRAZ8gp7LMkWXU6TZ8abOPwjeoqaOjP9CzAZON1DKR2NeCi7LMef9jA\n3EZGxXlxNrR_d9$9Pb3NzF6AjRqgn5FodXMlj53N7LMaGrQ2dPXPxDJ$CO3qsXoYjtZNi3lxzFgS\n1jftjbmCb7I6TZubK39zNAmNzF6A7LMXoXsR9XKaB$K4PrR1aO$_qcJYb7I69jo2u3sld1EbUFK4\nNPJk5X8vCA27x8OoTf3PV37NjmhiQttRCX9_NyI60jN9wh1ACBSLbPbpbfLb$PKkbOIbGPKsbOrb\nzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKh\nb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbS\nbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bb\nTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbYbxPbilbSb5Sb$PKD\nbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$k$g3fi7x8hmC6m0aDQOpqoU4YQQzFgFoXsl7LM_\nghGFCpsa1eGIdpw7xO$gCjN2ee1jdpR2N8xBzFga10bfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKB\nbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKe\nbOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8Ib\nulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKe\nb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxlbalKmbfLbqLbpbOlbTlKYbOrb\n$PbQb5Sb$PKYbOCbqbKYbf$baPbpTZ82cNiR3yXlzhx_9JJj4OTyTmKaxTXwCjUoF7I6dhmaxjih\nD8oefCBbdDZU4wurCcmaJ3U6Cpsa1DQD2CrLbDtozc9lCA$gG0Nvn9TyPmMqbhGQP$ko43slzFga\np7I6NpmPxDJ$p4sgu5_sdvHl7jihD8oAZ_I6dYNGT8DvzFgNGXr70mha4FQvdyw7x5Z19JJajt21\npQhpr94SdPAozXDYNA3AZxbfpBKihAGVdPKv$TysNTqW7yI6GcXaaYBBDWkbb3t$3EZqVezbTZ8a\nB$75dMHbbXDodkKAZV5oGWe7x$1EC0Kab5y5CZXaWjurPbOW7k956bHGP9_l0JNpIAVdhCzgGth7\n6by7xrtbdYXCx8sk0AJsl9Gjp7sU6fbGdAKkWYtHCXubpjurN6XUb8MPT0i7x5WjdPffW5urdvv7\nxrJiCcsl9pbThCzgGth7$Ke7bCmP9TV_33IQkRzaZR5gicfxSyIi$Kw7x87mGdNefCtH3bM2Nk44\n9dU_28lgTZ57xOofzYK9o8_gCiRaZkr_35osIN37zFgBr30LNAj7xOahzYx7x85PdDJgu5_szFgC\nx8skD_Xp2T759dgeNjGWzYKprjSg7LMNi3GFDWkbb3t$dPKTI5$O3NYP5OGVdSKaU8hmqM8AZ_IK\n$Kw7xOVoNymprTe0dFN9mxbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb\n2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKL\nb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTb\nzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$b\nulKDbf$baPbYbxGboLbwbxPb6PbMbxCb6bKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKY\nbf$baPbpD4ov$NNONwJqzkEZNLhBr9$g7LMaXh_HNpc_2$75NAj7x5GWdFNpr35PqzW7xrB9zFgw\n_5hq9jXlnXGF97hprTyYpmw7x8g4pIhprT7NqGXapATydPXl_8cj3EZZxwur6b4lFYtbC0y7xO$g\nTgcVET5Hji83eOSpzFgaxCB8Npc9gkzczFgTIVindF27xO$gNpmax9TyNqhG63wEiSc$HYB90mha\n4DQQGkVETF7wdYmaZhgp7MIb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bb\njLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKY\nbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFb\nNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKR\nbOlb$PbQbxlboLbwbxGbabbEbxrbolbMb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb\n$PbQbfVqh$yhNpmCV7I6TZ83eOSphDNeieurC9plQ_I63NMv$hcjpT8CiCQO7LMdBATyTZ8CTyI6\ndPKAm8GF97haXhKuzYKipOKAjIoAZrQWT6CLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKS\nb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$b\naPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKD\nbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrb\nGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbXbx$bilbSb5Sb$PKDbOrbzbKZbf$baPKB\nbf$bzbKhb5PbzbbpbxFb$DtbdpA$3wurjxXNoOWlpzW7xOGV9BNCx3_v$KMTjeQn2WoX3fbzzFgN\nzF6AjRi7x$bKNwmkWYtHdSJNVXiajPV9wkzhzFghZtVQhXVqz_I6dPKAm8zuTLOWH3l69ANaB8_v\n9toAZ8Qj$KMIXkLYjRGP5iI6dPAVP3_v$KMNzF6AjRGP5dbfTZ8ajATyC5zCW5_sdPRAZ$VQNEmX\n5t1FpBRpdjihD8_7xrB93EZvnYtHhRU3mVxmTLVwlOEJzdsAZ8oLC0zCLiI6NpmdG$MZ2dJXaX1A\nPQsNU5ur$KMTjeQn2W6P5jnBCZi7xrB9zUZS1jCBzFgCx3sjNA3cANuChigCi3lo7LE9gkzcNLha\nW3o$NdJ2Nhla3EPP5Ot8NkZAZ8ZqivoSSEbzD4oa4RuChiUgn$5HdkffITyszFgaTOxy6b$b$PbS\nbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$b\naPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJ\nb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrb\nolbnb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf4lFYtb9Ue7x8GLdPRAZ5ey\nh1H_A8c$CJv7x8DRqeRajYtoNiN_OkGVh1RAZ5paj8Or_CtWNAj7xO$gPd8afAVW93i7x$XL0msT\njeQn2WoX3_I6GWhaZDtbNAmdJOn3iHVIXheGPn27x5xsk9JGrjn96b$b$PbSbf$bNPKyb5$b2lKZ\nb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lb\nNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKi\nbOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCb\nWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKL\nbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbolbYb5YbWbKBbf$b\nNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P55BN7LE_A9TydSRN4CtsCYZAZxbf$KXhZtVQ\nhXVqz$bKNwmj45BNTZ8UoDmGk9JCLCJWCDw7xO44brYbCbbndHgU6O$gTDsaf0bfbf$bWbbpbOTb\n2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0\nbOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZ\nbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb\n$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxCbolKm\nbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMaxT75dSRN4CtsCYZdBtxm248a\nLrJ$CT3213le7LMaXF7TjpNaZDtDdpRNGXsR9Xf_MAzh6b$P5TbKNwmab$cJzUZUchslPPKIXkXO\n7LMab$cJjpNwl5hqqzZAZ5SgTlmcA9$gp7lLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKS\nb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$b\naPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKD\nbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrb\nGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbXbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKB\nbf$bzbKhb5PbzbbpbxFb$pbG9jw7xOEZdFSLbpbzTZ89wesCds27xVbUdFTb6lbX3XqCSjBNdsTL\nbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKS\nbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb\n$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbt\nbx$b6lbXbxGbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DtbNAmNw$6AzFga\nmAPINpIbo38x7LMdJhD9bxrb68zj7LMkWYBTisklFYtHbrYbCbbnzFd7xVf0NpmprT5Hji8AZbKo\nb8bb6nbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKh\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8Ib\nTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKm\nb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGb\noLbwbxPb6PbMbxCbabKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp3EZpJ9GV\nPqRzIjurTDseaDBhCDw7xO$gNLhabrtHzUZeN3lSuYMAZbKob8bb67I6NLhhmDIuC5zlzAW7CBs7\nC3le7LMX4bK3b86blk3LTAJcyYBaiX8afDtW0wAjIYJl7LM3eOSp3fMi23zkzFgvd_I6jx8kWYBa\nD4ohmhbNjLKNEwur6b4_A31A9juxohQjjLKi$rtodDj7xO$gNqKZxYtsCm8nS8QjCT3AZVindhx7\nx5viGdNkWtcc0BJaCVTizFlLfhojN2DLf7I6dPf3BkVozc9lC7I6Pb8eiYJihXJqa89GuEVi23zk\n7LM_ywB_j0ZeNT7NDGMaG8hAPnN3eiI6dD9bxrJ8dDy7x8U6dsNajw1jNpmprrQOCYRa4kGWCISL\nbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKS\nbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb\n$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbt\nbx$b6lbXbxDbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$FbKNwma1h_v$KMs\nu3dh$Kw7xO$gNLhhmDIuTFHKQhwMNqhzIDtozUZeN3lSuYMAZ8L_jbIbdlKlbxocACB97LEWHCB9\njpJpr3KwC5zh_hGF$KM1K9NFzFgTjeQn2W6P5N567LMi3CtWhDNeiF5HdkKhmhbNzFgTIVin7LMa\nA5BNdsNAZO4hD9MkWYtbuErb6lbL3XqCSdbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKL\nbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxTb6bKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb\n$PKYbOCbqbKYbf$baPbp$KM_T$7NNpmD5e2g3fMCV7Ii$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQ\nb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKR\nbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZ\nbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrboPbMb5YbWbKBbf$bNbKZb5lb\nTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVaXeSSdPKv$3lSTZOWm$7NdpRNgAbHT_oSXjurNiNlOiI6\n0mZaJCtQTZOKr3slNLk3BRpT6bVprjBNdsuVtJ54p7d7x$7NdpRXoXl69ANkWA$gd1MnBCt4zFgq\nz5QeqEMab8lo7LEfITysGehU4Xhm7LMaXh9GuEVj4rmPd1MqhJ56PqR2NFWMpcw7xO$gzFUfITys\nCIZEq3$vG6W7xOVbd13G69xnC5zqf8skPeRabrtW6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb\n$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb\n2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGb\nGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrboPbEb5YbWbKBbf$bNbKZb5lbTlbp\nbxFbqLbpb5lbNlKtb5lb$PbQbf4_A3mdGdNax316C9ZkWXbiCc_7x$5njK8ajw1jdPKJnT5HTZ82\np98L6bVprjCF$KM2NFWMpcYP5T7NdpRYKeCMNA32p98LTZOKQhwMC8RihAEZhge7xrmOCjN2ek$g\n2P3R9hcjjt07x$7Nuxzl9eurd01VPj21zFd7x$7TNpm1tTAnPqRzIjurTrsTI5N97LMpr9xnNdu9\nMDB9zFgTIVin7LMpr39GuEVX4Vf0dRst0epazFd7xV5o9lXAZ_I6hRU3mV56NMqWcwzbCX9Wnjur\n9_fjI7I63EZN5V56dngpr38hzEbLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbS\nbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLb\nNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$b\nWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbAbx6bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKh\nb5PbzbbpbxFb$k$gzMmPzh7x7LE_A3LMNpmAY3lS6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb\n$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb\n2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGb\nGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrboPbYb5YbWbKBbf$bNbKZb5lbTlbp\nbxFbqLbpb5lbNlKtb5lb$PbQbfVprCIuTFFbdlKlbxagn5urbOYbulK0b5$b2LKdbrgdT3_9CiRe\nNiI6NdQ_AAVWNnHgn_I6TFRplOGVzFgi3NinNTzamR5oN2KCi3lo7LM0fNZQjFmhz5lO9jw7x5rA\n3bJj4Oy_9Uhk9Dt47LMX4$bn98JDv9CczYx7x$72C93wTjGP6bVaXeur3lqiinbKdsNAZ8gI3xPL\nbCB9NLhhmhbNj73aZhDHhjmAZ8_h9Xx7x8yIPigAZrtoPqHVEjur3NZS8_I6D_XkWYB9zUZeNTmB\n0wspkkgtzYKprTbnZMzAZOLCTO77x$7NdRsS8OKypQhprTQQ3EZqpDt4zFUaHYmd7LMNiCIINpms\n2hGF0w1_qtoZ2nJAZ81mhZgSSJzpdPRabOPw7LEjjhttNdJei0bfNLhhmk$gzFUaHYmddMRZTk8p\nCm8LQ7I6TZ8_Oh7odPX_dA44TDs_a$72zAO$Jfbk$fTb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb\n$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb\n2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGb\nGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrboPbXb5YbWbKBbf$bNbKZb5lbTlbp\nbxFbqLbpb5lbNlKtb5lb$PbQbfV_gkTyD4oab8DR7LMaxCtbuxGLbPbpbfLb$PKkbOIbGPKsbOrb\nzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKh\nb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbS\nbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bb\nTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbAbxTbilbSb5Sb$PKD\nbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$kXR3a9Wm_I6dsNqVDQOdpga4hhn9Ah2C$75NACL\nbhhn9Ah2COTy0b575YB9d1Mj4$K4dSKaU_IiTZ8BUCtoC0Kk9Dt4dF27xrBaCca$pJ56TtmgcFbn\nNnReNiI6Tm4_ALKsb5bb67I63Ep9QhladvRGrjurdPKaWTZjdPv7xOW7zYKX5XeGPnu_1TXL0BhC\nWxbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKy\nbOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5Yb\nWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbw\nbxPb6PbMbxTboLKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$fTPVPbpbfLb\n$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKL\nb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQ\nbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5Db\nGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbA\nbxPbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGqEMab_I6dX3uKX78k51b\n73Dik5RU49sBTtDLbeSSdFLPVpbk$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1\nbOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKS\nbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbp\nbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrboPbJb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lb\nNlKtb5lb$PbQbf4_A9TyhDNeieur9_fjInbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKL\nbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxGb6bKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb\n$PKYbOCbqbKYbf$baPbpdX3uKATyGcXafeur9joCx8sk7LMpr5BR3$E9gkzcdPXAcrt4dPy7x8iQ\nNEMafky_uEObbty3D_XkWX8FGcXUdCtV7LMqz5QeCDXahxbfbf$bWbbpbOTb2LKEbOYbTlKYbf$b\naPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLb\nulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKY\nb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$b\nTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxGb6lKmbfLbqLbpbOlbTlKY\nbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM0RCtWNA3prTkKp7gAZ_I6jx8kWA$gzFUVtJpTN2hS\nXUbk$fTP5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lb\nNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKi\nbO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbw\nbxGboLbtbx$b6lbwbx$bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$Rf09Ue7\nxOTybx$b6bbMbxVqzbbYNLPb69jh7LMZODQQPFW7xOEZdvR7O5urTZ8SF9GVp4sibOrudvHfPeaR\nqMrLbkYh2xgqbDBoNERd8R2H7LMabrtsp8zAZ5ur3nfjTDt47LM2NeCid1MhQ3LMTFRAiN2H0php\nrrQO2OOqYjur2a3So_I60jfoBX78k5sGxX7xi7M77xbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKB\nbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKe\nbOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8Ib\nulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKe\nb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxGb6LKmbfLbqLbpbOlbTlKYbOrb\n$PbQb5Sb$PKYbOCbqbKYbf$baPbpD4ohmyI6TZ83p3UNjeV1o8cjpT8vq7I6TFRdQh9zdFNaf3_0\nzFgNzF6ANAmh_hGF0qc_13Zq218EKh5QzYKPzh7x2WkKqwurk9XAYDtaqyhBieur3toj_kZAdPv7\nx8On9JRg0CJidPAVP3aBD4oa4hloCcSP58ZqivoSSw3C$KXAZ8hAPnNqhYQO6b$b$PbSbf$bNPKy\nb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6b\nNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb\n2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbp\nbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrboLbYb5Yb\nWbKBbf$bzbKJb5bbNlbpbxFb$PKLbOrbNLKhbO$bGPKhbOrbuLbpbfLb$PKRbOlb$PbQbxlboLbw\nbxGbabbYbxrb6lbAb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$b6Pb1h1Zj\nneurdR8T3bbpbfLb$PKSbOCbzPKhbOLb$PbQbxTbWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bubKhbOrbNbKSbODb2PKh\nbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6lbwbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$b\nzbKhb5PbzbbpbxFb$PbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rb\nzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbS\nbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbp\nbxFbobbwbxGboLbtbxCb6lbLbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb\n9LKBbf$bTLKybOtbzbKhbOtbzbbpbxFb$PbPdAbb$PbSbf$buLKRbOtbNbbpbxFb$PKhbOYbGbKF\nbOrbGLKRb5FbNlbpb5YbWbKBbf$bTLKybOtbzbKhbOtbzbbpbxFb$DtoNpmsV9LYNEMj6rQQ7LM_\nT8yJ0mha4hojN2hGxXiajPVdG$MZNLKsIjurNp77x$7NDGMgtrJaNLhab8o4Niu3mVxm3EZafJ2F\n7LMafXDeh1ZAZOjACKe7x$7TdMRUWhc$9UzAZV0a7LMXoNjHhyqq$nbf0qc_1T7TNERqchhmzFgR\ni52Tjq3j6rBo3EZhy3wh7LM9m8pNdPRX48wF9UzAZVBg9XzgkjzbjemCUFys7MFP58iajP4TqtkK\nzbNPI7I6dAfTqtkKdYmj45lOT_ojn0bf$KYb$PbSbf$buLKRbOtbNbbpbxFb$PKLbOLbTlKRbOtb\nzbKhb5Pbzbbpb5YbjlbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb\n2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbp\nb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLb\nGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQ\nbxlboLbwbxGbabbEbxrboLbwb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV_\nT8L_NiNlOjurzbNPI7I6NpmprrtQdPKa4h_yd13PQ35AhkgPzeur9UqfIN2r7LMplrBhbxrba3EK\nksZaW9y3dZv7xrmPp7saZFskufrLbDmP3EpWNkPZjt3aZDtbuB3hmRjY7LMYKkxnT9VZTh_TTZKa\nZh_yd19Tqh$Rum3aOyI6NqhhJ3aBC8HWNhyi0mha7T7TqJzQ6X1uzFgzJCmG7LMdBYBhjxAgnXaB\nTRoabrQ23Yma1yI2dSQWNkPZCiReNiI6CPugd3$L0mkgn8mdCZOWNyI60AMw_rJijiVcnXoKCqKq\nz$75CBsaZyI6dAKZ5teV7LEKQhwMjiVcnwGWdPXNVX5QNA96b3x_3Yma1yI60b8lnXhmdvRaZyI6\nCIXlrkTyT_oNOkCUGWkCSiI6NMmeOAGVdPKN49CU9gmaZyI6CcmaJ3GF0mDP55lOT_ojnpbzdsZa\n4Rk9dsPLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lb\nNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKi\nbO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbw\nbxGboLbtbx$b6lbwbxPbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DB4jegk\nWLbEbxbb6PbJjed7xrmPjiVcnAKFDbmaZDtWh1PLbPbnbxgGPjurzdza1yI6jLKd3CmopAu_NyI6\nNqKp_7I6248efjBd9hv7x$L$0Izaf3GQTrsE6Nxm3xhaZyI6dAKNi3x_Npc$Ht7Nh1Z9I8GF2U3S\no5urdPKFo7I6CqKv$9xn0baoG8aBCpsNK_I6TZubK3JEPlu_eFK6CBsSyAXwC8RL13$vzFgapAx8\n7LMeb5B$D_Xh_hIxdF27xVNDdFNj4$7NDGMiCYtHpAN2w7I6dAfopkzh0TRaxjihD8aKQhwM0mpb\n73JEGWhU4wurdSKaUxbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbp\nbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKD\nbf$baPbYbxGboLbwbxPb6PbMbxGbalKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$b\naPbppAu_NhGFp8q_13KGdFu_YlbEbxKUKRUi7LM3r88sTxskWt7iC0bLbR2FGWk9mkTiqxZafAzh\n7LM_TVuCzYK0$N0aGBsYP7I6zLswlrB9TFRg2O95CL9TzhGF9dgafyI6CyJwl$Qv9XKanF7G9lga\nb$wyjbcoYT75NAj7x8x_CcH$HAwW2emAZVBgPoNj5wWj7LMaXeur0HsCxDJ6dROl2hJ37LMab8Qe\nzeXT3xbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKh\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8Ib\nTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKm\nb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGb\noLbwbxPb6PbMbxPb6bKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbpdsN3k5zb\niVzS8$yYdFNaVVKo$KE9mXdhdPXNi9r_TKYP5iI6dAKSF9GVNfXYKDB97LMaXkWVjLf_NRjF3Xf_\nAAzh7LMX4OVWTvh0pTrtdPRAZV2F2xd7x5pLiUq_NRjF7LMpph$ANLAK69aV7LMp38GF3bJqRnbf\nbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLb\nNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbp\nb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb\n6PbMbxPb6lKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM_TrB99TZAZOy_\nuE8axTxmNqhL13347MIP5CmPNr8afXI3N6JCWX4FTLkCvyI6CmO_NhjZ3q8_j8do7LM_TO44dPKe\nT9y2jiB7xOVC3EZaXFpvPVRAvkUg0jzeNjurpOE$TYt46b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQ\nb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKR\nbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZ\nbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbabbEb5YbWbKBbf$bNbKZb5lb\nTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5O$gCZRp7tXwqwz2C_I6TQ3U6rmPzFgXoTyz7LEozh7N\n3boaZDtDCcaN23LM0IzeNCQO7LMafw_s3sJd1wurNiNlO3DRD_A_A85Q9UzN4RTn3OW7x$LKzc9l\nCXo40qc_ArtW0jzaZkuYh107x$fy9JRZTDQ23Zy7xrmPPQsX5ALC3rbPVpbk$KAVtJ549tMvXiI6\ndsNdEObhzYf3ByI6$KMU68Q3TbJaUrtHT63gsiIi9TZAZrtHep8zm8hmdPX219TddSRN496VGWha\nfw_sdPK9wyI6k9Al79EZ3bo208LMCIp$HX_vCiReNCQO7LM3fiIK$KYb$PbSbf$bNPKyb5$b2lKZ\nb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lb\nNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKi\nbOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCb\nWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKL\nbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbabbnb5YbWbKBbf$b\nNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV3r88sumg_T8L_dpgGPiI6jiVcnwBd9hRaGO$7\ndF27xOTajeggMhD5pT8GxXsR7LMeb$7g3EZhrRUMdef_NyI6dsuWm$5Hji8PIYJLiHc_AX_0zFgX\no34F0ATLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lb\nNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKi\nbO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbw\nbxGboLbtbx$b6lbtbxlbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DmPdPKd\nQkVWN6Xcs99J3K8AA$mSjE77xrtbCcRpUYBaCca$pJ56N5ZgceNm2VhLw7I6zUZ9o8_I0jzabOPJ\n6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56b\nNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb\n2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbS\nbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGb\nabbEbxrbabbXb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5$bKdX3AZ8lR\n3VKC37I6NLha1k4hpAuWm_I6NLha4hhn9Ah2C_I63EZg282sDGMXDCII9dOa4yI6jxOWH9$gd1E_\nMAzhzLswfnbf$KX_T$yY6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bb\njLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKY\nbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFb\nNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKR\nbOlb$PbQbxlboLbwbxGbabbEbxrbabbAb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb\n$PbQbf$P5OVozN8__8DM0pR3UyIi$KX3r88sTmfuArQO9_f6b7I63$VzmrtW30d7x$7TT_a3BDBb\ndD07x8_$TFHWw3UmdFN9whaB6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCb\nNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbp\nbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb\n$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbabbwb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKt\nb5lb$PbQbf$P5OTy3Cv7xO$gdhmaxj$m3CFPVpbkPb8_3T7NdpRa1yI6dAKwJNKdzFg9O7I6dSJd\n8YQS3sJeNjur7LMUrCckdZo2skzhzFd7x8KudFsiprth0fZAZ_I6353CziI6$KX_TrJiTv8P4VKd\n7LLP58DM0pHl79EZbx$bo8L_Ni27xOEZCGNprCBSTDXUOh$L7LMa1hLMTeJ9wkzhdF27xOTy3fi7\n5Ebzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKy\nbOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5Yb\nWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbw\nbxPb6PbMbxPbabKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM3fiI6jXaW\nNhyidPX219Td3oIPVpbk$KXaXFWkqMOlCnbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKL\nbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxPbalKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb\n$PKYbOCbqbKYbf$baPbp$KMkWYto9BhkrX347LMgg8Ii6b$P5CmP3xZaZDtDCcoLw7I6pGhihA4m\nGomajAEZdSKaUOr_TKw7xO44GomNoOVCCiRQhXD97LMiLJ56NLhakAIPGd27x52yzYf$HwWfh1Zd\nA8cjNygeVFxezFgUdTwyi1zcB3Ib0ATLbR2FCpJ9u$A4NA9oph7v7LMajAEZdSKaU8DH9Uz_j5CF\n7LMUd99J0qmhQ3wEC6c97Dtbuxq_mt6v6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8Ib\nulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb\n$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bb\nubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbalbLb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbp\nb5lbNlKtb5lb$PbQbfVibrQOdPK_Ohr77LM_T5GWpGO_w8Dr7LMaVrtHup8IEeurdvRiGjvN3EZa\nb8zjCNhefUbGpGVgU3o30ANgceei$Kw7x5QpiHVc7wB7zFg3swBTTssEdrtW7LMNi3x_Npmj45sV\ndAKaBOzh6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKY\nbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bb\njLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlb\noLbwbxGbabbEbxrbalbMb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5OTy\ndAKaBO4hzFUWNhlj7MmefCtH9jo2u3sl9dOa4DQO7MIP5CmPdSQWNFmkdPRafAzh7LMgSF72C8M1\ntCQOCIMa1FefCChd3TmkzFgFAhslDGn7xOVcdpga1DQOpqoPM3OX6b4_ACtDdpRa1yI6dPKa4eGW\n0jzeN9Tybx$b68EKCiRNo5ur9Uz2NeCi7LMdJDtbdpv7x8DeuTVkWLbYbxKNOhEKzFgaW3JYzdza\n10bfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKy\nbOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5Yb\nWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbw\nbxPb6PbMbxDb6LKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMNq9TydAKa\nBrBbdDZa1yIi$KX3r88s0zmj48lahAW7xOVdjLKg2O95CLj7xOW7CiRB8$1LNEMC0VUpqMlLbPbp\nbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb\n$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKY\nb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b\n6lbJbxlbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGTZ8aBrtopQUWMhhJ\n6b$P5N2FjtZNV7I6dpXqz5CwdvRAZ80Lh7oip8L_6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb\n$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb\n2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGb\nGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbalbXb5YbWbKBbf$bNbKZb5lbTlbp\nbxFbqLbpb5lbNlKtb5lb$PbQbf$P5rtopQUWMyIi$KX_TOGVGWhaxTblGa27xfbGD4o_TrB99TZp\nRCBbdDpWNh347MIP5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rb\nzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbS\nbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbp\nbxFbobbwbxGboLbtbx$b6lbJbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb\n$pbGT4ZNiiIKNpmpr94hzFUWNyI60mh_d3De3a3kWt7NDGMD5FefCCkKQFZ60ANgceeizFUbb9z7\n7LMkWA$gp7zaXe3NdPseN3t1jmkWL9TazFd7xfbzh1ZN4hlX7LMqz$mBdvHWm$yzjtZNVX0L7LLP\n5rB49Uht2h1qNLha4hhn9Ah2C_I63Ep_A3QeC9M9BN569dOa4DtopG8aZyIK$KYb$PbSbf$bNPKy\nb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6b\nNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb\n2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbp\nbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbxrbalbwb5Yb\nWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5Vf0dAKeNTyY7LMkWAbadDZ9wDQW\n7MIP53ClC9XX48TY34MibVUpqMgB88tm7LM0Yh$Lh4VB85urjxQlQ_I6p7UWwCJijtZX48426b$b\n$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKD\nbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$b\nzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbE\nbxrbalbtb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5OTy0mhFowur7LMp\nrjGWdSRN4Ct4CYZeN38S31XhTAsh7LMwfX$LdPKa4eR7C0NexjurhjmNo8_g9jo2u3GFkROVLh8V\nCX9_NyI6pGhihA6QGehU4wur7LMG6Ctbzygj4VBTesZgGAnF9jDLbpbzbf$bWbbpbOTb2LKEbOYb\nTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKY\nbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bb\njLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKh\nbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$b\nGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbMbxDbalKmbfLbqLbp\nbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMCQR56GehU47Ii$KX_TVj1dsTLbPbpbfLb\n$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKL\nb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQ\nbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5Db\nGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbL\nbxbbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG31KaahhJqemUokGo3Cv7\nxOTyD4oJn9jhNEMslTZ6zFgSoOVWNLYLbjispoDLbjNmdZA$e_I6jeohmkEZNLha1eR70mha4eur\n7LMprj6G9jhC0O$gdPKFoATydpR3eOSpdFMv$38xCHZy4A95CMNAZ8hn9Ah2C_I6TDKaJTpv9jhC\na8I3dYmaZyI6dPKAm8GFCjoSQ8hJ6b$P5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56b\nNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbp\nbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb\n2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKF\nbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbLbxrbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$b\nzbKhb5PbzbbpbxFb$pbGGdNCxhgp7MIP5CmP9UzTIVj16b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQ\nb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKR\nbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZ\nbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b6bbEb5YbWbKBbf$bNbKZb5lb\nTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P55rA3bJpr9xnNpmax9TyCcmaJ9Vc9jkVPCtHzd9Ww3_w\nqb57x8hJkRO_NkTyCBsaZh8S31AgnVf0jHzT35urN2hCriI6TZ8G63cbD4a_1TXLdFuoG_I6isoe\neOEZNLklgX$L9je7xVf0Npmafho$NpIb6lbLGWhNOeurdFsPMdbf$KXaXhDe9_K9wesC7LM_TrBS\nD_XlnATy3EZC0V2F2xUo9JinDGILbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbS\nbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLb\nNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$b\nWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbLbx6bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKh\nb5PbzbbpbxFb$hClC9Xj45SCpBKeWrt40I9l5t1LdPSP5rt4CYPb6lbLGWDP5T7NdpRhmRjYGWDL\nbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKS\nbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb\n$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbt\nbx$b6PbLbxlbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGTZ8iCAjAjx8P\nI7I60mha4h8S31XeWOzhdhmaxj1j9Ui7x5eipGVgU3o30ANAZ8GLN2hG63_HNLk_AN56dPKNK_I6\n9jhPaXcj0IzeNT7T0ANkWXle7MmG63zl3EZ2cNzpzFU3iX5ndPRBU3hJ6b$P5lbpbfLb$PKkbOIb\nGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKh\nbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKS\nb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$b\naPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbLbxCbilbS\nb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$hDe9ANX5A65dFN0K7I6D4oeTjei0ANq\nhXD9hAVAZV37Ci_7x$pvh1ZSo562G6ZhGkVdzYbLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbp\nb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTb\nTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1\nbf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb\n2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKE\nbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbLbxTbilbSb5Sb$PKDbOrbzbKZbf$b\naPKBbf$bzbKhb5PbzbbpbxFb$pbGqYhU68hJdFNC87Ii$KX_TVj16b$b$PbSbf$bNPKyb5$b2lKZ\nb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lb\nNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKi\nbOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCb\nWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKL\nbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b6bbwb5YbWbKBbf$b\nNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P55sVC0KaZDtbuE57x8DeuT4_MYQOCY8gtrQ6\nCY8UKRUi3fi7x8hJkRO_NDBa98UlFtcJ0IzeNiI6DKmqRkyC0toZTyI6TZ8G6Nf0dDZwfwzb9je7\nx8hJ9jXlnAnFTlmpr3$L3EZwfXhJ7LE_A8U6TZ82cTeOdFNgt5eU7LMNi3x_0mZBrCQOdPKaf7I6\nGdNCxh_$T9VZTDBaTZOaHtcJkRO_MXaBdF27xrBoGdNkWXcb98gAZO9J3KrLbpbzbf$bWbbpbOTb\n2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0\nbOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZ\nbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb\n$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxbbabKm\nbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbpdAKwfteK3gKg29o_dFN0dt5Hji8A\nZVIB9Xx7xrB9hqB7OpbGGdNCxhgp7MIP5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56b\nNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbp\nbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb\n2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKF\nbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbLbxDbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$b\nzbKhb5PbzbbpbxFb$pbGGdNCxRf0NiNlO9$gTbVaZhT27LMSF93pCBspihhJpT8XoTyzC7ztbiI6\nC2o2kesVdPsabOSZ7LMNq3Oo0IzeNjurNiNlO3aBhqB7x8_ouAoNqTkKNA9_AN560mp_Neur3Zy7\nx$7NdpRg282sjx8dQkGV0mkgnrtbdpRJwtefCChd3TmkzFgqhnbfdYNkWw2YC0KafXo$bx3L1lbY\nbxx7x88S31XiQX8nhq07xVf0dpRNGXsRD_XSF9GV3sJeNT7T0ATLbpbzbf$bWbbpbOTb2LKEbOYb\nTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKY\nbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bb\njLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKh\nbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$b\nGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxrb6bKmbfLbqLbp\nbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM_T8zl3EplFJ567LMBUCtbdpRaxT1DpINA\nZ8eg9Z07xrBadPRdUbbMbxKL1iI6qYhU6rtWCYZiQLbAGWe75Ebzbf$bWbbpbOTb2LKEbOYbTlKY\nbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCb\nGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZ\nbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb\n$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZ\nb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxrb6lKmbfLbqLbpbOlb\nTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbpdAKj4Oxn7LMnS8GFzFgqz$mBdvv7x5Ci2dskWYto\nNpc_MXcj9UR1KNjEdFTLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKi\nb5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb\n$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODb\nNbbpbxFbobbwbxGboLbtbx$b6PbMbx$bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pbzbbp\nbxFb$pbG97e7x8$LdFNCxkzh7LMprTeVjJzapAx80TReNTA4dPX2c34EdFTLbpbzbf$bWbbpbOTb\n2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0\nbOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZ\nbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb\n$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxrb6LKm\nbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM0RjzbdsNG6TXL0IzeN9VcTZ57\nx8U6TZOWmrQOT63gsiI6hqJpr9TydPXkWt7TNLhab$cO0ANSF9GV0mZ9wkzh7LLP5jei0ANqhwur\nPb8eiAah0IqWwTyY7LLP5O$gd1Mab$XwNjKaZDtW9Xx7xO$g0mkgnObBCjrb6PbYC7f_NyI6dPKd\nIOEZjKrLbpbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIb\nzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKL\nb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56b\nNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbY\nbxGboLbwbxPb6PbEbxrbobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMB\nUjsVqYhBUiI6pQhprNZQdPKafEbk$fTP53ClC9XASjCFTDsvX8$UD8_7xfbGdhmG69Typ7d7xrt4\nCYZefCtH9jo2u3sldSJ_T$7NDGMJwYQO0AuoG_I6GdNCxyI60mha4DtbzyglzXKwCjoSQ8hJzFgG\nxYIN9Xx7x8_gGBKNq3JA248ef32qNA9_A$mk7LMdBATydAf_AN56zFU_NhoYC9pl7T7T3sJeNCQO\n7LMab8_LdPXGriI6TDKaJCmPd1EVE3cj0mha4hhn9Ah2C_I6NpmN6TtHdF275Ebzbf$bWbbpbOTb\n2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0\nbOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZ\nbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb\n$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxrbolKm\nbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM2ciI6Npc_A9Pw7LElFYtH9jo2\nu3slqemihXc$GehU47I6TDKaJ9zhqzc_NeurNiNlO9$gCwf6TCJihXJqaOwMC0y7xrmONpmCxkzh\n9jhab52Y248ef32qNA9_A$mk6b$P5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbS\nbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLb\nNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$b\nWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbMbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKh\nb5PbzbbpbxFb$pbGGdNCxDmPd1MPb59g9jo2u3DM0pRaZyI63sJeNT7T0ANAZ_I6NpmdJkGVCjNa\n1yI6jx8pRCQOpA275Ebzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbp\nbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKD\nbf$baPbYbxGboLbwbxPb6PbEbxrboLKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$b\naPbphXVqz5fJ9dd7OpbGNpmAZxbf$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1\nbOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKS\nbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbp\nbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b6lbtb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lb\nNlKtb5lb$PbQbf$P5rmPd1EWSOt8u3RNqjurhjmAcrQO3Ki75YIudPX_OkTydpAl8OopdFu$TAGo\ndDsIqwur7Mm_TrBS24OWR85QNAj75EbzdAf3BDB9d1LLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFb\nqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQ\nbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODb\nNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrb\nNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbMbxDbilbSb5Sb$PKDbOrbzbKZ\nbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGisX2cCtodMv7xO$gpBKihXhJzFU3iw2t6b$P5NzUjegD\nghDY7LMDgwzbTDs0Knbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbp\nbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKD\nbf$baPbYbxGboLbwbxPb6PbEbx$b6bKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$b\naPbp$KElFYIudPX_OkTy9jhC0OGWCIsab$XwqzmAZ$mk7LMCxkzhNLsdEXt19jk_A82qNA3AZ_Ii\n$KX_T8_$hqtLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKy\nb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$b\nGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFb\nobbwbxGboLbtbx$b6PbEbxrbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG\njRUWJCtodMv7x8mdNiNNq9zhqzc_NyI6TZ8kWAGVCwf6Tjur6bVprCBS0mkgn5ei0A27xO4IDzrb\n6PbLbxKj37I6qzmabOSZbxCb6_I6dPA9COjAhid7x8_yd13ab52YkR8U688S31XgGJjF6b4_ACtH\n9jo2uTyYPqRzITQvdPRdQkGVbxrbolbL3Xi7xO$ghqQ_MXhJCcmax3_yd13pikGWCIsl57I69jkW\nm8hJdPKa4DQQNA3AZ_I6dPAb7jeijx8BhYQO7LMpr3LMbxrbolbLqzmcA3hJdFTLbpbz0ANqhtbK\nNwmCVh1udFN_T$7NdpRn5Oxn6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCb\nNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbp\nbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb\n$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b6PbEb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKt\nb5lb$PbQbf$P5Vf0dAKqh$yhjtZef3oL0O83UyI60mZAZ$mkCcRdpYQObxrbolbL7LMU4wurD_Xd\npLbEbxbb6_I6dAKG69EZCm8nS_I6CKmAZrQQ3$E_A5urzFga1DtodPKFo7Ii$KX_TVj16b$b$PbS\nbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$b\naPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJ\nb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b\n6Pbnb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P58da3rx7xO$g0mhJn3L_\nNEMX5Ar_7LEWHrBw0mZamwurdvRNOyI6bxrbolbL6brb6lbtbxf_AOGVCtSb6lbLbxKAZ_I6dPXa\nb81uD_XZ_Ar_CtSb6PbLbxKj4O$g0mkgn5ur7LMprCtbPpEl7jei7LMCQR562aZZxXcjdFulFYJ$\n9gv75X_HpT89wkzhzFU_NhU6TZ8eW8sldPHWS5ur0ANdmXyJ9dd7xO$gjxOlbO4IDz8cACB97LEV\nPCtoNpc_ACtHjbm_O3sliSNiL7I6TZ8ajAPJNEMaxCIu2aZZxX$L0mha4DQWT6CLbpbzbf$bWbbp\nbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bb\njLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFb\nNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKL\nbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbx$b\nobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMd3TmkD_XkWAGViMNdmwur\n3Ki75EbzdAf3B0bfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKX\nbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb\n$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKS\nb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$b\naPbYbxGboLbwbxPb6PbEbx$bolKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp\n$KMefiI6$KAbb9z73sJB3$yY7LLP58GF0Auik3DYdpA3m5ur3LNiThL_GDM2Crt4CNhwl8gp7LEl\nFYtH9jo2ujeizFgqh$yhNpIboX_w0ATLbpbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKL\nbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbx$boPKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb\n$PKYbOCbqbKYbf$baPbpdPfbF3slukObmhgn7LM_TVUB0m1lFXPOCIMa1FefCChd3Tmkdpw7xOVc\nC0f_NhDYiycfGhGOGDM2Crt4iHV23wI9C7zaapbGbxGP5jurD4oab$cO7LMhG8sjNGO_1jCBzYKa\nV8_HeSUrwNpGPeVdTNbuZwU5z0bfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKD\nbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKh\nbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb\n$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbS\nbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbx$boLKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCb\nqbKYbf$baPbp$KMprCBSNA3aUXVo7LM_TrBSNLhFLOih0Iq_ATcO0ANC87Ii$KX3r88sTYmaZko_\nD4a_ZPbwC7zdnrQQpGVgUTmkzFgUaTmkhqJaXDBS6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb\n$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb\n2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGb\nGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b6Pbtb5YbWbKBbf$bNbKZb5lbTlbp\nbxFbqLbpb5lbNlKtb5lb$PbQbf$P5OEZNLDLbpbzdpga1hl6NiNCVF1D7LEbb9z73rHWECmP7LLP\n5$7NqGXdnrQQCX9_NFNmGdNefCtDdpRh13lgzsZC0rtDCkmUaTmk7LM_gh8A9JJdQkGVjqu_1jur\nD4oa4h_yd130RX$AN2hCr3U6C8E_NyI6dAKUOh$uTYmAZVf0dpRkWYto0jz_j5CFzFlLbpbzbf$b\nWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbp\nbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lb\nqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbE\nbx$balKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp3gKg2CJi0jf_AAzh7LEC\n1t720mk_Zh_6dvRd3TmkzFUl2RTnuoRgZiI6jqNpUXGFjHzRKCtWhAVDq5YpdFNab53H6b$b$PbS\nbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$b\naPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJ\nb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b\n6LbLb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5OGVdSKaUrtGpjmC87Ii\n$KX_TVj16b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKY\nbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bb\njLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKh\nb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlb\noLbwbxGbabbEbx$b6LbMb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVaXDBa\nCX9_NR56hWsaZh5QNAj7xOVWDGM0dwzbdPKa4e1bCX30ECQOdPKafwurivZ9tyI6dsNp7wzbivZ9\ntFXLCiReNiI63EZ_TrBSdPha1RzpCDXGxX7x3nKG33Ib6bVc18x_NpmaneSCpBKeWrt4NV3afAzh\nzFgdUhIP7LMafRzpNLhH4kzZuxM2C_I6ivZi$VzPdPHjTeurDaZUKeCFesOfGeur94ZSo_I6jq3h\nz5urqMU_c3ONzYKahrtH9Uz237Iu$KMd1YQg98UlFtcJ$KYLbPbpbfLb$PKkbOIbGPKsbOrbzbbp\nbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b\n$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKS\nbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$b\nzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKE\nbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6Pbnbx$bilbSb5Sb$PKDbOrb\nzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DQg98d7xrtbdpRMeAfVzFgCx3sj6b$b$PbSbf$bNPKy\nb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6b\nNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb\n2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbp\nbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b6Lbnb5Yb\nWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5$7NjHzT3rtoNpmdQJJD98gC87Ii\n$KAjChJYNLhakw9gTorLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKi\nb5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb\n$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODb\nNbbpbxFbobbwbxGboLbtbx$b6PbnbxlbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pbzbbp\nbxFb$pbGdAKkWXD93nKa1hle7Mc_A3ZCd13Ud3_vdR8T3_I6GBKj48_vekgT3_I6jyRg282sd13C\nxkCJzFgCx3sj6b$P5TbKNwcWm8167LMN4jRQdPf9oNjHdHtLbPbpbfLb$PKkbOIbGPKsbOrbzbbp\nbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b\n$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKS\nbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$b\nzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKE\nbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbnbxCbilbSb5Sb$PKDbOrb\nzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG97e7xOTy0mhFonbf$KX_T$fy9JRaZDB90mha4FyY\n2oj7x$mLhFu_GVuOzFU9mX0L3EZN4TcJ36Aoz7I6dnMadRuCjJzip$7g7LMlnATydSJT3Vf00Bh_\n$OzhzFlLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lb\nNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKi\nbO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbw\nbxGboLbtbx$b6PbnbxTbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGNiu3\nmrJidPXhQCQO7LMN49LCdhmax3hm7LM_TrBSdpga4h8$3sJd1Xle6bVX9CtHP8gIcA9JjLmcA9$g\nd1n7x8_yP_XaUXla0mZ_OhU6dAKaB$KCi_y7xOxn0jzaLrJ$CpsAZOzh7LMajX_yd13pCt7NdpRX\noTyzishprdbf$KX_T$yY7LLP5$7NdpRNGXsR9XKAZrQWT6j7x88$NFVhmDtopT8C08$vdvHWSyI6\n9TVee5GizFgkWXDM0pv7xOGb0m8qh$yhdMRef31AdvRpRTsk7LMapAx8qOJ2ekGVGWkaUFww7LMp\nrCBSdMRgU8GFhDU_YTLxNc3abrtW7LMd1X8S31XBFjlO9lgwfYtbdPsAY9ae7LMNi3le7MIP5lbp\nbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb\n$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKY\nb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b\n6PbnbxGbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG3q77x8kfNJMkWA$g\n9BN2u3sldpVaZyI6D4oajtfy9JHOBezbTf3AZ_I6jPMeOAEZCiRaLrJ$dFsPMdbf$KXJwtmkjRqb\nb9z7TSXpnNzUjegAZ$fRPTx7xfbGjbm_O3sl7LMax9jRdF27xrmPdhmiQX2qCBsCV7I6NdJiLYQD\nisha1kLgpAN2wXDrzbTLbpbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb\n2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKL\nb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTb\nzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$b\nulKDbf$baPbYbxGboLbwbxPb6PbEbx6babKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKY\nbf$baPbp$KMNidbf$KAjChJYqXgqhrtWNAj7xOah0Iz3r88szFgB8_I63EZaXeurqMUWSOGSdPRg\nkCtWNA9KQhwMzFgNYXlo3$MXoTyzC7ztbdbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKL\nbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbx6balKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb\n$PKYbOCbqbKYbf$baPbp$KMprCBSGBKj4_Ii$KX3r88sNdNNijSC7LMppRf0jEK0T3$LzFgc1_I6\n9dhj4$5Hji8B8$1LNEEgnxbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb\n2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKL\nb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTb\nzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$b\nulKDbf$baPbYbxGboLbwbxPb6PbEbxlb6bKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKY\nbf$baPbp$KMafFmk7LLP5CmPp7d7xfbGCBsaD3ZCD4a_1dbf$KYb$PbSbf$bNPKyb5$b2lKZb5lb\n$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKE\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb\n2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbp\nb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrb\nGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$bobbMb5YbWbKBbf$bNbKZ\nb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8Ib\nulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb\n$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bb\nubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$bobbEb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbp\nb5lbNlKtb5lb$PbQbf49Q8$13kZXvwWfNrzDgezb7LMg282sZeXNV7I6dYNJwtmkjRzU6Vf0jHzT\n3rJWhigAZ$wzq2sdQFkKdpgaf38SDGn7x$75dPKqRAWMuO3AZOjACKe7xrmPjJzppFmkDKmdpXcj\njtZZT0bf3gKg2j2yzYKT3ObzPb_7xO44TDs_a8$LPgN2C8lahAW7x8aWzYKNo8_gjtKUd9gtC0fK\nrNjF7LM0QezbCZZsz7I60mhkWYB9T_a3BRpTNiNlOjurdkKPBX4FdXn7x8l6dFsaBVxmqM8aXyI6\nCmO9gjQ7ks07x8LMNpc_ACJ$TRogckzhzFlLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKS\nb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$b\naPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKD\nbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrb\nGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbYbx6bilbSb5Sb$PKDbOrbzbKZbf$baPKB\nbf$bzbKhb5PbzbbpbxFb$pbGTnRP4eur7LLP5CB9p7d7xfbGTbJaU$7TNLk_ACJ$dpRapXr7$fTP\nVpbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKy\nbOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5Yb\nWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbw\nbxPb6PbEbxlbobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM_T$eVjJzC\nQR56Tfv75EbzdAf3B0bfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbp\nbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKD\nbf$baPbYbxGboLbwbxPb6PbEbxlbolKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$b\naPbp$KMvX8kfp7U_ACtHTH9WNeurdvRG63c$Tfv7x8dHDGMefCQQdMH$HYtb9z8uO$7wdPKhz8DR\n3EplFwsVzYx7x$widpXaZRfHdnMAZ_I6NKJax3hm7LMdEOTydPKa4R2FdpAfGJSIurPLbpbzbf$b\nWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbp\nbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lb\nqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbE\nbxlboPKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbph1ZaWTVnknMFUOTyjrfg\nn5B_j0Zp7AzhjLKnHjSgzFgabrtHPb8FU8sl7LMdYjCi3EZabrJzdhXgt8JY7LElFAjACKh3r88s\n3$M_T8_yP_Al7T7T248ef35Qzg77xOo1p7gkWYtbdpRsV9LY9joa1hGFh1ZN4jur9Uq$3Yt4Pe4W\nI9zbuwsaZDtbdpFb6LbL9gRGPjurzdza1yI6p4sa1eBNNVQVL3JAdZgpR9Z$dFTLbk4hurZa1hGF\nh1ZN582q9BNAZOjACKe7x5GWpG8abrtH9joa1FXDp_Zwl$QvdXoj48Dep8zafhhC0z57xVf0zdza\n1eurjxZ_CXLM0vRj48GLdPv7xrJi248QitZ0NLw7xOBZ9dgkWtZb7LMX4OVWzd3gUCtbG9i7x$Zb\nuAaTqezb2O8SoOXK0msafALYD8agnxbf3bJeN3_Hzc9lC7I60mhXowur3$MNGwur3bMGgT75dPKv\ns9jAhid7x8oY0mc_wAVcdPXU6rBbdDZcywYp7LMag9GHqxgFU_I6dFsPM3LMp41opDIP0TRJjyI6\nNLha1FyYD4oa4e21Ci1bKjGWC0KAZ8hndvRgzh1q248efTru7LEoYTXwNA9_qJ0TkoZAZ_I6dhmS\nF9GVjw82C_I6dPXkWYQQPbMkWYtHPea2__I63bJeNjCuPioiCAjAjrfgnVxmNLkWNhyipQgdBYQO\n0mhab$yY2oj7xOGVdvHWm8GFuOoFU81DC5zlzwGW0IzB88m37LMABh5BPb3t2h1qNLkWm$75248e\nf3mM9Xx7xOsBTthAZVf0dpRXowur7LMt2h1q3$E2_rm_dFNabO1XNiu3m_I6CcRaxT75dPRNo82P\nd0RP83mM36Xax3hm7LMGbNCKdFNspOKy6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8Ib\nulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb\n$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKh\nbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bb\nubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$bobbwb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbp\nb5lbNlKtb5lb$PbQbfVvNOZ$7LEKIYB4NERtoxbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$b\nGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb\n$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1\nbOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$b\nTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxlbabKmbfLbqLbpbOlbTlKYbOrb$PbQ\nb5Sb$PKYbOCbqbKYbf$baPbp$KM_TrtHpAN2w7I60mZP8NSI3Cv75EbzdAK0mk_r3gKg2dbfbf$b\nWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbp\nbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lb\nqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbE\nbxlbalKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMDniIKpAN2wAVoTK92\n_8gp7L8pr3L_NiNlOjpLC0f2__I6dAKwJNKddPw75Ebzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKB\nbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFb\nNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKe\nbOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8Ib\nulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKe\nb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxCb6bKmbfLbqLbpbOlbTlKYbOrb\n$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMSF3lSdAfWm$756b$P5lbpbfLb$PKkbOIbGPKsbOrbzbbp\nbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b\n$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKS\nbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$b\nzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKE\nbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbXbxrbilbSb5Sb$PKDbOrb\nzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGjx8kWJf0qGXG_XL7knn7xONudPHozXQ4CBsG_XL7\n7LMdYjaLPqRzIjurjw82C8GFCJ3plV56qF8Moh_T9Ui7bUbzbf$bWbbpbOTb2LKEbOYbTlKYbf$b\naPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLb\nulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKY\nb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$b\nTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxCb6PKmbfLbqLbpbOlbTlKY\nbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KEaHXla0mpozYQOdPf9o35Vk6JkWYtoNp775Ebzbf$b\nWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbp\nbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lb\nqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbE\nbxCb6LKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM2c3yJ97e7bUbzbf$b\nWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbp\nbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lb\nqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbE\nbxCbobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM_T81AD4ohmhbNzUZA\nZ5NmGWXL27I6NpmX45CXivmCfezbzFgCV7Ii$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKL\nb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2Pbp\nbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZ\nb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$bolbXb5YbWbKBbf$bNbKZb5lbTlbpbxFb\nqLbpb5lbNlKtb5lb$PbQbf$P58yJ97h2ciIK0mZefCtHGOm7u3sl7LE9mXdhdAKPxDJ$zc9lC7Ii\n$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56b\nNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb\n2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbS\nbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGb\nabbEbx$bolbAb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV_T8dIqM8ab80L\n7MFP5$7TpGO2__I6D4oiG3slNpmL2ANxzFd7xV0aTFRL2XlJjJzJ1YmP0m8aZDQ27LMiG3sldPXG\n63DedFNC87Ii$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb\n2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbp\nb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLb\nGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQ\nbxlboLbwbxGbabbEbx$bolbwb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P\n58da3rx7bCmPTGVaLrJ$7LETnDtb3xe7x5KydPXkWtyhNA39wkNxdPw75Ebz3gKg29VS0jzpUANx\nNA3klXaB7LLP5O$gD4oa4hmM9Xx7x81xdPXkWX7m9Uzi73L_7LMG69TyqF8Moh_T9UzaZyIK$KYb\n$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKD\nbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$b\nzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbE\nbx$bolbtb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV_TO5UjJzC0rB9p7U_\nACQ2dF27OpbGD4okWX2Pd0HTnhc$9Uz9O7I6dPKAm8lJzYx7x5Kyjx8SF9badDZklXgj7LMNi3hm\n9jXaZyI6C0Kj6O9JdF27x5BNTZ8aftmk7LrP5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKS\nb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$b\naPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKD\nbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrb\nGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbXbxDbilbSb5Sb$PKDbOrbzbKZbf$baPKB\nbf$bzbKhb5PbzbbpbxFb$PbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKi\nb5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb\n$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODb\nNbbpbxFbobbwbxGboLbtbx$b6PbAbxbbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pbzbbp\nbxFb$hDRPeV1rONu7LEWNFmkzFgi89da9_KPEFXwdFNab8_HesOq5YBauK8afR0q0jx7xrtW0ANA\nZOjACKe7x8ClC9A_ww9gdFNabrtW7LE_AOTyTFRB8$1LNEMp38GFdFuWNFmkzFgqRAD8dPFLbPbp\nbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZ\nbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb\n$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKY\nb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b\n6PbAbxrbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGp7UozAzh7LE_ACtH\n98d7x8bUNpmw5wurjtplHRjF6b$P5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbS\nbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLb\nNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$b\nWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbAbx$bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKh\nb5PbzbbpbxFb$kaFjLKT3VjF7LM_TrBSThoibOVWNnH3Qh8VGO77x822dPs0Fe8ezYK2cAVcGOmA\nZ8IbCj_7x8ZCDGMef9HbkNhAZ8gnD8_7x$7Ndhc9ykbH7LMgurts3yXAZ8_D98d7x8DeD_Xk7eB_\n3$M_9A3NNLhgGnbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKX\nbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb\n$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKS\nb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$b\naPbYbxGboLbwbxPb6PbEbxTb6LKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp\n$KM_T8_yCpsCrA$g3Cv7xV2w3aCLbpbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb\n2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b\n2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb\n$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxTbobKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKY\nbOCbqbKYbf$baPbp$KMSF3lddAKCTyI6p7gw5wur6b$P5CmPN5ZU6rtbdpRib88n7LMT3V56zFgL\n2w1ZdBc$HwfJdHJaZyI60mhGlhZCzFgaWNjYdJswlrtbjbRNVYm27LMzJFcJNpmabrtHGBsYPXM3\nNmn7x5aBz$oafRzpzUZcFhsj0dgwlfbGCY8glYtb93GP5iI6DGEjTkCczYKdBYc2CiR3WeuriHRi\nm9Tadc8Eg7I6ivpl79GVdRsSAJBrdF27x8_n0BhkWtqQNG1bxrt4zFgwIApy7LM_TrBSTFRpUAGQ\nzFggU38nTte7x8lgZBRhEwinu4mafFXLCBSLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bb\njLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKS\nb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$b\naPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKD\nbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrb\nGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbAbxCbilbSb5Sb$PKDbOrbzbKZbf$baPKB\nbf$bzbKhb5PbzbbpbxFb$pbGpGO_MtbKdX3AZ$bK9DNC87Ii$KX_TVj1dsTLbPbpbfLb$PKkbOIb\nGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKh\nbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKS\nb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$b\naPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbAbxTbilbS\nb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbGhqQ_ACtHjeVaLrJ$7MmefCtbuE8d\n1tbKdX32syI6pGO_M7I6zLsafhaB$fTPVDQQNLhL1Cto9URLz38VNpmCV7Ii$KYb$PbSbf$bNPKy\nb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6b\nNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb\n2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbp\nbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$boPbwb5Yb\nWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5Vf0dAKwJNKdPb8_3jur9Ah2C8lj\n7MIP5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbp\nbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b\n2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKm\nbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGb\noLbtbx$b6PbAbxPbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DmPd1LP58NC\n3hlP5jurPgRvN30L7LMj4OjPdvRAZ8ZCDGExTjzb6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb\n$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb\n2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKR\nbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGb\nGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$boPbJb5YbWbKBbf$bNbKZb5lbTlbp\nbxFbqLbpb5lbNlKtb5lb$PbQbf$P5rB9d1Max9Typ7d7x$bKdX3kWYtHdP8gU7IidPKAmOEZNLkV\nP3L_9AhC87Ii$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb\n2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbp\nb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLb\nGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQ\nbxlboLbwbxGbabbEbx$boLbLb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV_\nTOg5NrzNo_I63rHWECB97MFP5OGV0Ii7x8_yNpmvqYQO6b$P5lbpbfLb$PKkbOIbGPKsbOrbzbbp\nbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b\n$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKS\nbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$b\nzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKE\nbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbwbxrbilbSb5Sb$PKDbOrb\nzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG3Cv75AsBdF275Ebz3gKg29x4Tg3ab80L6b$b$PbS\nbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$b\naPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJ\nb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b\noLbEb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5$bKdX3efT75dPKa4hhn\nCd77x8oKCqKGPjurNiNlO9sBdF27x8Dv92saVrQQ3bJeNCJi248ef3OopT82u3sl6b$P5lbpbfLb\n$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKL\nb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQ\nbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5Db\nGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6Pbw\nbx6bilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG0mhaU8_yTKLPVpbk$KYb\n$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbS\nbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTb\nTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKD\nbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$b\nzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbE\nbx$boLbYb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfV_TrBSNA3U6rQ6jrW7\nx8ZCzFg9AJzpD_XkWt08NLhBPOTdh68pROP_zFgwIXDYqRzpo7I6248efjHjk5j7x8D9hAVefCtb\nuB3ip5HrzFd7x8_H9BhihYtWdPKdQFruzFgwIJTA7LEowYtHjbc96X_LjqJax3Du7LMCxOPwNpm_\n9Xx_6b8n1wUxue8ewxbKkNhLuwfV6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1\nbOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKS\nbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbp\nbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$boLbXb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lb\nNlKtb5lb$PbQbf$P5O$gdhmkWYt4uE8C08IPjrK3eN8U7LMCWrB9p7gAZ_I6jxObbCm33sJeN3Vo\nCqKN43le6b$P5CmPNMXQhA$w9gNeOYQONMy7xfbGdsuWm$bKdX3qz$mBzFghmhbNNpmanhUMd1MG\nlV56CiRd1wur7LMprrQOC9Z97TwgzFgFUrckdZo2syI6GBKj48_$3sJCSCBSjrfgnOzhjXa95J37\n7LMU4wGWdsNNi3x_jJzaZDtojK8N3yI6jtpTnh8VzFgFoXsl7LMgzh1qNpma4hc$CcmP55urdvv7\nxrB99jog_XoKCqKGPjurNiNlOiI6jx8kWYBa0mha4hZCdPRD3OsBzFlLbpbzbf$bWbbpbOTb2LKE\nbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb\n2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbp\nb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLb\nGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQ\nbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxGboPKmbfLb\nqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM3UyIiTbJaUfbk$fND3OsBzFd75Ebz\nbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKk\nbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLb\nNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbp\nb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb\n6PbEbxGboLKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KMCW8IPjrfWm_I6\njXohmkTyGcXcRATh20ZCV7I6$KX_TrBSi1zcB3lg98gAZO2YksZGlFXLCBy7xfbGD4oqzOThNA3i\nhwVJCpsk9yI6p7gkWATh2007x88A9JJpd3$ujLKNEX69h1v7x$bKjPZqVhskzgmaBOzhC0KT3$7N\n0BhnHiI6Pb8_3jur9jog_XLMNpmgzDtsdDsab_I6dPXwJ9badDZG6CBa98gafkaVdPseN9gCuwsa\nZ0bf$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb\n$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKp\nbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5Yb\nilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbw\nbxGbabbEbx$boLbtb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5rBbdDZd\nQYtozc3PxDJ$jx575Ebzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKY\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbp\nbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTb\nTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKD\nbf$baPbYbxGboLbwbxPb6PbEbxGbalKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$b\naPbp$KMi$8Mbp7UlFYtHurZ2C_I6NLha4hc$0DHomwur3nKh13346bV2NeCid1El73lSC0KaZFbK\ndX3NGXr7TthafXaBNiNlOjurjKNdQX0L7LMdzOTy248a1eGWpG8Nq9TydSJBW85PjrV0pCtWCBsA\nZxbfdYNkxkTa3Cv7x8mdNiNvnYtbjr4l79GV9ANX57I6dAfWm$7NTfRax9bH7MIP5lbpbfLb$PKk\nbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8Ib\nTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTb\nTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKh\nbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6Pbtbxbb\nilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DmPd1Mj45WshRZAZ5inu4mafyI6\ndPf9oDtbh0NiPrt40jbLbPbpbfLb$PKkbOIbGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKi\nb5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb\n$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKk\nbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODb\nNbbpbxFbobbwbxGboLbtbx$b6PbtbxrbilbSb5Sb$PKDbOrbzbKZbf$baPKBbf$bzbKhb5Pbzbbp\nbxFb$pbG0mhSFNKdzbN3UyI6jx8BhAEZdvRwfteK9jhD3rtWCBy7xrmONpcKIXLg9jhgcDQWT63a\nUXVo3EZCQDtbjrW7xObBNLha1eGWpG8CV7Ii$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKL\nb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2Pbp\nbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtb\nNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZ\nb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$babbEb5YbWbKBbf$bNbKZb5lbTlbpbxFb\nqLbpb5lbNlKtb5lb$PbQbfV_TOg5NrzNo_Iu$KMiCAjAjEKGl8U6Pb8_3Nxm3bMCSCBSdPKFo7I6\nNpmk2RbuCZOWNyI60mZSF3md9JPLbFNmGdNGlV56zFga1RxmjtZUHh427LMPIt7TPb8_3CtbdpRg\n2VKd7LM_gkGb3bJSF34q2oj7x81q3EZpiDtoC0KaLrJ$ivmm$F1D9JRaXkzbTZubKT5HNYx7x$7T\nNpm0fj8eTlmN8FQvdH8cA31udFTLbpbzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb\n2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKh\nbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b\n2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1\nb5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb\n$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxPb6LKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKY\nbOCbqbKYbf$baPbp$KElFtbKdX3NGXr79TVee$7T3EZAZ$yz7LMqh$yh3$MprCBSjegcHhw1dPXN\nOhDe3fi75Ebz3gKg23_ojRU_MAzh6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1\nbOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCb\nWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKS\nbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtb\nzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbp\nbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$babbYb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lb\nNlKtb5lb$PbQbf$P5OTy3Cv7xO$gd1E_ACQ29gNj6OzhzFd7xOEZTbJaU8lSp7U_MXmdjegAZrQW\n7LMi$8Mbp7d7x8laNA9_AjV52emj68BQTZKg282s7LE_ACtH98gajYBa$KZaD3ZC$Khha3loCcSP\nOVJD98lPOiI6D_A_MXaBCY8NOhJYdFTLbpbzdAKDq85QkNhLw7I6dpVcA3ClC9XabOPJ6b$b$PbS\nbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$b\nGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$b\naPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJ\nb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGbabbEbx$b\nabbXb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5O$gpGhih7I6jEKGlO6Q\nzLsNiCmPzFg9O7I60mZC0rmP3NAgCF1E0mhaknbf$KXaXefJGGoLw7I6dnMadkTyNLhakwcZT33_\nTrQO6b$b$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKS\nb56bNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb\n$PbQbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKp\nbOIb2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5Yb\nilbSbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbw\nbxGbabbEbx$babbAb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbf$P5OVyep8z\nm$2W7LLP5CmPkFVaXyI6$KMi$8MbpT8kWwGizLsNi9$g7LMprCIu2izihAyCdAKGxXsljqQ_ACJ$\n9gv75Ebzbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb\n2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKh\nbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8Ib\nTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKm\nb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGb\noLbwbxPb6PbEbxPboLKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp$KM_T$7N\ndpRa1yI6jx8kWXDHdPXjKkBgdF27xOwwjJzNiCJidPX219Td34i7bUbz3gKg2TmSqisaZFyzkV07\nxfbGdPA_MtbKdX3qh$yhTnRaxjCTjIoAZ8le7MmZ5teVdsN2c3IPCkmGlV37dDsN8eurCjNaXh5P\ndpHbbNpO97n7x868T1Mh13Mb7LEl796QC2zstjur6b$P5lbpbfLb$PKkbOIbGPKsbOrbzbbpbxFb\nqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b$PbQ\nbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKSbODb\nNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$bzbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKEbOrb\nNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbtbxPbilbSb5Sb$PKDbOrbzbKZ\nbf$baPKBbf$bzbKhb5PbzbbpbxFb$pbG3le7xrmPNLhSF9GVT_a_MtbKdX3j48D9hAVqGh$gdQul\n73JEjJq_ACJ$GhsaZyI6d0RaLrJ$0mZ9wkzh2U3So$7NdDZa4DtVivmGxXia3Cv75EbzdAKaB5vN\n3EZT35urNLfuArtbjrW7xr7yzBKwfwzb3IJqbku1PeW7xrmP3xhgcDtbCcoLw7I635alCXc$2phk\nhyI6CcHVP3c1zEmwl5GI7LMG6TxmzL1VLjlOT_ojnhwh3nflFJvTksZAZ8l498U_A8GF3bH_Y5zb\nh4VBU7I6jq3a1DBS3EZ0Fe8eGOmaf7I6i1zcB93ETha9Q8DG7LMdY35QhoSLbNd26bOCAwur9_fj\nInbfbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKn\nbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$b\naPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKy\nbOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlKmb5Yb\nWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKLbOPb$PbSbf$bulKDbf$baPbYbxGboLbw\nbxPb6PbEbxPbalKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbp3gKg29U8zYK9\no_I6248ef32qqXg_T5urhqQTk_I6dAKdQFxmPqH3BF5HqXlLbPbpbfLb$PKkbOIbGPKsbOrbzbbp\nbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKhbOtbzbKhb5$b\n$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTlKS\nbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKSb56bNlbSbf$b\nzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$baPbpb5bbTlKE\nbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbJbxbbilbSb5Sb$PKDbOrb\nzbKZbf$baPKBbf$bzbKhb5PbzbbpbxFb$DmPp7d7OpbGTZ8kWteVjJi7xrB90mZSF9GVuwsiLnbf\n$KYb$PbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56b\nNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb\n2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbS\nbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGb\nabbEbx$balbMb5YbWbKBbf$bzbKJb5bbNlbpbxFb$PKLbOrbNLKhbO$bGPKhbOrbuLbpbfLb$PKR\nbOlb$PbQbxlboLbwbxGbabbYbxrb6lbwb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb\n$PbQbf$b6Lb1NnRFSVK5pG8a1h7xbf$bWbbpbOLbNlKAbOCb2bbpbxFboPbSbf$bNPKyb5$b2lKZ\nb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56bNlbSbf$bGbKibO6bNlK1b5lb\nNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQbOTbTlKSb56bNlbSbf$bGbKi\nbOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb2bKDbf$baPKkbOrb2bKnbOCb\nWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbSbf$bzbKJb5bbNlbpbxFb$PKF\nbOCbTlKDbOLbulK1bOCb$PbSbf$bulKDbf$baPbYbxGboLbwbxPb6PbEbxDb6LKmbfLbqLbpbOlb\nTlKYbOrb$PbQb5Sb$PKYbOCbqbKYbf$baPbpbf$bWbbpbOTb2LKEbOYbTlKYbf$baPKBbf$bGbKi\nbODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbWbbpb5bbjLK0bOCb2PKYbOCbGPbpbxFbNPKZbOLb\nGLKhbfLb$PKLb8IbGlKXbOIbzbKhbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKZbOLbulKebOtb$PbQ\nbf$b2bKhbOTbzbbpbfLb$PKLb8IbTPKybOLbNbbpbxFbNPKZbOLbGLKhbfLb$PKYb8IbulK1bOlb\nNlK1b5lb$PbQbOTbTlKSb56bNlKmb5YbWbbpb5lbqlKLbOCb$PbQbf$bGbKZb5$bTlKeb5$bTlKL\nbOPb$PbSbf$bulKDbf$baPbYbxGboLbwbxPbolbMbxbboLKmbfLbqLbpbOlbTlKYbOrb$PbQb5Sb\n$PKYbOCbqbKYbf$baPK2b5Sb$PK0bOIb2PKYbOCb2PKYbf$baPbpbfKprlbpbfLb$PKvbODb2PKD\nbf$baPbpbOCb2lKLbOPbTlKnbODbqPKhbf$bilbSb5Sb$PK0bOIb2PKYbOCb2PKYbf$baPbpjbmA\nZOjACKe7xrm_3EZdyXiazFgNzhhA9BTLbhhA9jNd1Yt9dDsUdiI69Uza1DBSp7d7x8hJzFUaHYmd\nDGEjThGFjLKNEX_T3Y77xOVbd13Nqjur35MCa_I6pQhp_JjYDGMgg9BZdFuKB9LC6bVNVYQQd1MS\nF34q2oj7x8_H9jXj48pNpzVL1Ct4dFuW18DuuFfNk9zhTQhAXyI6jeNa8rtoCGNprT72CBy7xVHj\nTZOWm8hA9jNzIeB_uwsaZ0bfjegqi5urTZ8aJCtQ7LMHPVkNzFgCGJKd7LMG69Tyuwsa1eur35al\nC7I6TDKaJ3c$dPX3eOSp6b$b$PbSbf$buLKRbOtbNbbpbxFb$PKLbOLbTlKRbOtbzbKhb5Pbzbbp\nb5YbjlbSbf$bNPKyb5$b2lKZb5lb$PbQb5Sb$PKLb8IbulK1bOlbNlK1b5lb$PbQbOTbTlKSb56b\nNlbSbf$bGbKibO6bNlK1b5lbNlKEbf$baPKkbOrb2bKnbOCbWbbpb5bbjLKMb5Cb2LKYbOCb$PbQ\nbOTbTlKSb56bNlbSbf$bGbKibOrb2bKRbOGb2PbpbxFb$PKSbOCbNPKYbf$bWbbpb5bbjLKpbOIb\n2bKDbf$baPKkbOrb2bKnbOCbWbbpb5lbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhb5YbilbS\nbf$bzbKJb5bbNlbpbxFb$PKLbOrbGPKZbOGbGPKZb5bbubbpbfLb$PKRbOlb$PbQbxlboLbwbxGb\nabbEbx$balbYb5YbWbKBbf$bNbKZb5lbTlbpbxFbqLbpb5lbNlKtb5lb$PbQbfVkV9ttD4oN4iI6\nD4oqRXZCDGn7x8$L9lUl79TyuFfNkjur2KgCG7I6pQhprj4yNhj7xOxn3KbLbPbpbfLb$PKkbOIb\nGPKsbOrbzbbpbxFbqLbpb5bbjLKRbOtbNbKhbOtbzbbpbxFbNPKZbOLbGLKhbfLb$PKLb8IbTLKh\nbOtbzbKhb5$b$PbQbOTbTlKSb56bNlbSbf$bGbKib5rbzlKyb5lbNlbpbxFbNPKZbOLbGLKhbfLb\n$PKLb8IbTlKSbODbNLK1bf$baPbpbOLbNlKkb5lb$PbSbf$bGbKibO$b2LKSbOlb$PbQbOTbTlKS\nb56bNlbSbf$bzbKibODb2PKDbOCb2PKYbf$baPKkbOrb2bKnbOCbilKmbfLb$PKYb5DbGbKhbf$b\naPbpb5bbTlKEbOrbNLKEbOrbGbKFbf$bWbbpbODbNbbpbxFbobbwbxGboLbtbx$b6PbJbxCbilKz\nbfLb$PKYbODbzbKSbOCb$PbQbfVgsJ2Fbf$bWbbpb56bzlKpb5lbulKYbOLbNlbpbxFb$PbpbfLb\n$PKyb5$bulKeb8IbzbKRb5lb2bKhbf$baPbpbf$bilKzbfLb$PKZbO$bGLKYb5$bTlK0b5lb$PbQ\nbfVabVxF07A90YtVqGXa1eeLpGuVYyI6dPXlj$mSTAV0FeYp7LM1rOtlDxE_YUbGiAR1DfbzNEEo\n45urTQZYKhL_p7lLbPKGb5$bjbK1d13973O8CXzh13ttpG8AZ8Duh1ZGxXiajPVaUYtb$KMsV9LY\n$KXaaF$qC7x7xO__07KaZDBhdPKa4k1WDjzPShVed0HozwfJ7LEWc8DuTWVUNX_gDj9bxVucd13l\njOspzFgdlCQ6jed7xrIjdvRAZ$c2P1u_73yBdPJiLJ8tDbalinbfb8LbGPKGbOtbjbKEb8Lb2F7q\ni1XksV2FdDsCxyI6b8LbGPKGbOJvnYtH2G19Q5urdvv7xbKGb5$bjbK1dsNaB5urG592lyI6b8Lb\nGPKGbOJC4ALYDGcl7TkKkj8C0rQO6b$bjbKEb8Lb2PKGb5$bjbK12AJ1iwurG592lyI6b8LbGPKG\nbOJefjurDGXihAaVdFNafAzh7LLbjbKEb8Lb2kGVzFU_AO6f3EpaHYt47LLbjbKEb8Lb2k6f3Epa\nHYt4zFd7xVxmjc1VPN37hLhaZ0bfbf$bWbbpbOYbNlKYbOrbgbKZb5lbTlbpbxFbqLbpb5lbGPKZ\nbOtbGLKSbOrbzbKyb5$b$PbQbf$b$PbSbf$bGbKXbO$b2bKRb56bubKhb5$b$PbQbf$b$PbSbf$b\nTlKXb5lbubKyb5$bulKQbOCbGPbpbxFb$Rxs2VshZLbpbfLb$PKnb5CbTPKYbODbzbKSbOCb$PbQ\nbf$b$PbSbf$bzbKRb5lb2bKhbf$baPbpC2q9QbbpbfLb$PKZb5CbzbKFbOIbGPbpbxFb$Rxs2Vsh\nZLbpbfLb$PKLb5$b2LKAbODbNbKhb5$b$PbQbf$b$PbSbf$bulKnbrIbGPKRbOGbulK1b8Gb2LKE\nbOSbGLbpbxFbzbKEb5CbNlKmb5Y~&quot;,  &quot;has_added&quot;: 0}</code></pre><p>其中的 <code>data</code> 字段就是加密后的文章内容。  </p><p>调用上述的 <code>pretty</code> 函数可以得到如下的json对象：</p><pre><code class="line-numbers language-json">{    &quot;sample&quot;: true,    &quot;authorId&quot;: &quot;129413610&quot;,    &quot;isModernTypesetting&quot;: false,    &quot;toc&quot;: [        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;1.塞纳河畔&quot;, &quot;paragraph_id&quot;: 477782127, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;2.雨城的云塔&quot;, &quot;paragraph_id&quot;: 477782176, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;3.机械遇见人心&quot;, &quot;paragraph_id&quot;: 477782293, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;4.杀人开关&quot;, &quot;paragraph_id&quot;: 477782412, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;5.走马灯&quot;, &quot;paragraph_id&quot;: 477782488, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;6.诺亚方舟&quot;, &quot;paragraph_id&quot;: 477782538, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;7.肉联厂小院&quot;, &quot;paragraph_id&quot;: 477782625, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;8.球星&quot;, &quot;paragraph_id&quot;: 477782730, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;9.表演&quot;, &quot;paragraph_id&quot;: 477782830, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;10.在少女的花影下&quot;, &quot;paragraph_id&quot;: 477782922, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;11.非洲森林象&quot;, &quot;paragraph_id&quot;: 477783058, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;12.姐妹&quot;, &quot;paragraph_id&quot;: 477783132, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;13.两个我&quot;, &quot;paragraph_id&quot;: 477783229, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;14.见义勇为&quot;, &quot;paragraph_id&quot;: 477783321, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;15.莲&quot;, &quot;paragraph_id&quot;: 477783401, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;16.书包&quot;, &quot;paragraph_id&quot;: 477783520, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;17.梧桐&quot;, &quot;paragraph_id&quot;: 477783588, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;18.去深处&quot;, &quot;paragraph_id&quot;: 477783629, &quot;level&quot;: 0},        { &quot;part_no&quot;: 0, &quot;title&quot;: &quot;19.鸽&quot;, &quot;paragraph_id&quot;: 477783835, &quot;level&quot;: 0}    ],    &quot;hasFormula&quot;: false,    &quot;price&quot;: &quot;4.99&quot;,    &quot;onsaleTime&quot;: &quot;2017-01-16&quot;,    &quot;posts&quot;: [{        &quot;translator&quot;: &quot;&quot;,        &quot;orig_author&quot;: &quot;郭沛文&quot;,        &quot;contents&quot;: [{            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782122        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782123        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477784115        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;露水的世啊，虽是露水的世，虽然是如此。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: true, &quot;p_align&quot;: &quot;center&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782124        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;——[日]小林一茶（1763—1824）&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: true, &quot;p_align&quot;: &quot;right&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782125        }, {            &quot;type&quot;: &quot;pagebreak&quot;,            &quot;id&quot;: 477784468        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;1.塞纳河畔&quot;,                &quot;level&quot;: 6,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;headline&quot;,            &quot;id&quot;: 477782127        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477785105        }, {            &quot;data&quot;: {                &quot;text&quot;: [{                    &quot;content&quot;: &quot; 我&quot;,                    &quot;kind&quot;: &quot;emphasize&quot;                }, {                    &quot;content&quot;: &quot;有时候觉得，人做梦就像是借了鸟的眼睛在俯瞰自己。&quot;,                    &quot;kind&quot;: &quot;plaintext&quot;                }],                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782128        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;在昨晚的这个梦里，人是露水一样的动物，有谁在清晨的草丛里行走，你就沾上谁的裤子跟他走，或者你不走，也要从叶子上坠下来。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782129        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;住进垃圾山的这么多年，我已经很少做梦了，每次的梦，几乎都是那一片芳草河岸的重复。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782130        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;这里的空气，弥漫着陈旧的腐臭味道，关不紧的水龙头嘀嗒、嘀嗒、嘀嗒，像那只橘黄色的小闹钟在走动，我洗脸的手，手背已布满皱纹，用毛巾擦过的皮肤，留有霉味，这就是我现在的生活。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782131        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;很早以前，我来到这里，忘记了这座城市的名字，也记不清楚这里是哪条街，什么地址，进了垃圾山，就再也没有出去过，那生满铁锈的围栏，是如今我生活的边界。这座城市，有一个在我还是少女时认识的男人，我没有去找他，不知道他现在过得怎样，或者是生是死。时间久了，时间就被我丢了，我的破屋子里没有镜子，我看不见自己的眼睛和脸，我忘掉了自己的年龄和生日，但偶尔会在梦里，见到那片芳草河岸。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782132        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;梦的清晰度很高。从远处望，这条河流宽阔无边，没有太多波澜，河水到了尽头，就和天连在一起。再凑到近处，可以认出来那些是唐龙草、狗尾草、蒲公英、晴雨草、芦苇、车前草，还有另外一些叫不出名字，又认得样子的野菜。在叶片、叶鞘、还有穗上挂着的，是晶莹闪烁的露水，可以通过它们的凸面，看清楚到里面植物的表面纹路，河风轻轻一吹，它们有些就落了下来了，渗进土里。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782133        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;梦里的一切都很美。只是我知道，这个世界上所有鸟的眼睛，因为生理构造的原因，都是绝对无法像人的眼睛一样分辨出颜色来的，唯有黑白，梦也一样。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782134        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;风的力很大，昨晚又把我这破屋子的木板门吹开了，还吹进来一些垃圾。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782135        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我勾腰去捡一张破烂报纸，稍微看了一眼上面的新闻。有一条导语讲的是一个老警察，在家中开枪杀死了自己的妻子后自杀的事，报纸的下半部分已经烂出了黑霉，大多数字迹已然无法辨认了，我依稀还看得出来上面写着一个熟悉城市的名字，津水。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782136        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;津水，那里曾是我的故乡。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782137        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我把报纸揉成团，丢在门外的废纸堆里。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782138        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;关上门，我盛了一碗粥，还不想吃，就端着它坐在床上发痴呆，呵呵，人老了就是这样。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782139        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我还在回味着梦里那片美丽又真实的芳草河岸，在我狭隘过活的一生中，真的是从来没去过这样子的地方，那么，又为什么会梦到它？&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782140        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782141        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我17岁那年，在津水一中读高二，那时候刚刚文理分班，班上同学又换了一波新的。那时候，我喜欢班上的男孩，名字叫陆松，班上偷偷喜欢他的女孩子肯定不止我一个，他的成绩非常好，长得也帅，不过对我来说，这些都是次要的，他最吸引我的地方是声音，有点像我那时候非常喜欢的，一个不怎么知名的歌手彭坦。那时候，青春期的我，上课会常常走神，想象陆松手拿话筒，眼里含情脉脉，轻轻唱歌给我听的样子。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782142        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;津水一中的校外，是一条大概有三百多米长的短街，本名叫“学士街”，但是因为大多消费者是一中学生的缘故，大家更习惯称它为“一中街”。街的两边，有便利店和小超市、有文具店、小吃店、快餐店、有书店和奶茶店，大大小小的店门面挤在一起，是学生们每天放学半小时左右的消费乐园，是绝大多数我们说给家长听的，那些回家太晚的借口的真实答案。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782143        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;几乎所有便利店后面狭窄黑暗的货物储藏室，都是男同学们的秘密吸烟室，听说那些小烟鬼们有时候买不起一整包烟，便利店的老板们也会拆开一包来，一根根地出售给他们，赚的钱比一整包卖出去的还要多；听说，不是谁都能从书店老板手上买到三级片DVD或者黄色漫画的，如果你直接问有没有卖，人家一般会回答你这是非法的东西不能卖让你走，如果你真的想买，起码得在他家店里买过很多次教辅资料或者其他的青春小说，让老板记得你的脸；听说奶茶店有一些装有门帘的小隔间，灯光都是昏黄的，有一些胆大的男女同学会点上两杯饮料，在里面拉上了帘子打Kiss……&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782144        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我操你的妈妈呢！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782145        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我日你爸的先人啊！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782146        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;在嘈杂的一中街上，看到穿着猪肝红与白色相拼样式的一中校服的学生打架，也不是什么新鲜事，抢女朋友的啦，觉得谁太嚣张看不惯的啦，不小心谁碰了谁一下的啦，都有可能在密集的自行车流中推搡几下就开打，这时候看热闹的同学们一般会围成一个圈，根据不同的情况，选择加油或劝架，然后又以一方落败逃跑、放狠话约群架、或者被班干部女生看见叫来教导处老师抓人为结束。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782147        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;当然，戴金戒指的贪财老板和打架欺凌的不良学生，不会是这条街上的全部。也有像陆松这样的好学生，逛书店买文学名著，在奶茶店的隔间里自习。更多的呢，是和我一样平常无奇的普通学生，有时在小吃摊位或者奶茶店里稍作停留，买些不怎么健康却很好吃的油炸小吃，或者喝杯奶茶，男孩子们聊聊游戏篮球，女孩子们聊聊明星八卦，再急急忙忙快踩单车，赶回家去。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782148        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我吧，好像挺了解别人的样子，但在别人眼中，我其实算个孤僻的人。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782149        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我对韩国偶像实在是提不起兴趣，也不知道有什么别的可以和别人交流。不知道我父母是菜市场肉贩子的事，是怎么被全班人都知道的，但屠夫的女儿这个身份，确实也蛮让我抬不起头来的。记得有一次语文课，班主任邹老师在带着我们过会考复习的重点，讲到一篇初中的老课文《鲁提辖拳打镇关西》，一位同学轮流朗读到“你是个卖肉的操刀屠户，狗一般的人，也叫做‘镇关西’！你如何强骗了金翠莲？”，忽然有个同学把头转向我，捂着嘴发出了意味深长的笑声来，接着，几乎全班的同学都扭过头来看着我笑，好在邹老师一声爆喝“有什么好笑的！”，才替我解了围。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782150        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;那次陆松并没有笑我，他只是转过来，看了我几秒，他的眼神好像在对我说话，告诉我这种事是不值得在意的。那一刻，我感觉自己喜欢的不仅是陆松的声音了，我是不是早就已经被他这个人牢牢迷住了呢？&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782151        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;应该是吧，我喜欢陆松的全部，喜欢得要命了，可是我呢，一直在对他做着很恶心的事情。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782152        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;一中街的尽头拐角，有家名叫“塞纳河畔”的奶茶店，老板是个从大城市回来的文艺青年，一直坚持让同学们叫它的店“糖水店”，不要叫“奶茶店”。我也是偷听班上的艺术生讨论才知道，他在每个隔间都挂着油画的印刷品，是印象派画家莫奈的“塞纳河”系列，他用油画的名字来给隔间命名，陆松有中午放学后在“清晨的塞纳河”那个隔间里自习英语的习惯。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782153        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;那一天，地上的积雪还很厚，天空也不时会有雪的碎屑落下来，我脱下手套，走进塞纳河畔，点了一杯古法红糖姜茶，热饮少糖。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782154        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“给，这是今天中午的。”文艺青年老板在给我制作饮品之前，把MP3交到我手上。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782155        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“不过今天中午可能没什么内容吧，他还带了两个女孩子过来。”老板一边用勺子舀糖浆，一边带着神秘的笑意给我说。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782156        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“好，没事。”我回答他，递了15块钱给他。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782157        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;一杯姜茶的价格是5元，另外10块，是付给那个MP3的，那是我自己的MP3。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782158        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;在拥有自己的手机以前，我有一个用来听歌的MP3，有时会偷偷拿去网吧，用USB数据线从网上下载音乐，喜欢听彭坦的歌，就是从那时候开始的。这家奶茶店开张不久，我无意中发现店内的音乐，竟然是达达乐队的《南方》，一问才知道，老板也非常喜欢彭坦，便经常来这里买奶茶喝，久而久之，和他也算是成了半个朋友。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782159        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;老板人叫“浩哥”，我有时会把自己早已不用来听歌的小小MP3给他，让他帮我偷偷放在“清晨的塞纳河”里，录下陆松自习时候的声音，付给他的报酬是一次10块钱。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782160        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你这是搞监听吧？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782161        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;他第一次听我说这个奇怪想法的时候，还以为我脑子有问题。我给他解释说，这个男同学是我们班上的年级第一名，英语特别好，他喜欢在你们店里自学英语，我的英语又特别烂，所以就想偷师学艺一下。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782162        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;这当然不完全是借口，至少也算一种自我安慰。我用“学英语”这个理由来安慰我自己做得没错，但其实我清楚得很，这样做的主要目的，还是满足自己的恋声癖，我想收集他的声音，我喜欢用那些碎碎的，重复的，隔间里朗读着单词的声音，在夜里伴我入眠。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782163        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我真恶心，这就是监听。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782164        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;我会把MP3里的microSD卡取出来，放进手机里，把所有的录音文件重新命名，按顺序整理好，然后在每天晚上，用耳塞播放着，进入睡眠。他的唇齿、他的呼吸、他有时候念了太长的句子，导致的不自觉的喘气，都是他用来轻轻抚摸着我耳蜗的气息，这些气息让我躺在床上的身体，好似是浮在轻轻荡漾的宽阔河面上一样，非常放松。有时我的身体会慢慢发烫，我会忍不住把手伸进睡裤……&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782165        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;但是那一天，不一样。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782166        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;浩哥说，他带了两个女孩子过来。女孩子是谁？他们在聊什么？我等不到晚上了，从口袋里掏出耳机来，插进mp3，在雪后人少的一中街上，拿着生姜茶边走边听。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782167        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;……&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782168        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“第一，何娇必须能够顺利死掉。第二……”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782169        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;这是陆松的声音。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782170        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;何娇是班上的女同学，成绩和陆松不相上下，基本上每次考试都是全班前三，年级前五。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782171        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“接下来我要说的，就是我的解题方法……”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782172        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;那天，是2012年4月1日，愚人节，没人缘的我没有被开愚人节玩笑。津水市仍未化雪，一中街的的地面上，学生们早就把白雪踩成了污黑的泥水，走路必须小心翼翼。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782173        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;那时，我喉咙干渴得要死，把只喝了三口的奶茶杯放在路边塞满爆出着恶心油腻的饭盒与竹签的垃圾桶上，决定再也不要去那个名叫“塞纳河畔”的奶茶店了。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782174        }, {            &quot;type&quot;: &quot;pagebreak&quot;,            &quot;id&quot;: 477784116        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;2.雨城的云塔&quot;,                &quot;level&quot;: 6,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;headline&quot;,            &quot;id&quot;: 477782176        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477785106        }, {            &quot;data&quot;: {                &quot;text&quot;: [{                    &quot;content&quot;: &quot; 你&quot;,                    &quot;kind&quot;: &quot;emphasize&quot;                }, {                    &quot;content&quot;: &quot;不是津水本地人，你对这个南方小城市印象最深的是，这里几乎有一半时间都在下雨，下大雨的时候，还会刮很大的风，电闪雷鸣。路边还未建好的楼盘工地仍在施工，围墙上用巨大的黑字写着广告语：“城市须要理想，你须要住在理想城。”&quot;,                    &quot;kind&quot;: &quot;plaintext&quot;                }],                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782177        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你小时候的理想，是成为一个可以惩凶除恶的大英雄，所以19岁高中毕业，你读了警校。你在警校待了一段时间，理想慢慢变成了可以顺利毕业，早日去做警察这份还算稳定的工作，可以尽量去抓一些坏人；从警校出来，分配到这里当刑警，转眼也已经十几年过去了，你感觉，自己已经看不大出来谁像坏人，谁像好人了，反倒是想多攒点钱，期望有一天攒够了，可以在这“理想城”付个首付。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782178        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;今年是2029年，你已经恨透了下雨。34岁的男人，开单位警车，无房，没有结婚，谈过三场恋爱都吹了，你好像是被这雨困在津水的一样，几次想调走去别处，或者干脆辞职去沿海做点别的事情，最终都放弃了，除了在这里当个警察，你越来越不知道自己还能干点别的什么。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782179        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;警车在街边停了近20分钟，唐六总是迟到。雨点零星砸下来，你隔着挡风玻璃，看着他把公文包顶在头上，勾着身子从远处一路小跑过来，像只被淋湿的黑胖土狗，他的身后乌云遮幕，一座白塔。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782180        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;他喘着粗气说了两遍“雷哥不好意思”，你没有搭理他，他拉开车门坐进来，用手抹掉脸上的雨水，碰紧车门，把制服脱掉，扔在后座。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782181        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你他妈的每次不能早点啊？”你摁下引擎启动按钮，发车嗡嗡作响，你把一条毛巾，扔在他被肚皮撑起来的衬衣上。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782182        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我刚拿起筷子，接到你的电话，赶忙吃了两口饭就过来了，下班回去的时候天都还出大太阳呢，谁知道半路还下起了暴雨，肯定慢些嘛，你莫生气呀……”解释完毕，他又急着问，“到底怎么个情况？妈的个鸡巴好不容易今天按点下班一回，饭都没吃完就又被叫出来了，唉！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782183        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;唐六比你小两岁，已经结婚买房了，明年准备要小孩，最近在攒钱买车，他说自己想买纯进口的电动车。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782184        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你一只手操纵方向盘转弯，一只手从口袋里摸出白沙烟，用嘴叼起一根。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782185        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“老何的吩咐呗，有人报警说，有个女孩子，在公园里疑似失踪，就让我们过来看看。”你说。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782186        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“才疑似失踪啊？”唐六提高了声调，咂巴下嘴，还想问什么，又把话咽了回去。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782187        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“是啊，我也不爽啊……老何这个人，你知道的嘛，从北京回来的，刑侦专家来的，做事很严谨的，呵呵，”你也抱怨道，“失踪都没24小时，没准我们才刚到，人就找回来了，是吧？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782188        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“唉，当警察不容易哟……”他苦笑道。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782189        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“是不容易啊，兄弟。”你吸了两口烟，觉得抽烟也没什么意思，把烟头扔出窗外，心里有些漠然，盯着被狂雨变得更朦胧的前路继续开车。雨刮器越来越快，也没什么太大作用，前方路早已像雾一样迷茫。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782190        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;开了一会儿，你看见远处，两个模糊的人影站在一块写有“观光单车出租”，红红绿绿的喷绘招牌下，好像是在等你们来。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782191        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“是你们报的警吗？有个女孩子失踪了？”你从警车上下来，冲进停满了双人观光单车的棚子里，找两人了解情况。这两个人，一个看起来是20岁出头的大学生，另一个，大概是40多岁的中年男人。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782193        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“她是你们什么人？”唐六跟在后面，打开公文包，拿出笔记本和钢笔。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782194        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我们不认识她。”雨很大，中年男人的声音很小。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782195        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“不认识？”你有点不耐烦，“那你他妈报什么警啊？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782196        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“您好！是我报的警，这位大哥是这里搞观光自行车出租的老板，是我请他留下来帮忙证明的，”雨太吵，年轻人说话很大声，“今天确实有个女孩子，在这座公园里失踪不见了！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782197        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“那你来说，是怎么回事？”唐六用嘴咬开钢笔笔帽，插到钢笔的尾部，说话也很用力。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782198        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“是这样的，我看今天上午来公园散步，看到一个穿制服的长头发女孩在骑观光单车，觉得挺特别的，就一直在默默关注她。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782199        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“哪里特别？”你问他。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782200        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“因为她穿制服啊，是那种日本流行的水手服、短裙、白丝袜，平时没有人穿这个的，我猜她和我一样是个喜欢二次元动漫文化的女孩子，所以被她吸引住了，一直在关注她。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782201        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“然后呢？”你大声问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782202        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“然后我想是不是可以找她要个电话号码，她骑车是去了公园里那座塔的方向，我就往那边走了走，结果没有遇到她，那是上午是10点多的事情。”他大声回答，你们都像是在和雨水赛音量。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782203        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;唐六在笔记本上迅速记下“上午10点”这个时间点。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782204        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我当时就想，这个公园本来也不算大，租观光单车的地方就只有这里一处，她总得过来还车是吧？就坐在对面的长凳上等她。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782205        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;大学生指了指，那条租车店外面的长凳，被雨水猛烈敲打着。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782206        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“等到她了吗？”你问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782207        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“等到了一次，大概过了十几二十分钟吧，她骑车从塔那边过来，速度比较慢，我就那么看着她，她好像注意我到在看她，还和我对视了几秒，好像还笑了一下，然后又慢慢从我身边骑过去了，仍然是往塔的方向。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782208        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你看见唐六捏了捏自己的鼻子，他问：“然后呢？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782209        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“然后那时候我怂了嘛，没敢去找她要电话号码，决定等下一次，她再过来的时候去问，反正她要来这里还车的嘛，这个公园就只有这里一个租观光单车的店。但是直到下午5点40，公园快关门，那个女孩都没有回来还车。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782210        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你坐在那里，等一个不认识的姑娘，从上午10点，等到下午快6点？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782211        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你在想，现在的年轻人，生活是不是过得太清闲了。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782212        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“对，到了后来，我觉得事情越来越不对劲了。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782213        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“接着他就走过来找我，和我说了情况，问我是不是还有一辆车没有还回来，”租车店的老板接过话说，“我们一起数了下子，我这里总共24台车，一台没少。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782214        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“等等等等，让我顺一下……”唐六皱用手比划道，“也就是说，上午有个女孩子从你这里租了车走，然后，这个一直偷偷关注她的小伙子，发现她并没有回来还车，可是你这里的车却全都还回来了，一台不少，所以你们觉得这个女孩子，是失踪了？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782215        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“对，是这样，那个女孩子穿得很特别，所以来租车的时候我印象也非常深刻，但是后来她一直没有回来还车。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782216        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“然后你们怀疑女孩失踪了，回来还车的，是另有其人，就报了警？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782217        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;青年点头：“是的。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782218        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你们记清楚她的长相了吗？会不会是中途换了衣服之类的？你们没认出来？”你问他们。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782219        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“绝对不会，我记得她的长相。”青年摆头，摇着手指。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782220        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“那会不会是她和朋友一起租的车，后来朋友帮她还回来的？”你又问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782221        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“应该不会，当时她来租车，我是有印象的。我们这里租车，押金200块，租一次50，不限时间，可以一直骑到公园关门。这个女孩说自己身上只有150块，我问过她可不可以找朋友借，她说她一个人来的，不能租就算了，我就150租给她了。”车店老板否定了你这个猜想。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782222        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“那你应该很有印象啊，还的车只压了150，别的都压200，你就没发现，借的人和还的的人不一样？”你问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782223        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“哎呀，我这种小本生意，讨价还价的人多，150、180还有压100的，不一定都愿意压200在我这里的，我一般都租，哪里注意得了那么多？只要回来的车和我本子上记的车号对头，我就退押金给他，要不是这个小伙子细心，我也根本不会注意到这个事情。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782224        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“单车都是有编号的吗？”你问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782225        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“有，”老板回答说，“在车龙头中间的圆形小牌子上写着呢，那个女孩租的应该是7号车。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782226        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;一股子橡胶味，你钻进那堆双人观光单车中，找到车头绿色圆牌子上红字编号为“7”的那一辆，数字旁边画着两只黄蓝颜色卡通蝴蝶。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782227        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我们来之前，你们有检查过这辆车吗？”唐六捏了捏那辆7号双人观光车的刹车问他们。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782228        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“没有。”两人同时否认，老板告诉你，“这种双人单车虽然有两个方向盘和两副刹车，但其实只有左边的那个可以控制方向和停车，你刚刚捏的那个是不起作用的。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782229        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;唐六也走进来，钻进这辆双人单车的遮阳棚内，左手在座椅下面摸索了一番。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782230        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“有什么东西吗？”你问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782231        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;他从单车里钻了出来，手里捏着一个简单揉了一下的纸团，他拿着纸团走出来，在你们三人面前小心地展开。纸像是从笔记本上撕下来的半张，上面有横条格子，纸张靠上面的部分用黑色的墨水，工整的笔迹写着五个大字：“去云塔那边”。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782232        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;云塔，一个熟悉的名字。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782233        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“这座塔不是叫鹤塔吗？”青年有些疑惑。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782234        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你是外地人吧？这塔以前叫云塔，现在叫鹤塔，建公园以后改的名字。”老板说完，天空一阵闪亮。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782235        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“对，是这样。”你肯定了他这个说法，轰隆轰隆的雷声在天边响起，似乎隔得很近，像是从塔那边传来的。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782236        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“时间也不早了，天气也不好，你们两个先回去吧。留个联系方式给我们，可能之后还会和你们联系，想起什么别的来，也可以打这个电话给我。”你说，“这个女孩子的事情，先暂时不要和别人讲，如果真的是失踪，最近应该会有家人报警，事情确实有点蹊跷，我们会先在附近调查一下，去公园管理处看一下监控，好吧？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782237        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“嗯，如果是我家孩子丢了，那也肯定蛮着急的，希望没出什么事情。”租车店老板拍拍青年的肩膀，“小伙子，不早了，你也快回去吧，放心交给人民警察处理。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782238        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“好。”青年答应下来，接过唐六的笔，在他的笔记本上写下来自己的姓名和电话号码。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782239        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我们现在？”唐六收好笔，把那张捡到的纸，夹在自己笔记本里。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782240        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“上车，”你说，“去云塔那边。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782241        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782242        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;雨刮器疯狂摇摆着，公园虽大，但租车店到那座塔之间的距离只要两三公里，过一座拱桥的时候，你得把车速压得很慢。唐六盯着塔思考，把手伸到脖子后面，压着头发往前摸到脑门，揪着刘海，这是他想问题时候的习惯动作，同事们都笑他，发际线高，就是这么抓出来的。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782243        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“挺怪的，”他说，“怎么还有这么个事儿……”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782244        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你觉得哪里怪？”你问。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782245        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“比如说这个报警的人就很怪，哪里有人会被一姑娘迷一整天在那等着，跟中了邪似的，搞不好，又是一个雨中艳鬼案。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782246        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;雨中艳鬼案是局里经常拿来开玩笑的一个老案子，发生在一九九几年，那时候唐六和你可能都还没有出生，据说是一个津水女人在雨天的大街上色诱杀死了一个30多岁的男人，被人给撞见并且报案了。报案人在雨夜回家的时候，看见一个女人赤裸着身体在大街上奔跑，那男人的尸体就躺在地上，也没穿衣服，满头是血，用手电光一照，血正顺着污水流进下水道里。后来只知道，这男的和女的同居过一段时间，却迟迟找不到什么线索，久未破案，事情就被越传越神，有人说那个目击者看到的女人其实没有脚，跑起来轻飘飘的，也没有影子，不是人而是个艳鬼，后来甚至当时局里都有警察认可了这一说法，有人说在档案室偷偷看过笔录，目击者确实有说过没有影子，死掉的那个男的，确实和鬼住了一段时间，只不过上头因为怕影响不好，封锁了消息。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782247        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;此案，至今未破。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782248        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你个警察，还怕鬼啊？”你揶揄唐六。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782249        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“操！警察才怕鬼呢！我小时候碰到鬼，你知道不？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782250        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“没听你说过。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782251        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“就是那种尿尿鬼，晚上起床去尿尿，发现自己的影子在厕所里突然变大！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782252        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“身后还起了一阵凉风是不是？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782253        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“对对对！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782254        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你家那时候用的白炽灯，是用电线吊着的吧？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782255        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“对对对！还有个灯罩子，雷哥你怎么知道？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782256        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你哼笑一声：“还见鬼，那影子是灯晃的，风把灯吹得离你近了些，影子不就大了吗？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782257        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“哎呀！你懂什么，风一吹，灯不是该来回晃不？”唐六扬起手晃来晃去，“我那个影子，它不是忽大忽小，就是突然变大了！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782258        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你懒得和他说这些了：“那是因为风很大嘛，一直吹着，灯就没怎么晃呗，好好好了，到地方了，给我下车！”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782259        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782260        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;天色渐晚，警车的引擎声惊起了一只黑鸟从树上飞走，下车的时候，唐六迟疑了一下，还是把笔记本扔在了警车的座椅上。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782261        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“说起来，这个塔，倒是真的很邪门。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782262        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;推开塔门，你们打开手机闪光灯，四下探照着寻找灯的开关，塔里有檀香的味道，这也难怪，全中国的古塔，大都曾经和佛教有关。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782263        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你可别吓我啊，雷哥。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782264        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“没吓你呢，说真的。”你摸到一个开关，塔里的灯管便被点亮了，这层塔的中间供着一尊大佛，左边是一个玻璃展柜，玻璃上面用红字贴着“十元一套”，里面放着可供出售的纪念明信片，纸都有些泛黄了，右边是螺旋而上的石梯，你们把手机的光关掉，向螺旋石梯上走去。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782265        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“见过老何的老婆吗？”你问他。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782266        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“问这个干什么？有一次去老何家，见过，看上去……人有点不太灵光是吧？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782267        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“那你知道老何的孩子吗？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782268        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你们“噔噔”的脚步声，在无人的塔里荡着。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782269        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“他们不是说，老何是个丁克？一直没有要小孩吗？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782270        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你摇摇头，告诉他：“有过，可是死了。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782271        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“啊？死了？”唐六惊愕一声。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782272        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“老何有过一个女儿，十几岁的时候死了，夫妻两人后来也没有再要孩子。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782273        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“这么可怜……”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782274        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你们来到二层，塔的四面都是装有简易铁护栏的石头窗户，没有窗页，外面有一段很窄的，只容得下一只脚的石阶，跟个小阳台差不多，同样是佛像、玻璃橱柜、香火炉。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782275        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我也是上次和张局喝酒，听他说的，就老何回来前几天吧。”你朝窗户外望了望，“他说老何年轻的时候是从咱们局里出去的，成了全国跑的案侦专家，现在又回咱们局里来当队长，别看他好像得了不少奖，很风光的样子，其实是个很可怜的人，他女儿十几岁的时候，就是从这个塔上摔死的。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782276        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“啊？怎么……摔死的？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782277        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“听张局说，当时是班级春游吧，”你们继续向塔的更高层走去，“那年春来得特别晚，说是春游，其实才刚开始化雪，老师带学生们来到塔这边玩，老何的女儿就是其中之一，不知怎么就从塔上掉下来摔死了。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782278        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“什么叫不知怎么就？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782279        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“张局说那个案子，有个很蹊跷的地方啊。学生们都听到了老何女儿掉下去时候的尖叫声，却是没人看见她是从第几层掉下去的。但明明啊，当时每一层都有学生，你说这怪不怪？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782280        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你们在狭隘的石梯上，一阶一阶往上走。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782281        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“这没道理啊，就算没人看见她摔下去，但是至少她出事情之前在哪一层，总有人看见吧？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782282        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你摇摇头：“当时张局和老何都同咱们一样，是普通刑警，还没当官。虽然局里的人都很努力，想还老何一个公道，但最后没办法，实在找不到什么线索认定他杀或者自杀，还是按照意外身亡给定了。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782283        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“那老何女儿如果还在的话，应该和我们年纪差不多大吧？”唐六反应过来。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782284        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“是啊，我们这些外地来的，没怎么听说过当年的事，张局说，后来这片湿地建成公园，这个塔也从‘云塔’改名叫‘鹤塔’，都过去十多年了。”你摸出香烟，丢给唐六一根。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782285        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“我觉得，张局挺看好你的嘛，还和你喝酒讲这些。”他点燃烟，似乎是有些羡慕你了。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782286        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“扯鸡巴蛋，”你骂他，“张局要是真看好我，我会混得比你小子差这么多？”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782287        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“你这个人，就是太不圆滑了，混得好也不容易咧！”唐六转移了话题，“不过老何应该挺不甘心的吧？感觉他对张副局长之外的其他几个老领导，包括方局，都挺冷淡的。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782288        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;“唉，你有没有想过老何在外面干刑侦都干得这么牛了，为什么还回来津水这么个三线小城啊？”你们站在塔的最高一层，俯瞰看着城市暮色，你吹出一口烟，味道很温暖，只要微眯着眼，就能看见理想城工地那高高的吊塔还在吊运着钢筋，工人们在探照灯下，继续敲打雨夜，发出铛、铛、铛的声音。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782289        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;唐六撅着嘴，没有回答你的问题，你只能自问自答。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782290        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;你说：“我是觉得，他还没有死心。”&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782291        }, {            &quot;type&quot;: &quot;pagebreak&quot;,            &quot;id&quot;: 477784117        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;3.机械遇见人心&quot;,                &quot;level&quot;: 6,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;headline&quot;,            &quot;id&quot;: 477782293        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477785107        }, {            &quot;data&quot;: {                &quot;text&quot;: [{                    &quot;content&quot;: &quot; 我&quot;,                    &quot;kind&quot;: &quot;emphasize&quot;                }, {                    &quot;content&quot;: &quot;小的时候，住在县城的奶奶家。奶奶去世之前，大人们说，她的身体里面在开始变坏，所以她的呼吸，让房间里充满了臭气。大人们没办法，只好在墙角点上了许多檀香来掩盖，并且不准我进去，骗我说奶奶已经死了。年幼的我以为，檀香的味道，就是死人的味道，所以很不喜欢。&quot;,                    &quot;kind&quot;: &quot;plaintext&quot;                }],                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782294        }, {            &quot;data&quot;: {                &quot;text&quot;: &quot;春游那天，那座塔里，到处都是檀香的气味，让我犯晕，想吐。&quot;,                &quot;format&quot;: { &quot;p_indent&quot;: false, &quot;p_center&quot;: false, &quot;p_quote&quot;: false, &quot;p_align&quot;: &quot;left&quot;, &quot;p_bold&quot;: false, &quot;t_indent&quot;: false }            },            &quot;type&quot;: &quot;paragraph&quot;,            &quot;id&quot;: 477782295        }],        &quot;title&quot;: &quot;冷雨&quot;,        &quot;subtitle&quot;: &quot;&quot;,        &quot;orig_title&quot;: &quot;&quot;    }],    &quot;abstract&quot;: &quot;一部追随三种人称视角，不停转换探索，渐渐逼近“罪源”本质的推理小说。\r\n以国内南方常见的多雨小城市之一“津水”为舞台，描述了以一个残酷悲剧为起点，诸多悲剧发酵而难以停止的十二年，众人的辛苦追寻与心酸逃避。\r\n\r\n连续暴雨之后，\r\n每个淋雨的人，\r\n他们的灵魂，\r\n含水量都要饱和了。\r\n\r\n潮湿的灵魂，\r\n有的重得掉了下来，\r\n有的还挂在身上，\r\n挂在身上的，都快要长霉了。&quot;,    &quot;metaData&quot;: {        &quot;translator&quot;: &quot;&quot;,        &quot;publisher&quot;: &quot;&quot;,        &quot;authorizer&quot;: &quot;郭沛文&quot;,        &quot;subtitle&quot;: &quot;&quot;,        &quot;title&quot;: &quot;冷雨&quot;,        &quot;author&quot;: &quot;郭沛文&quot;,        &quot;provider&quot;: &quot;&quot;,        &quot;isOriginWorks&quot;: true    }}</code></pre><p>其中 <code>post[0].contents</code> 就是这一章节的所有段落列表，每一个元素中 <code>data</code> 是具体的数据，<code>text</code> 是段落内容，<code>format</code> 是段落格式。  </p><p>爬取全书所有章节的原始数据之后，经过解码，排版的重新处理之后，就可以获取到豆瓣阅读的全本小说。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间找本小说发现只有豆瓣有资源，然而并不能下载，就想着把全本爬下来，现将接口和解码相关记录如下。&lt;/p&gt;
&lt;h2 id=&quot;接口&quot;&gt;&lt;a href=&quot;#接口&quot; class=&quot;headerlink&quot; title=&quot;接口&quot;&gt;&lt;/a&gt;接口&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;URL
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>write-a-nodejs-proxy-support-http/https</title>
    <link href="https://luoyefe.com/blog/2016/12/02/write-a-nodejs-proxy-support-http-https/"/>
    <id>https://luoyefe.com/blog/2016/12/02/write-a-nodejs-proxy-support-http-https/</id>
    <published>2016-12-02T10:33:41.000Z</published>
    <updated>2023-05-24T09:56:27.596Z</updated>
    
    <content type="html"><![CDATA[<p>web 开发的调试过程不可避免的涉及到代理的问题，当然现在很多工具都可以完成这项工作，比如 Win 下的 <code>Fiddler</code>，Mac 下的 <code>Charles</code>，今天我们来看一下怎么用 <code>NodeJS</code> 完成这些代理工作，当然，必须支持 <code>http/https</code> 两种常见协议。  </p><h3 id="代理原理"><a href="#代理原理" class="headerlink" title="代理原理"></a>代理原理</h3><p>要想实现代理的目的，就得有一个代理服务的存在，客户端的请求不会直接到达服务器，而是先经过代理服务，然后由代理服务来处理这个请求，不管是原样的转发到目标服务器，还是拦截下来做自定义的回复。</p><p>下图来自《HTTP权威指南》，直观的展示了一个代理服务所做的工作：</p><p><img src="./web_proxy.png.webp" alt="proxy">  </p><p>实现这个客户端请求转发到代理服务的工具当然可以用系统的代理配置，不过推荐使用 <code>Chrome</code> 的一个插件 <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="external">Proxy SwitchyOmega</a>.  </p><h3 id="创建-HTTP-代理服务"><a href="#创建-HTTP-代理服务" class="headerlink" title="创建 HTTP 代理服务"></a>创建 HTTP 代理服务</h3><p>了解了代理的原理之后，我们来实现一个简单的代理服务：</p><pre><code class="line-numbers language-js">const http = require(&#39;http&#39;);const url = require(&#39;url&#39;);http.createServer()      .on(&#39;request&#39;, (req, res) =&gt; {        // 解析请求参数        const urlObj = url.parse(req.url);        const options = {            hostname: urlObj.hostname,              port: urlObj.port || 80,            path: urlObj.path,            method: req.method,            headers: req.headers        };        // 新建一个请求到真实服务器        const pReq = http.request(options, function(curRes) {            res.writeHead(curRes.statusCode, curRes.headers);            // 返回给浏览器            curRes.pipe(res);        }).on(&#39;error&#39;, function(e) {            res.end();        });        req.pipe(pReq);    })    .listen(8080);</code></pre><p>上述代码会在本地的 <code>8080</code> 端口创建 HTTP 服务，如果配置浏览器的代理为 <code>127.0.0.1:8080</code>，这个服务就能接收到浏览器发出的 HTTP 请求，并且从请求中解析相应的参数，新建一个到真实服务器的请求，得到真实服务器响应后，再返回给浏览器，完成一次代理。  </p><p>当然，如果你想对转发到本代理服务的请求做拦截并且自定义返回内容，只需要对 <code>res</code> 进行操作即可。  </p><p>但是，这个代理服务正常运行之后你会发现，HTTPS 的请求无法在本代理服务中捕获，这是为什么呢？  </p><p>因为我们现在创建的服务是一个 HTTP 服务，无法处理 HTTPS 请求，那是不是创建一个 HTTPS 的服务就可以了呢？  </p><p>答案是肯定的，如果想要代理并且处理浏览器发出的 HTTPS 请求，我们就必须再创建一个 HTTPS 服务。  </p><p>创建 HTTPS 服务很简单，重要的是，如何让 HTTPS 请求到达我们的服务器，重新设置浏览器的代理么？并不用这么麻烦。  </p><h3 id="转发-HTTPS-请求"><a href="#转发-HTTPS-请求" class="headerlink" title="转发 HTTPS 请求"></a>转发 HTTPS 请求</h3><p>不管是 HTTP 还是 HTTPS ，都是一种网络应用协议，它最本质的还是一次 TCP 连接，而 TCP 连接我们可以用 CONNECT 方法捕获到，所以有了以下代码：  </p><pre><code class="line-numbers language-js">const http = require(&#39;http&#39;);const net = require(&#39;net&#39;);const url = require(&#39;url&#39;);http.createServer()    .on(&#39;connect&#39;, (req, socket, upgradeHead) =&gt; {        // 利用 `NodeJS` 的 `net` 模块的 `Socket`，处理 CONNECT 请求        const socketClient = new net.Socket();        const urlObj = url.parse(&#39;https://&#39; + req.url); // CONNECT 只能拿到请求的域名和端口，拼接下再解析        let realport = urlObj.port || 443;        let realDomain = urlObj.hostname;        // 转发到真实服务器        socketClient.connect(realport, realDomain, function() {            socket.write(&quot;HTTP/&quot; + req.httpVersion + &quot; 200 Connection established\r\n\r\n&quot;);        });        socket.on(&#39;data&#39;, function(chunk) {            socketClient.write(chunk);        });        socket.on(&#39;end&#39;, function() {            socketClient.end();        });        socket.on(&#39;close&#39;, function() {            socketClient.end();        });        socket.on(&#39;error&#39;, function(err) {            socketClient.end();        });        // 返回给浏览器        socketClient.on(&#39;data&#39;, function(chunk) {            socket.write(chunk);        });        socketClient.on(&#39;end&#39;, function() {            socket.end();        });        socketClient.on(&#39;close&#39;, function() {            socket.end();        });        socketClient.on(&#39;error&#39;, function(err) {            socket.end();        });    })    .listen(8080);</code></pre><p>上述代码将会在本地的 8080 端口启动一个 HTTP 服务，并且监听 CONNECT 事件并做原样转发，在这个代理服务中我们可以捕获到浏览器的 HTTPS 请求，并且通过我们的代理服务进行向真实服务器的转发工作。  </p><p>既然我们已经可以捕获到 HTTPS 请求，那完成对 HTTPS 请求的处理中之后我们就可以得到一个完整的 web 代理服务。  </p><h3 id="创建-HTTPS-服务"><a href="#创建-HTTPS-服务" class="headerlink" title="创建 HTTPS 服务"></a>创建 HTTPS 服务</h3><p>HTTPS 服务的创建 <code>NodeJS</code> 为我们提供了 <code>https</code> 模块，但是想要创建 HTTPS 服务，必须有 HTTPS 证书才行，HTTPS 证书的颁发国际上有很多机构。作为个人开发者我们可以借助 <code>openssl</code> 工具创建自签署的证书。  </p><p>具体请谷歌～  </p><pre><code class="line-numbers language-bash">openssl genrsa -des3 -out private.key 2048 # 生成私钥openssl req -new -key private.key -out server.csr # 根据开发者提供的信息生成中间文件openssl x509 -req -in server.csr -out server.crt -outform pem -signkey server.key -days 3650 # 根据中间文件生成证书和公钥</code></pre><p>有个相应的证书之后我们就可以借此创建 HTTPS 服务：</p><pre><code class="line-numbers language-js">const https = require(&#39;https&#39;);https.createServer({    key: &#39;./server.key&#39;,    cert: &#39;./server.crt&#39;}).listen(9090)</code></pre><p>上述代码将会在本地的 9090 端口启动 HTTPS 服务。  </p><h3 id="整合代理服务"><a href="#整合代理服务" class="headerlink" title="整合代理服务"></a>整合代理服务</h3><p>能够捕获浏览的 HTTP/HTTPS 请求，也有了 HTTP/HTTPS 服务，我们就可以完整的完成一个代理服务，全部代码如下：  </p><pre><code class="line-numbers language-js">const http = require(&#39;http&#39;);const https = require(&#39;https&#39;);const url = require(&#39;url&#39;);const net = require(&#39;net&#39;);let httpServer = null;let httpsServer = null;let httpPort = 8080;let httpsPort = 9090;let needProxy = true; // 可以定义代理规则等httpServer = http.createServer().listen(httpPort);httpsServer = https.createServer({    key: &#39;./server.key&#39;,    cert: &#39;./server.crt&#39;}).listen(httpsPort);httpServer.on(&#39;request&#39;, (req, res) =&gt; {    // 处理 http 请求    if (needProxy) {        // 自定义返回内容        res.write(&#39;Proxy server is running.&#39;)        res.end();    } else {        // 原样返回        const urlObj = url.parse(req.url);        const options = {            hostname: urlObj.hostname,              port: urlObj.port || 80,            path: urlObj.path,            method: req.method,            headers: req.headers        };        // 新建一个请求到真实服务器        const pReq = http.request(options, function(curRes) {            res.writeHead(curRes.statusCode, curRes.headers);            curRes.pipe(res);        }).on(&#39;error&#39;, function(e) {            res.end();        });        // 返回给浏览器        req.pipe(pReq);    }})httpsServer.on(&#39;request&#39;, (req, res) =&gt; {    // 接受到 CONNECT 转发来的 HTTPS 请求，并自定义返回内容    res.write(&#39;Proxy server is running.&#39;)    res.end();})httpServer.on(&#39;connect&#39;, (req, socket, upgradeHead) =&gt; {    // 利用 `NodeJS` 的 `net` 模块的 `Socket`，处理 CONNECT 请求    const socketClient = new net.Socket();    const urlObj = url.parse(&#39;https://&#39; + req.url); // CONNECT 只能拿到请求的域名和端口，拼接下再解析    let realport = urlObj.port || 443;    let realDomain = urlObj.hostname;    if (needProxy) {        // 转发到本地 HTTPS 服务        socketClient.connect(&#39;127.0.0.1&#39;, httpsPort, function() {            socket.write(&quot;HTTP/&quot; + req.httpVersion + &quot; 200 Connection established\r\n\r\n&quot;);        });    } else {        // 转发到真实服务器        socketClient.connect(realport, realDomain, function() {            socket.write(&quot;HTTP/&quot; + req.httpVersion + &quot; 200 Connection established\r\n\r\n&quot;);        });    }    socket.on(&#39;data&#39;, function(chunk) {        socketClient.write(chunk);    });    socket.on(&#39;end&#39;, function() {        socketClient.end();    });    socket.on(&#39;close&#39;, function() {        socketClient.end();    });    socket.on(&#39;error&#39;, function(err) {        socketClient.end();    });    // 返回给浏览器    socketClient.on(&#39;data&#39;, function(chunk) {        socket.write(chunk);    });    socketClient.on(&#39;end&#39;, function() {        socket.end();    });    socketClient.on(&#39;close&#39;, function() {        socket.end();    });    socketClient.on(&#39;error&#39;, function(err) {        socket.end();    });})</code></pre><p>不到 100 行代码，一个简单的 proxy 服务器已经搭建完成，支持 HTTP/HTTPS 代理，在这个基础上，完全可以进行再开发，比如代理规则的扩充，查看浏览器请求流，具体应用等。  </p><p>本文就写到这里，欢迎评论留言。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;web 开发的调试过程不可避免的涉及到代理的问题，当然现在很多工具都可以完成这项工作，比如 Win 下的 &lt;code&gt;Fiddler&lt;/code&gt;，Mac 下的 &lt;code&gt;Charles&lt;/code&gt;，今天我们来看一下怎么用 &lt;code&gt;NodeJS&lt;/code&gt; 完成这
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git相关</title>
    <link href="https://luoyefe.com/blog/2016/07/21/git%E7%9B%B8%E5%85%B3/"/>
    <id>https://luoyefe.com/blog/2016/07/21/git相关/</id>
    <published>2016-07-21T13:54:30.000Z</published>
    <updated>2023-05-24T09:56:27.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-开始"><a href="#git-开始" class="headerlink" title="git 开始"></a>git 开始</h2><ul><li><p><a href="https://git-scm.com/" target="_blank" rel="external">git 下载</a></p></li><li><p><a href="https://git-for-windows.github.io/" target="_blank" rel="external">git for windows</a></p></li></ul><h2 id="git-文章推荐"><a href="#git-文章推荐" class="headerlink" title="git 文章推荐"></a>git 文章推荐</h2><ul><li><p><a href="http://www.runoob.com/manual/git-guide/" target="_blank" rel="external">git 简明指南</a></p></li><li><p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰-Git教程</a></p></li><li><p><a href="https://git-scm.com/docs" target="_blank" rel="external">git 官方文档 - 所有命令</a></p></li><li><p><a href="http://www.cnblogs.com/fanfan259/p/4810517.html" target="_blank" rel="external">git 常用命令收集</a></p></li><li><p><a href="http://www.jianshu.com/p/104fa8b15d1e" target="_blank" rel="external">git flow 讲解</a></p></li><li><p><a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external">git flow 模型原文</a></p><blockquote><p>git flow 将是我们遵循的开发流程。当然，会根据具体业务做相应调整，但是原理不变</p></blockquote></li><li><p><a href="http://www.cnblogs.com/fanyong/p/3962455.html" target="_blank" rel="external">gitlab/github多账户管理ssh</a></p><blockquote><p>ssh 简单来说就是一种加密通信手段，服务器保存一段密文，你本地保存一段密文，互相通信就不再需要帐号密码</p><p>所以，在 git 中提交代码时，如果不想每次输入帐号密码，可以用 ssh 达到验证账户的目的</p></blockquote></li></ul><h2 id="git-图形化工具推荐"><a href="#git-图形化工具推荐" class="headerlink" title="git 图形化工具推荐"></a>git 图形化工具推荐</h2><blockquote><p>除了使用 git bash 用命令行的方式进行 git 操作，同样有很棒的图形化工具提高工作效率</p></blockquote><ul><li><p><a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">Source Tree</a>（需翻墙下载）</p><blockquote><p>前端群里有分享文件 1.8.3 版本</p></blockquote></li></ul><h2 id="git-其他"><a href="#git-其他" class="headerlink" title="git 其他"></a>git 其他</h2><ul><li><p><a href="http://learngitbranching.js.org/?demo" target="_blank" rel="external">git 动画演示</a></p></li><li><p><a href="http://onlywei.github.io/explain-git-with-d3/" target="_blank" rel="external">git 操作实时动画</a></p></li><li><p><a href="http://www.cnblogs.com/wicub/p/3646070.html" target="_blank" rel="external">githug</a>（git 小游戏）</p></li><li><p><a href="http://www.jianshu.com/p/482b32716bbe" target="_blank" rel="external">github 通关攻略</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git-开始&quot;&gt;&lt;a href=&quot;#git-开始&quot; class=&quot;headerlink&quot; title=&quot;git 开始&quot;&gt;&lt;/a&gt;git 开始&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>客服平台总结</title>
    <link href="https://luoyefe.com/blog/2016/07/13/%E5%AE%A2%E6%9C%8D%E5%B9%B3%E5%8F%B0%E6%80%BB%E7%BB%93/"/>
    <id>https://luoyefe.com/blog/2016/07/13/客服平台总结/</id>
    <published>2016-07-13T03:19:42.000Z</published>
    <updated>2023-05-24T09:56:27.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><p>Vue是一个构建数据驱动的 web 界面的库，也就是一个以 MVVM 为核心的库。  </p><h4 id="为什么选择Vue"><a href="#为什么选择Vue" class="headerlink" title="为什么选择Vue"></a>为什么选择Vue</h4><ul><li><p>简洁</p><p>  API 足够简洁明了，文档足够清晰有条理，上手难度足够低</p><p>  HTML 模板加上 JSON 数据，就是一个 Vue 实例。    </p></li><li><p>数据驱动</p><p>  DOM和数据绑定，对数据的操作自动追踪依赖的模板表达式，自动更新DOM。  </p><p>  例如，列表的渲染，只需给定一个数组，将这个数组绑定到列表的模板表达式上，数组的变化自动触发DOM的更新，无需手动维护DOM。  </p></li><li><p>组件化</p><p>  提供了一套完整的组件化开发方式，用解藕、可敷用的组件来构造界面，极大简化代码量的同时，对维护工作也相当友好。  </p><p>  例如，全局的 loading/alert/表单 组件、局部的表格组件，一处定义，多处复用，一处更改，全局同步。  </p></li><li><p>快速</p><p>  库内部对自动更新DOM的操作做了很多优化，内部ID排序，最小变更步骤等，和手动更新DOM相比，速度更快。  </p></li><li><p>轻量但不失强大</p><p>  Vue 本身只是一个关注 view 层的轻量化库，但是搭配官方出品的几个轻量库，能够完成相当复杂的 web 应用。  </p><p>  例如，客服平台中用到的 vue-router ，用来控制路由；vuex，用来集中式管理应用状态，控制 SPA 内数据流向。  </p></li><li><p>新技术的试验田</p><p>  Vue 足够灵活，能够完美的搭配前端中新兴的各种技术，加快开发效率，规范开发流程，减少人工操纵。  </p><p>  例如，客服平台中模块化的 js 开发方式，webpack 编译，NPM 管理依赖，sass 书写样式等，都能够融合进 vue 的开发体系中。  </p></li></ul><h4 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h4><ul><li><p><a href="http://cn.vuejs.org/" target="_blank" rel="external">Vue 文档</a></p></li><li><p><a href="http://router.vuejs.org/zh-cn/index.html" target="_blank" rel="external">Vue-router 文档</a></p></li><li><p><a href="http://vuex.vuejs.org/zh-cn/intro.html" target="_blank" rel="external">Vuex 文档</a></p></li></ul><h2 id="NodeJs-Npm"><a href="#NodeJs-Npm" class="headerlink" title="NodeJs/Npm"></a>NodeJs/Npm</h2><h4 id="NodeJs"><a href="#NodeJs" class="headerlink" title="NodeJs"></a>NodeJs</h4><p>NodeJs 虽然是一门后端语言，但是在前端工作中，利用 NodeJs 开发的一些工具能够极大简化我们的工作。  </p><p>例如，客服平台实现了一个简易的 web server，本地开发时以这个 web server 作为入口，可以很方便的访问接口，代理静态资源等。  </p><p>利用 NodeJs 开发的工具也能够完成自动化操作、构建等任务，这个将在下文的 webpack/gulp 部分具体讲述。</p><h4 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h4><p>NPM 是管理 NodeJs 开发依赖的工具，同样能够用在前端的开发工作中，大部分的开发依赖通过 NPM 来管理，杜绝手工管理依赖包，也能够很方便的控制依赖的版本。  </p><p>NPM 还提供一些便捷的 script 定义方式，在一个 NPM 项目下，会存在一个 <code>package.json</code> 文件，其中有一个字段为 <code>scripts</code> ，在这个字段中定义的 key ，可以通过 <code>npm run {key}</code> 来执行 value 中的命令。  </p><p>例如，在本地开发时，需要连接后台人员的机器，可以执行 <code>npm run localtest</code> 命令，而实际执行的命令是 <code>scripts</code> 字段中 <code>localtest</code> 对应的 <code>NODE_ENV=localtest gulp watch</code> 命令。  </p><p>这相当于为某些命令做了个缩写，但是在本项目中，由于环境变量定义方式不同，mac 环境可以直接执行 <code>npm run localtest</code> ，win 上只能执行具体的命令 <code>NODE_ENV=localtest gulp watch</code>。  </p><h4 id="相关文档-1"><a href="#相关文档-1" class="headerlink" title="相关文档"></a>相关文档</h4><ul><li><p><a href="http://nodejs.cn/api/" target="_blank" rel="external">NodeJs 文档</a></p></li><li><p><a href="https://docs.npmjs.com/" target="_blank" rel="external">NPM 文档</a></p></li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>客服平台对 NodeJs 的依赖不可或缺，开发人员必须安装 NodeJs ，建议版本 v4.2.4</p><h2 id="ES6-7"><a href="#ES6-7" class="headerlink" title="ES6/7"></a>ES6/7</h2><p>JavaScript 这门语言在以往的版本中存在着很多缺陷，比如没有类，没有标准的模块管理，没有统一的异步流程控制API，没有块级作用域赋值等等，但是在新版本中，这些都有了相应的解决方案，所以客服平台的开发，我们选择了 JS 的新标准 ES6 作为主要开发语言。  </p><p>本项目中用到的主要 ES6 新特性包括：  </p><ul><li>变量声明：let/const 命令</li><li>变量的结构赋值</li><li>模板字符串</li><li>箭头函数</li><li>模块管理：import/export</li><li>Promise 对象控制异步流程</li><li>其他的新API</li></ul><p><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">ES6 文档</a></p><h2 id="Webpack-Gulp"><a href="#Webpack-Gulp" class="headerlink" title="Webpack/Gulp"></a>Webpack/Gulp</h2><h4 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h4><p>上文提到，我们用了 Vue，用了 ES6，用了很多新特性新东西，但是对于浏览器来说，这些东西浏览器是没有办法直接运行的，所以需要有构建这一过程，我们选择了 webpack 这个工具。  </p><p>webpack 是一个灵活的模块打包工具，搭配不同的 plugin 和 loader 可以打包几乎所有 js 方言，css 方言，不同的模板文件，最后生成可供浏览器直接运行的 js 文件。  </p><p>客服平台的 webpack 配置在 <code>gulpfile.js</code> 文件的 <code>webpackConfig</code> 变量中，具体可以看代码。  </p><p><a href="http://webpack.github.io/docs/" target="_blank" rel="external">webpack 文档</a></p><h4 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h4><p>除了 webpack 用来打包构建之外，还有一些额外的自动化工作需要完成，比如图片的拷贝，静态资源更改 hash 值以控制缓存，打包四个环境不同的 bundle 包等，这一部分我们选择了 gulp 来完成。  </p><p>gulp 主要利用 NodeJs 文件流的概念在内存中操作文件，减少 IO 操作，能够更加快速的完成复杂的构建工作。  </p><p><a href="http://www.gulpjs.com.cn/docs/" target="_blank" rel="external">gulp 文档</a></p><h2 id="Sass-Jade"><a href="#Sass-Jade" class="headerlink" title="Sass/Jade"></a>Sass/Jade</h2><h4 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h4><p>一个 css 方言，提供了嵌套的书写方式，css 的变量定义，逻辑控制功能等。  </p><p>客服平台使用的是页面构建组提供的 sass 源码，最后使用 gulp 编译成浏览器可识别的 css。  </p><p><a href="http://sass.bootcss.com/docs/sass-reference/" target="_blank" rel="external">sass 文档</a></p><h4 id="Jade-Pug"><a href="#Jade-Pug" class="headerlink" title="Jade(Pug)"></a>Jade(Pug)</h4><p>HTML 模板引擎，页面构建组使用的 HTML 方言，用更加简洁的方式书写 HTML，也可以在 HTML 中加以逻辑，写出更加强大健壮的 HTML 模板。  </p><p>客服平台使用的是页面构建组提供的生成后的普通 HTML 文件。  </p><p>已更名为 Pug 。  </p><p><a href="http://jade-lang.com/" target="_blank" rel="external">pug 文档</a></p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>客服平台的所有代码，都托管在公司的 gitlab 上，项目地址是： <code>http://gitlab.intra.gomeplus.com/gomeplusFED/CSP</code>。  </p><p>配合 git ，我们完成了一套完整的开发发布流程。  </p><h2 id="Webscoket"><a href="#Webscoket" class="headerlink" title="Webscoket"></a>Webscoket</h2><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>WebSocket协议，代替原先http协议的1s轮询，能更好的节省服务器资源和带宽并达到实时通讯，本项目用于客服与买家的实时通讯聊天、表情、上传图片、接收图片音频视频。   </p><pre><code>```js// 创建一个Socket实例var socket = new WebSocket(&#39;ws://localhost:8080&#39;); // 打开Socket socket.onopen = function(event) {     // 发送一个初始化消息    socket.send(&#39;I am the client and I\&#39;m listening!&#39;);     // 监听消息    socket.onmessage = function(event) {         console.log(&#39;Client received a message&#39;,event);     };     // 监听Socket的关闭    socket.onclose = function(event) {         console.log(&#39;Client notified socket has closed&#39;,event);     };        // 监听Socket报错    socket.onerror = function(event) {         console.log(&#39;Client notified socket has error&#39;,event);     };     // 关闭Socket....     //socket.close() };```</code></pre><h4 id="断开重连机制"><a href="#断开重连机制" class="headerlink" title="断开重连机制"></a>断开重连机制</h4><ul><li><p>断网重连</p></li><li><p>关闭重连</p></li><li><p>异常重连</p></li><li><p>客服选择在线重连    </p></li></ul><p><a href="https://msdn.microsoft.com/library/hh673567.aspx" target="_blank" rel="external">Webscoket 文档</a></p><h2 id="业务详解"><a href="#业务详解" class="headerlink" title="业务详解"></a>业务详解</h2><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><pre><code>```shell├── src                             源码文件夹│   ├── font                            font 文件夹│   ├── img                             img 文件夹│   ├── css                             css 文件夹│   │   ├── app.scss                        样式主入口│   │   ├── common                          基础样式文件夹│   │   ├── module                          业务样式文件夹│   │   │   └── all.scss                        所有业务样式│   │   └── vendors                         第三方插件样式│   └── js                              js 文件夹│       ├── app.js                          app 入口文件 （定义路由表，启动项目，过滤ajax请求等）│       ├── debug.js                        debug 文件 （定义一些全局变量，在控制台直接调用）│       ├── base                            基础功能文件夹│       ├── component                       组件文件夹│       │   ├── app.vue                         入口组件 （组织全局组件，定义路由容器）│       │   ├── base                            全局组件 （alert、loading组件等）│       │   ├── common                          通用组件 （导航、时间选择器、头部、尾部等）│       │   ├── dashboard                       dashboard 路由下所有组件│       │   │   ├── account-manage.vue              账户管理│       │   │   ├── chat-record.vue                 聊天记录│       │   │   ├── common-msg.vue                  常用语│       │   │   ├── config.vue                      配置管理│       │   │   ├── index.vue                       首页│       │   │   └── password.vue                    修改密码│       │   ├── form                            通用表单组件│       │   ├── im                              im 路由下所有组件│       │   │   ├── common_msg.vue                  常用语│       │   │   ├── contacts.vue                    联系人│       │   │   ├── header.vue                      头部 │       │   │   ├── index.vue                       首页│       │   │   └── record.vue                      聊天记录│       │   └── login                           登陆组件│       ├── config                              配置文件│       │   ├── env                                 环境设置│       │   └── http.json                           AJAX 请求跟路径配置文件│       ├── directive                           指令文件夹│       ├── filter                              过滤器文件夹│       ├── store                               vuex 文件夹│       ├── util                                工具函数文件夹│       └── vendors                             第三方插件文件夹├── dist                            编译打包生成的dist文件├── app.babel.js                    node 执行文件入口 （babel引导）├── app.js                          web server 入口文件├── gulpfile.js                     gulp 配置文件├── index.html                      view 首页├── node_modules                    依赖文件夹 （npm install 后会出现）├── package.json                    依赖管理配置文件├── config.json                     项目配置文件├── README.md                       README├── .babelrc                        babel 配置文件├── .bin                            脚本文件夹 （格式化文件脚本）├── .gitignore                      git 忽略规则├── doc                             文档文件夹├── demo                            demo ├── ui                              页面构建组提供的 ui 文件夹├── development                     开发环境编译打包后产出目录├── test                            测试环境编译打包后产出目录├── pre-production                  预生产环境编译打包后产出目录└── production                      生产环境编译打包后产出目录```</code></pre><h4 id="业务结构划分"><a href="#业务结构划分" class="headerlink" title="业务结构划分"></a>业务结构划分</h4><ul><li><p>登录<br>  <code>/src/js/component/login/index.vue</code><br>  <code>/#!/login</code></p></li><li><p>欢迎页<br>  <code>/src/js/component/dashboard/index.vue</code><br>  <code>/#!/dashboard</code></p></li><li><p>用户管理<br>  <code>/src/js/component/dashboard/account-manage.vue</code><br>  <code>/#!/dashboard/account-manage</code></p></li><li><p>聊天记录查询<br>  <code>/src/js/component/dashboard/chat-record.vue</code><br>  <code>/#!/dashboard/chat-record</code></p></li><li><p>常用语<br>  <code>/src/js/component/dashboard/common-msg.vue</code><br>  <code>/#!/dashboard/common-msg</code></p></li><li><p>系统配置管理<br>  <code>/src/js/component/dashboard/config.vue</code><br>  <code>/#!/dashboard/config</code></p></li><li><p>修改密码<br>  <code>/src/js/component/dashboard/password.vue</code><br>  <code>/#!/dashboard/password</code></p></li><li><p>IM<br>  <code>/src/js/component/im/index.vue</code><br>  <code>/#!/im</code> </p></li></ul><h2 id="发布流程"><a href="#发布流程" class="headerlink" title="发布流程"></a>发布流程</h2><ul><li><p><code>git checkout dev</code> 切换到dev更新到最新版本</p></li><li><p><code>git checkout pre-release</code> 切换到pre-release分支</p></li><li><p><code>git merge dev</code> merge dev分支到pre-release分支</p></li><li><p><code>git checkout release</code> 切换到release 分支</p></li><li><p><code>git checkout pre-release ./src index.html package.json gulpfile.js</code> 将 <code>./src index.html package.json gulpfile.js</code> 等指定文件merge过来</p></li><li><p><code>npm run buildall</code>  生成开发、测试、预生产、生产四个环境的待发布包裹</p></li><li><p><code>git commit -am &quot;提交信息&quot;</code>  提交所有变动</p></li><li><p><code>git push origin release --force</code>  覆盖式推送到远程release分支</p></li><li><p>通知BS发布对应环境的包裹</p></li></ul><h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><ul><li><p><code>git clone http://gitlab.intra.gomeplus.com/gomeplusFED/CSP.git</code></p></li><li><p><code>cd CSP</code></p></li><li><p><code>npm install -d</code></p></li><li><p><code>npm run localdev</code> 本地开发，连接AMP平台</p></li><li><p><code>npm run localtest</code> 本地开发，连接后台人员本机</p></li><li><p><code>node app.babel.js</code> 开启本地静态资源服务</p></li><li><p><code>ifconfig(mac)\ipconfig(win)</code> 查看ip</p></li><li><p><code>http://</code> +  ip  +  <code>:1234/#!/login</code> 访问地址</p></li><li><p>可以通过修改 <code>/src/js/config/http.json</code> 文件改变各个环境地址   </p></li><li><p><code>http.json</code> 文件</p><pre><code class="line-numbers language-json">  {      &quot;localdev&quot;: &quot;http://10.69.205.26:9090/mock/5742c66eb094235129ee29b5&quot;,      &quot;localtest&quot;: &quot;http://10.125.2.43:6080/venus-crm-rest&quot;,      &quot;development&quot;:&quot;http://10.69.201.13:8080/venus-crm-rest&quot;,      &quot;test&quot;: &quot;http://10.125.2.43:6080/venus-crm-rest&quot;,      &quot;pre-production&quot;: &quot;http://10.125.2.10:8093/venus-crm-rest/&quot;,      &quot;production&quot;: &quot;http://10.125.139.206:8093/venus-crm-rest&quot;  }</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Vue&quot;&gt;&lt;a href=&quot;#Vue&quot; class=&quot;headerlink&quot; title=&quot;Vue&quot;&gt;&lt;/a&gt;Vue&lt;/h2&gt;&lt;p&gt;Vue是一个构建数据驱动的 web 界面的库，也就是一个以 MVVM 为核心的库。  &lt;/p&gt;
&lt;h4 id=&quot;为什么选择Vue&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的sublime配置</title>
    <link href="https://luoyefe.com/blog/2016/06/23/%E6%88%91%E7%9A%84sublime%E9%85%8D%E7%BD%AE/"/>
    <id>https://luoyefe.com/blog/2016/06/23/我的sublime配置/</id>
    <published>2016-06-23T02:10:51.000Z</published>
    <updated>2023-05-24T09:56:27.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能插件"><a href="#功能插件" class="headerlink" title="功能插件"></a>功能插件</h2><ul><li><p>Emmet</p><p>  写 <code>html</code> 的利器，不用多说</p></li><li><p>Babel  </p><p>  不仅能够识别更多的js方言，让sublime有正确的着色，而且能够支持ES6的语法提示等</p></li><li><p>HTML-CSS-JS Prettify</p><p>  支持 <code>html</code> <code>css</code> <code>js</code> 文件的格式化，快捷键 <code>command + shift + H</code></p></li><li><p>Markdown Preview</p><p>  markdown 预览</p></li><li><p>MarkdownEditing</p><p>  markdown 高亮</p></li></ul><h2 id="主题插件"><a href="#主题插件" class="headerlink" title="主题插件"></a>主题插件</h2><ul><li><p>Colorsublime</p><p>  非常多非常多的配色，使用方法，安装完成后， <code>ctl+shift+p</code> (Windows/Linux) 或者 <code>⇧+⌘+p</code> (OSX)，选择 <code>Colorsublime: Install Theme</code> 移动光标选择配色  </p><p>  <img src="https://packagecontrol.io/readmes/img/1cc8d20def6ff58d8311b67c5e791c20bc15aa6e.gif" alt=""></p></li><li><p>Theme - Soda  </p><p>  配色相当友好的主题，我的配置是 <code>&quot;theme&quot;: &quot;Soda Dark 3.sublime-theme&quot;</code></p></li><li><p>One Dark Color Scheme</p><p>  仿 Atom 的语法着色，完成度百分百</p></li></ul><h2 id="放几张图"><a href="#放几张图" class="headerlink" title="放几张图"></a>放几张图</h2><blockquote><p>代码<br><img src="./1.png" alt=""></p><p>Markdown<br><img src="./2.png" alt=""></p></blockquote><p>想开箱即用？打开 <code>Preferences -&gt; Browse Packages</code>，备份 <code>Packahes</code> 文件下的内容，在此文件夹打开命令行，执行 <code>git clone https://github.com/luoye-fe/sublimeTextConfig.git ./</code>，完成后打开 sublime 等待各种插件安装完成即可。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;功能插件&quot;&gt;&lt;a href=&quot;#功能插件&quot; class=&quot;headerlink&quot; title=&quot;功能插件&quot;&gt;&lt;/a&gt;功能插件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Emmet&lt;/p&gt;
&lt;p&gt;  写 &lt;code&gt;html&lt;/code&gt; 的利器，不用多说&lt;/p&gt;
&lt;/li&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js中的异步流程控制--Promise/Generator/Async/Await</title>
    <link href="https://luoyefe.com/blog/2016/06/09/js%E4%B8%AD%E7%9A%84%E5%BC%82%E6%AD%A5%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-Promise-Generators-Async-Await/"/>
    <id>https://luoyefe.com/blog/2016/06/09/js中的异步流程控制-Promise-Generators-Async-Await/</id>
    <published>2016-06-09T00:05:14.000Z</published>
    <updated>2023-05-24T09:56:27.580Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>长文预警 ～</p></blockquote><p>异步I/O、事件驱动使JS这个单线程语言在不阻塞的情况下可以并行的执行很多任务，这带来了性能的极大提升，并且更加符合人们的自然认识（烧一壶水，期间你肯定不会等着水烧开再去做别的事，异步才是正常的啊！）。然而异步风格也给流程控制，错误处理带来了更多的麻烦。</p><h3 id="一、回调"><a href="#一、回调" class="headerlink" title="一、回调"></a>一、回调</h3><p>回调是JS的基础，函数可以作为参数传递并在恰当的时机执行，比如有下面的三个函数：   </p><pre><code class="line-numbers language-js">f1();f2();f3();</code></pre><p>如果 <code>f1</code> 中存在异步操作，比如 <code>ajax</code> 请求，并且 <code>f2</code> 需要在 <code>f1</code> 执行完毕之后执行，那么可以使用回调的方式改写函数，如下：  </p><pre><code class="line-numbers language-js">var f1 = function(cb){    $.ajax({        url: &#39;...&#39;,        type: &#39;get&#39;,        success: function(){            cb &amp;&amp; cb();        }    })}var f2 = function(){      // do something after f1 complete ...}var f3 = function(){      // do something else}f1(f2);f3();</code></pre><p>使用这种方式， <code>f1</code> 的异步操作，不会阻碍程序的运行，并且可以很方便的控制函数的执行过程，显然，我要说但是了。如果你看到下面的代码，估计你不会觉得回调有那么美好了。  </p><pre><code class="line-numbers language-js">f1(function(err, data){    f2(function(err, data){        f3(function(err, data){            f4(function(err, data){                f5(function(err, data){                      f6(function(err, data){                        // maybe more ...                      })                })            })        })    })})</code></pre><p>WTF?!</p><p>可以看出，回调的缺点很明显，各个函数高度耦合，代码结构混乱，<code>debug</code> 困难，等等。  </p><h3 id="二、事件监听（观察者模式）"><a href="#二、事件监听（观察者模式）" class="headerlink" title="二、事件监听（观察者模式）"></a>二、事件监听（观察者模式）</h3><p>另一种解决异步流程控制的方法是采用事件监听的机制，某个事件的触发不再以某个时机为界限，而是取决于某个事件是否触发。  </p><pre><code class="line-numbers language-js">var f1 = function(){    setTimeout(function(){        Event.trigger(&#39;loaded&#39;, argvs);    }, 2000)}Event.on(&#39;loaded&#39;, function(argvs){    // do something ...})f1();</code></pre><p>唔，很美好的解决方案，但是观察者模式的缺点在其中也体现的很明显，事件的监听和触发散落在不同的地方，程序趋于复杂之后，<code>Event</code> 机制的复杂度也极大提高，明显这不是我们追求的。  </p><h3 id="三、异步流程控制库"><a href="#三、异步流程控制库" class="headerlink" title="三、异步流程控制库"></a>三、异步流程控制库</h3><p>为了优雅的解决异步流程控制的问题，伟大的猿们前赴后继，产出了很多方案，造就了不少优秀的库，包括但不限于 <code>q</code> <code>co</code> <code>async</code> 等。  </p><p>这些库的具体实现或使用方式不在本文的谈论范围，暂时跳过。  </p><h3 id="四、新标准、新未来"><a href="#四、新标准、新未来" class="headerlink" title="四、新标准、新未来"></a>四、新标准、新未来</h3><blockquote><p>重点来了！</p></blockquote><p>现在已经是2016年了，<code>ES</code> 的标准一代快过一代，有了 <code>bable</code> 这样的工具，甚至 <code>ES7</code> 都不再是不可触及的 <code>feture</code>了，新的标准当然对异步控制做出了很多努力，让我们一个一个来看。  </p><h4 id="1、Promise"><a href="#1、Promise" class="headerlink" title="1、Promise"></a>1、Promise</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="external">Promise - MDN</a></p><p>所谓的 <code>Promise</code> ，就是一个特殊的用于传递异步信息的对象，它代表一个未完成的但是将会完成的操作。也就是说，<code>Promise</code> 代表了某个未来才会知道结果的事件（通常是一个异步操作），并且为这个异步事件提供统一的 <code>API</code>，能够让使用者准确的控制异步操作的每一个流程。  </p><h6 id="a-基本理解"><a href="#a-基本理解" class="headerlink" title="a. 基本理解"></a>a. 基本理解</h6><ul><li><p>一个 <code>Promise</code> 对象，存在三种状态， <code>pending(进行中)</code>、<code>resolve(已完成)</code>、<code>reject(已失败)</code>。一个异步操作的开始，对应着 <code>Promise</code> 的 <code>pending</code> 状态，异步操作的结束，对应着另两种状态，当异步操作成功时，对应着 <code>resolve</code>状态，失败时对应着 <code>reject</code>状态。</p></li><li><p><code>Promise</code> 的状态如果发生改变，就不能再被更改，并且，只能由 <code>pending</code> 向另外两种状态转变，不能逆，也不能 <code>resolve</code> 和 <code>reject</code> 互相转化。  </p></li></ul><h6 id="b-基本-API"><a href="#b-基本-API" class="headerlink" title="b. 基本 API"></a>b. 基本 API</h6><ul><li><code>Promise.resolve()</code> </li><li><code>Promise.reject()</code></li><li><code>Promise.prototype.then()</code></li><li><code>Promise.prototype.catch()</code></li><li><code>Promise.all()</code></li><li><code>Promise.race()</code></li></ul><h6 id="c-详解"><a href="#c-详解" class="headerlink" title="c. 详解"></a>c. 详解</h6><ul><li><p>创建 <code>Promise</code> 实例</p><pre><code class="line-numbers language-js">  var promise = new Promise(function(resolve, reject){      // async operation ...      if( /* async operation success */ ){          resolve(value);      }else{          reject(err);      }  })</code></pre><p>  构造函数 <code>Promise</code> 接受一个函数作为参数，这个函数又有两个类型为方法的参数，<code>resolve</code> 、 <code>reject</code>。<code>resolve</code> 方法用来将 <code>promise</code> 从 <code>pending</code> 状态转换到 <code>resolve</code> 状态，并且将异步操作成功后返回的内容传递出去，<code>reject</code> 方法用来将 <code>promise</code> 从 <code>pending</code> 状态转换到 <code>reject</code> 状态，在异步操作失败时调用，并传递错误信息。  </p></li><li><p>调用</p><p>  <code>Promise</code> 实例创建后，可以调用 <code>then</code> 方法，处理异步操作成功或失败的状态。  </p><p>  <code>then</code> 方法接受两个函数参数，第一个即为创建 <code>Promise</code> 实例时的 <code>resolve</code> 函数，第二个则为创建 <code>Promise</code> 实例时的 <code>reject</code> 函数，用来分别处理异步操作成功，或失败的后续操作。当然，第二个用来处理失败的参数为可选参数。  </p><pre><code class="line-numbers language-js">  promise.then(function(value){      // async operation success  }, function(err){      // async operation failed  })</code></pre></li><li><p>示例1: <code>sleep</code> 函数</p><p>  在很多编程语言中，都有着 <code>sleep</code> 函数，延迟程序执行，<code>javascript</code> 中可以用 <code>setTimeout</code> 完成操作的延迟执行，但是还是需要使用回调的方式，现在让我们用 <code>Promise</code> 来实现。  </p><pre><code class="line-numbers language-js">  var sleep = function(ms){      return new Promise(function(resolve, reject){          setTimeout(resolve, ms);      })  }  // 休眠1000ms后执行  sleep(1000).then(function(){      console.log(&#39;1000s gone&#39;)  })</code></pre><p>  一个简单的休眠函数就完成了，调用更加方便，也更加直观。  </p></li><li><p>示例2: 异步 <code>Ajax</code> 请求</p><pre><code class="line-numbers language-js">  // 封装下原生 XMLHttpRequest 操作  var ajaxExample = function(params){      var promise = new Promise(function(resolve, reject){          var client = new XMLHttpRequest();          client.open(params.type, params.url);          client.onreadystatechange = handler;          client.send();          function handler() {              if (this.readyState !== 4) {                  return;              }              if (this.status === 200) {                  resolve(this.response);              } else {                  reject(new Error(this.statusText));              }          };      })      return promise;  }  // 调用  ajaxExample({      url: &#39;/test&#39;,      type: &#39;GET&#39;,      data: {          page: 2      }  }).then(function(res){      console.log(res)  }, function(err){      console.log(err)  })</code></pre></li><li><p><code>Promise.prototype.then()</code></p><p>  上面两个简单的示例，展示了 <code>Promise</code> 的基本使用方法，让我们再来看看具体的 <code>API</code>。  </p><p>  <code>then</code> 方法除了用于处理 <code>Promise</code> 实例的成功或失败操作，还会返回一个新的 <code>Promise</code> 实例，并且将返回值传递给下一层 <code>then</code> 方法，即：  </p><pre><code class="line-numbers language-js">  sleep(1000)      .then(function(){          console.log(&#39;1000s gone&#39;)          return &#39;123&#39;      })      .then(function(val){          console.log(val) // 123      })</code></pre><p>  这样来看，曾经使用多层嵌套的回调来控制异步流程的代码终于可以下岗了。</p></li><li><p><code>Promise.prototype.catch()</code></p><p>  在 <code>then</code> 方法中，第二个参数可以对当前 <code>Promise</code> 中的错误进行处理，为了统一的错误处理，<code>Promise</code> 也为我们提供了一个更加方便的错误处理方式。  </p><p>  当一个 <code>Promise</code> 实例转变为 <code>reject</code> 状态的时候，会调用 <code>catch</code> 中的回调函数，并且把首次 <code>reject</code> 的错误传递进去。  </p><pre><code class="line-numbers language-js">  var promise = new Promise(function(resolve, reject){      reject(&#39;error test&#39;);  })  promise.catch(function(err){      console.log(err); // error test  })</code></pre><p>  <code>catch</code> 能够捕获 <code>reject</code> 主动抛出的错误，同样也能捕获 <code>Promise</code> 运行中的错误。  </p><pre><code class="line-numbers language-js">  var promise = new Promise(function(resolve, reject){      throw new Error(&#39;error test&#39;);  })  promise.catch(function(err){      console.log(err); // Error: error test(…)  })</code></pre><p>  <code>catch</code> 捕获错误时具有冒泡属性，即在最后调用 <code>catch</code> 时，能够捕获到此前所有 <code>Promise</code> 中的错误。  </p><pre><code class="line-numbers language-js">  ajaxExample({      url: &#39;/test&#39;,      type: &#39;GET&#39;,      data: {          page: 2      }  }).then(function(res){      console.log(res)  }).catch(function(err){      // 处理前两个 Promise 中的错误  })</code></pre><p>  上面的示例中，最后的 <code>catch</code> 方法能够捕获到前两个 <code>Promise</code> 中任意一个产生的错误。  </p></li><li><p><code>Promise.all()</code></p><p>  <code>Promise.all</code> 方法用于将多个Promise实例，包装成一个新的Promise实例。  </p><pre><code class="line-numbers language-js">  var allPromise = Promise.all([p1, p2, p3])</code></pre><p>  <code>Promise.all</code> 接受一个由多个 <code>Promise</code> 实例组成的数组，如果数组中存在非 <code>Promise</code> 的示例，则 <code>allPromise</code> 的状态直接为 <code>reject</code>。  </p><p>  <code>allPromise</code> 的状态由 <code>p1/p2/p3</code> 共同决定，三个全部 <code>resolve</code> 则 <code>allPromise</code> 转变为 <code>resolve</code> ，其中任意一个出现 <code>reject</code> ，则 <code>allPromise</code> 转变为 <code>reject</code> 。  </p></li><li><p><code>Promise.race()</code></p><p>  <code>Promise.race</code> 方法同样用于将多个Promise实例，包装成一个新的Promise实例。  </p><pre><code class="line-numbers language-js">  var allPromise = Promise.all([p1, p2, p3])</code></pre><p>  与 <code>Promise.all</code> 不同的是，如果 <code>p1/p2/p3</code> 中有任意一个状态先发生了变化，则 <code>allPromise</code> 的状态也会跟着转变，并且状态与最先发生状态改变的 <code>promise</code> 一致。  </p></li></ul><h6 id="d-实际应用"><a href="#d-实际应用" class="headerlink" title="d. 实际应用"></a>d. 实际应用</h6><ul><li><p>图片加载</p><pre><code class="line-numbers language-js">  var preloadImg = function(url){      return new Promise(function(resolve, reject){          var img = new Image();          img.onload = resolve;          img.onerror = reject;          img.src = url;      })  }  // 调用  var img1 = preloadImg(&#39;./img/test1.png&#39;);  var img2 = preloadImg(&#39;./img/test2.png&#39;);  var img3 = preloadImg(&#39;./img/test3.png&#39;);  var img4 = preloadImg(&#39;./img/test4.png&#39;);  Promise      .all([img1, img2, img3, img4])      .then(function(){          // all img loaded          $(&#39;.loading&#39;).hide();      })      .catch(function(err){          // catch err          console.log(err);      })</code></pre></li><li><p><code>Promise</code> 风格的文件读写</p><pre><code class="line-numbers language-js">  var fs = require(&#39;fs&#39;);  var readFile = function(path){      return new Promise(function(resolve, reject){          fs.readFile(path, &#39;utf8&#39;, function(err, data) {              if(err) {                  reject(err);              } else {                  resolve(data);              }          });      })  }  var writeFile = function(path, data){      return new Promise(function(resolve, reject){          fs.writeFile(path, data, &#39;utf-8&#39;, function(err, data){              if(err){                  reject(err);              } else {                  resolve(data);              }          })      })  }  // 调用  readFile(&#39;./test.json&#39;)      .then(function(data){          console.log(data);          return data;      })      .then(function(data){          // replace all &#39;abc&#39; to &#39;ABC&#39;          writeFile(&#39;./test.json&#39;, data.replace(/abc/g, &#39;ABC&#39;));      })      .catch(function(err){          console.log(err);      })</code></pre></li></ul><h4 id="2、Generator"><a href="#2、Generator" class="headerlink" title="2、Generator"></a>2、Generator</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator" target="_blank" rel="external">Generator - MDN</a></p><p>想象这样的一个场景：  </p><blockquote><p>当你执行一个函数的时候，需要在某个时间点停下来等待另一个操作完成，并且拿到这个操作的执行结果，然后继续执行。</p></blockquote><p>这样的场景就是 <code>ES6</code> 的生成器需要解决的问题。  </p><h6 id="a-基本理解-1"><a href="#a-基本理解-1" class="headerlink" title="a. 基本理解"></a>a. 基本理解</h6><ul><li><p>生成器本质上是一种特殊的<a href="https://zh.wikipedia.org/wiki/%E8%BF%AD%E4%BB%A3" target="_blank" rel="external">迭代器</a>，迭代最简单的例子如下：  </p><pre><code class="line-numbers language-js">  for(var i = 0; i &lt; 10; i++){      // 每一次循环就是一次迭代，每次迭代都依赖上一次的 i 的值      console.log(i);  }</code></pre><p>  而生成器作为一种特殊的迭代器就是它的每一次迭代都是可控的，详情下面将具体描述。  </p></li><li><p>生成器形式上是一种函数，只不过比普通的函数 <code>function</code> 多一个 <code>*</code> ，即 <code>function*(){}</code>。  </p></li></ul><h6 id="b-基本API"><a href="#b-基本API" class="headerlink" title="b. 基本API"></a>b. 基本API</h6><ul><li><code>function*(){}</code></li><li><code>yield</code></li><li><code>Generator.prototype.next()</code></li><li><code>Generator.prototype.return()</code></li><li><code>Generator.prototype.throw()</code></li><li><code>yield*</code></li></ul><h6 id="c-详解-1"><a href="#c-详解-1" class="headerlink" title="c. 详解"></a>c. 详解</h6><ul><li><p><code>Generator</code> 函数</p><pre><code class="line-numbers language-js">  var test = function*(){      yield &#39;hello&#39;;      yield &#39;world&#39;;      yield &#39;!&#39;;      return &#39;func end&#39;;  }  var helloWorld = test();</code></pre><p>  上面的例子就是一个简单的 <code>Generator</code> 函数，可以发现，函数声明是多个一个 <code>*</code>，并且函数体内出现了多个 <code>yield</code> 语句和 <code>return</code> 语句，即该生成器函数存在四种迭代状态： <code>hello</code> <code>world</code> <code>!</code> <code>return</code></p><p>  但是当我们执行上述代码的时候，发现并没有即时的执行，返回的也不是它的执行结果，而是一个生成器对象，只有当调用这个生成器对象的 <code>next</code> 方法，才会依次的执行函数语句，直到遇到 <code>yield</code> 语句或 <code>return</code> 语句。  </p><pre><code class="line-numbers language-js">  helloWorld.next(); // {value: &quot;hello&quot;, done: false}  helloWorld.next(); // {value: &quot;world&quot;, done: false}  helloWorld.next(); // {value: &quot;!&quot;, done: false}  helloWorld.next(); // {value: &quot;func end&quot;, done: true}  helloWorld.next(); // {value: undefined, done: true}</code></pre><p>  <img src="./1.png" style="margin-left: 0;"></p><p>  让我们梳理一下上述代码的执行流程。  </p><p>  第一次调用 <code>next</code>： 生成器函数开始执行，遇到 <code>yield</code> 语句，暂停执行。<code>next</code> 返回一个对象，其中将当前 <code>yeild</code> 语句的值 <code>hello</code> 作为返回对象的 <code>value</code> 字段。<code>done</code> 字段为 <code>false</code>，迭代未结束。</p><p>  第二次调用 <code>next</code>： 从上一个 <code>yield</code> 语句开始执行，遇到 <code>yield</code> 语句，暂停执行。<code>next</code> 返回一个对象，其中将当前 <code>yeild</code> 语句的值 <code>world</code> 作为返回对象的 <code>value</code> 字段。<code>done</code> 字段为 <code>false</code>，迭代未结束。</p><p>  第三次调用 <code>next</code>： 从上一个 <code>yield</code> 语句开始执行，遇到 <code>yield</code> 语句，暂停执行。<code>next</code> 返回一个对象，其中将当前 <code>yeild</code> 语句的值 <code>!</code> 作为返回对象的 <code>value</code> 字段。<code>done</code> 字段为 <code>false</code>，迭代未结束。</p><p>  第四次调用 <code>next</code>： 从上一个 <code>yield</code> 语句开始执行，遇到 <code>return</code> 语句，结束执行。<code>next</code> 返回一个对象，其中将当前 <code>return</code> 语句的值 <code>func end</code> 作为返回对象的 <code>value</code> 字段。<code>done</code> 字段为 <code>true</code>，迭代结束。</p><p>  第五次调用 <code>next</code>： 生成器函数已经迭代（运行）完毕，<code>next</code> 方法始终返回 <code>{value: undefined, done: true}</code></p><p>  让我们再用一个例子来了解一下 <code>yield</code> 语句的执行流程：  </p><pre><code class="line-numbers language-js">  var gen = function*(){      console.log(&#39;func start&#39;);      var i = 0;      while(i &lt; 6){          console.log(&#39;yield start&#39;);          yield i;          console.log(&#39;yield end&#39;);           i++;      }      console.log(&#39;func end&#39;);  }  var genEx = gen();</code></pre><p>  <img src="./2.png" style="margin-left: 0;"></p><p>  首次调用 <code>next</code> ，函数开始执行，遇到 <code>yield</code> 暂停执行，将 <code>yield</code> 语句后的表达式运行后返回，当作 <code>next</code> 方法返回值的 <code>value</code> 字段，依次调用 <code>next</code> ，从上次 <code>yield</code> 处继续运行，直到遇到下一个 <code>yield</code>，循环往复。  </p></li><li><p><code>yield</code> 语句</p><p>  通过上面的例子， <code>yield</code> 语句的特性已经很明显：  </p><ul><li><p><code>yield</code> 语句会暂停生成器函数的执行</p></li><li><p><code>yield</code> 语句后表达式的运行结果将作为 <code>next</code> 语句返回值中的 <code>value</code> 字段</p></li></ul></li><li><p><code>Generator.prototype.next()</code></p><p>  <code>next</code> 语句的返回值有两个字段 <code>value</code> 和 <code>done</code> ，<code>value</code> 为当前 <code>next</code> 指向的 <code>yield</code> 语句的返回值，<code>done</code> 标识当前生成器函数是否迭代完毕。  </p><p>  <code>next</code> 方法还可以接受任意一个参数，该参数将作为上一个 <code>yield</code> 返回值。 </p><pre><code class="line-numbers language-js">  var gen = function*(i){      var i = 0;      while(true){          var reset = yield i;          if(reset){              i = reset;          }          i++;      }  }  var genEx = gen();  genEx.next();  // {value: 1, done: false}  genEx.next();  // {value: 2, done: false}  genEx.next(10);  // {value: 11, done: false}</code></pre><p>  上面的代码实现了一个无限的迭代器，在每次运行到 <code>yield</code> 语句时，如果调用指向此次 <code>yield</code> 语句的 <code>next</code> 方法没有参数，那么 <code>reset</code> 的值始终是 <code>undefined</code>。只有在调用 <code>next</code> 方法传入了参数，此次执行 <code>yield</code> 语句时，<code>yield</code> 语句的返回值将变为 <code>next</code> 传入的参数。这样的特性能够让我们用同步的方式写出异步执行的代码，具体例子下文。  </p></li><li><p><code>Generator.prototype.return()</code></p><p>  当我们想在外部结束生成器函数的迭代，可以使用 <code>return</code> 方法，并将 <code>return</code> 方法的参数作为返回值。  </p><pre><code class="line-numbers language-js">  var gen = function*(){      yield 1;      yield 2;      yield 3;  }  var genEx = gen();  genEx.next();  // {value: 1, done: false}  genEx.return(&#39;end&#39;);  // {value: &#39;end&#39;, done: true}  genEx.next();  // {value: undefined, done: true}</code></pre></li><li><p><code>Generator.prototype.return()</code></p><p>  <code>throw</code> 方法允许我们在生成器函数外部抛出错误，并在内部捕获。  </p><pre><code class="line-numbers language-js">  var gen = function*(){      try{          yield;      }catch(e){          console.log(&#39;inner error: &#39; + e);      }  }  var genEx = gen();  genEx.next();  try{      genEx.throw(&#39;a&#39;);      genEx.throw(&#39;b&#39;);  }catch(e){      console.log(&#39;outer error: &#39; + e);  }  // inner error: a  // outer error: b</code></pre><p>  第一次抛出错误，被生成器函数捕获到，第二次再抛出，由于 <code>catch</code> 语句已经在第一次执行过了，所以内部无法再次捕获错误，从而在外部的 <code>try catch</code> 语句中可以捕获到错误。  </p></li><li><p><code>yield*</code></p><p>  如果想在生成器函数中调用另一个生成器函数，将会用到 <code>yield*</code> 语句。  </p><pre><code class="line-numbers language-js">  var gen1 = function*(){      yield &#39;1&#39;;      yield &#39;2&#39;;  }  var gen2 = function*(){      yield &#39;a&#39;;      yield* gen1();      yield &#39;b&#39;;  }  var genEx = gen2();  genEx.next(); // {value: &quot;a&quot;, done: false}  genEx.next(); // {value: &quot;1&quot;, done: false}  genEx.next(); // {value: &quot;2&quot;, done: false}  genEx.next(); // {value: &quot;b&quot;, done: false}  genEx.next(); // {value: undefined, done: true}</code></pre></li></ul><h6 id="d-实际应用-1"><a href="#d-实际应用-1" class="headerlink" title="d. 实际应用"></a>d. 实际应用</h6><ul><li><p>异步 <code>Ajax</code> 请求</p><pre><code class="line-numbers language-js">  var gen = function*(url){      // fetch: 原生的ajax请求API      var result = yield fetch(url);      console.log(result);  }  var genEx = gen(&#39;https://api.github.com/users/github&#39;);  var result = genEx.next();  result.value.then(function(res){      console.log(res);      return res.json();  }).then(function(data){      genEx.next(data.bio);  // How people build software.  })</code></pre><p>  上面的代码中，第一次调用 <code>next</code> 方法，开始请求，拿到返回结果后，用结果中的 <code>value</code>（ <code>fetch</code> 返回的是一个 <code>Promise</code>，所以需要 <code>then</code> 方法调用），调用下一次 <code>then</code> 从而执行生成器函数中 <code>yield</code> 后面的代码。  </p><p>  可以看出，虽然生成器函数将异步操作表示的很简洁，但是流程管理并不是很直接，即何时执行第一阶段，何时执行第二阶段并不能很好的向使用者展示。  </p></li></ul><h4 id="3、Async-Await"><a href="#3、Async-Await" class="headerlink" title="3、Async/Await"></a>3、Async/Await</h4><p>从回调，到 <code>Promise</code>，再到 <code>Generator</code> 函数，js的异步流程控制一直在进化，但是每种解决方法都无形的增加了额外的复杂度，都需要理解底层的运行机制才能很好的运用。  </p><p>而 <code>ES7</code> 提出的 <code>Async/Await</code>，大概也许可能是 JavaScript 中最好的异步解决方案。  </p><h6 id="a-实例"><a href="#a-实例" class="headerlink" title="a. 实例"></a>a. 实例</h6><ul><li><p>异步读取文件</p><pre><code class="line-numbers language-js">  var fs = require(&#39;fs&#39;);  // 与上文一致  var readFile = function(path){      return new Promise(function(resolve, reject){          fs.readFile(path, &#39;utf8&#39;, function(err, data) {              if(err) {                  reject(err);              } else {                  resolve(data);              }          });      })  }  // 调用  var asyncReadFile = async function(){      var file1 = await readFile(&#39;./test1.json&#39;);      var file2 = await readFile(&#39;./test2.json&#39;);      console.log(file1);      console.log(file2);      }  asyncReadFile();</code></pre><p>  如果把上面的代码写成 <code>Geneerator</code> 风格，你会发现两者很相似。  </p><pre><code class="line-numbers language-js">  var asyncReadFile = function*(){      var file1 = yield readFile(&#39;./test1.json&#39;);      var file2 = yield readFile(&#39;./test2.json&#39;);      console.log(file1);      console.log(file2);      }</code></pre><p>  对比之后，其实 <code>async</code> 函数就是把 <code>*</code> 替换成 <code>async</code>，把 <code>yield</code> 替换成 <code>await</code>。  </p><p>  可以说，<code>async</code> 其实就是对 <code>Geneerator</code> 的语法糖，只不过多包了一层，改进了很多。  </p><p>  第一，使用 <code>async</code> 函数不用再手动的调用 <code>next</code> 方法来执行每一次迭代</p><p>  第二，更好的语义，<code>async</code> 表示这个函数是一个异步函数，<code>await</code> 表示此后的操作需要等待此步操作完成</p><p>  第三，侵入性更低，原生的 <code>try catch</code> 语句能处理错误，<code>async</code> 函数中的 <code>await</code> 语句不用做特殊处理，<code>Promise</code> 可以，原始的同步操作也可以  </p><p>  第四，更直观、更灵活的调用，<code>async</code> 函数返回的是一个 <code>Promise</code> 对象，异步操作完成后可以直接用 <code>then</code> 方法进行下一步操作  </p><p>  第五，简单的API，只有 <code>async</code> 和 <code>await</code> 两个API，<code>async</code> 用来声明一个异步函数，<code>await</code> 用来等待一个异步操作  </p></li><li><p><code>sleep</code> 函数</p><p>  上文我们用 <code>Promise</code> 实现了一个异步风格的 <code>sleep</code> 函数，现在让我们看看如何用同步的风格实现并使用它。  </p><pre><code class="line-numbers language-js">  var sleep = function(ms){      return new Promise(function(resolve, reject){          setTimeout(resolve, ms)      })  }  var sleepEx = async function(){      console.log(&#39;begin&#39;);      await sleep(1000);      console.log(&#39;end after 1000ms&#39;);  }  sleepEx();</code></pre><p>  完美～</p></li></ul><h6 id="b-如何使用"><a href="#b-如何使用" class="headerlink" title="b. 如何使用"></a>b. 如何使用</h6><p><code>async</code> <code>await</code> 特性属于ES7的新特性，目前的ES运行环境中并没有实现这样的功能，但是借助 <code>babel</code>，我们可以很方便的使用这些新特性。  </p><p>这个展开讲又是一个大话题～贴一个 <code>bable</code> 转换代码的网址：<a href="https://babeljs.io/repl/#?evaluate=true&amp;lineWrap=false&amp;presets=es2015%2Cstage-0" target="_blank" rel="external">Babel transform online</a>  </p><p>如何在线下使用，自行谷歌，或者，再来一篇？哈哈  </p><h3 id="五、结束"><a href="#五、结束" class="headerlink" title="五、结束"></a>五、结束</h3><p>长长的文章终于结束了，呼～  </p><p>主要的目的就是对异步流程的解决方案进行一下梳理，加深对js异步特性的理解。最推荐的方式还是ES7的新特性，毕竟是既有的新标准，使用的过程还能学习下 <code>babel</code> 的配置，哈哈。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;长文预警 ～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;异步I/O、事件驱动使JS这个单线程语言在不阻塞的情况下可以并行的执行很多任务，这带来了性能的极大提升，并且更加符合人们的自然认识（烧一壶水，期间你肯定不会等着水烧开再去做别的事，异步才是正常
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>会声会影安装与激活</title>
    <link href="https://luoyefe.com/blog/2016/06/05/%E4%BC%9A%E5%A3%B0%E4%BC%9A%E5%BD%B1%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB/"/>
    <id>https://luoyefe.com/blog/2016/06/05/会声会影安装与激活/</id>
    <published>2016-06-05T14:58:54.000Z</published>
    <updated>2023-05-24T09:56:27.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><a href="http://www.huishenghuiying.com.cn/xiazai.html#selctbuy" target="_blank" rel="external">会声会影下载</a></li><li><a href="https://hostr.co/file/FDp8MOYlRuHv/AppNee.com.Corel.X5-X9.All.Products.Universal.Keygen.7z?warning=on" target="_blank" rel="external">会声会影注册机下载</a></li></ul><h2 id="安装（x8版本）"><a href="#安装（x8版本）" class="headerlink" title="安装（x8版本）"></a>安装（x8版本）</h2><h4 id="1、找到下载好的以-exe-为结尾的安装文件，将后缀名改为-rar，然后打开此压缩包（不是解压，用360压缩等工具打开）"><a href="#1、找到下载好的以-exe-为结尾的安装文件，将后缀名改为-rar，然后打开此压缩包（不是解压，用360压缩等工具打开）" class="headerlink" title="1、找到下载好的以 .exe 为结尾的安装文件，将后缀名改为 .rar，然后打开此压缩包（不是解压，用360压缩等工具打开）"></a>1、找到下载好的以 <code>.exe</code> 为结尾的安装文件，将后缀名改为 <code>.rar</code>，然后打开此压缩包（不是解压，用360压缩等工具打开）</h4><h4 id="2、打开压缩包中的-setup-xml"><a href="#2、打开压缩包中的-setup-xml" class="headerlink" title="2、打开压缩包中的 setup.xml"></a>2、打开压缩包中的 <code>setup.xml</code></h4><ul><li>搜索 <code>SHOWSERIALDIALOG</code>，将其 <code>value</code> 改为 <code>true</code></li><li>搜索 <code>SERIALNUMBER</code>，将其 <code>value</code> 删除</li></ul><blockquote><p>修改前<br><img src="./1.png" alt=""></p><p>修改后<br><img src="./2.png" alt=""></p></blockquote><p>然后将 <code>.rar</code> 改回 <code>.exe</code></p><h4 id="3、断开网络链接"><a href="#3、断开网络链接" class="headerlink" title="3、断开网络链接"></a>3、断开网络链接</h4><h4 id="4、打开注册机，选择产品为-Corel-VideoStudio-Pro-Ulitime-X8"><a href="#4、打开注册机，选择产品为-Corel-VideoStudio-Pro-Ulitime-X8" class="headerlink" title="4、打开注册机，选择产品为 Corel VideoStudio Pro/Ulitime X8"></a>4、打开注册机，选择产品为 <code>Corel VideoStudio Pro/Ulitime X8</code></h4><p><img src="./3.png" alt=""></p><h4 id="5、双击打开安装包"><a href="#5、双击打开安装包" class="headerlink" title="5、双击打开安装包"></a>5、双击打开安装包</h4><ul><li><p>勾选接受协议，下一步<br><img src="./4.png" alt=""></p></li><li><p>要求输入序列号<br><img src="./5.png" alt=""></p></li><li><p>拷贝注册机中生成的序列号<br><img src="./6.png" alt=""></p></li><li><p>粘贴在输入框内，点击下一步<br><img src="./7.png" alt=""></p></li><li><p>位置默认，视频标准默认，安装位置自定义，点击立即安装，等待安装完成<br><img src="./8.png" alt=""></p></li></ul><h4 id="6、打开会声会影主程序，第一次打开会提示为试用版30天，有功能限制，无视。待程序打开后，关闭程序"><a href="#6、打开会声会影主程序，第一次打开会提示为试用版30天，有功能限制，无视。待程序打开后，关闭程序" class="headerlink" title="6、打开会声会影主程序，第一次打开会提示为试用版30天，有功能限制，无视。待程序打开后，关闭程序"></a>6、打开会声会影主程序，第一次打开会提示为试用版30天，有功能限制，无视。待程序打开后，关闭程序</h4><blockquote><p>这个地方有可能出现打开主程序提示试用版然后打不开软件的情况，此时，链接上网络，双击 <code>Corel FastFlick X8</code>，会出现提示注册的界面，输入邮箱进行注册，如下</p></blockquote><p><img src="./9.png" alt=""><br><img src="./10.png" alt=""></p><blockquote><p>点击下一步，完成后关闭页面</p></blockquote><ul><li>出现如下界面时，断开网络链接，根据箭头指示点击</li></ul><p><img src="./11.png" alt=""></p><p><img src="./12.png" alt=""></p><ul><li>在注册机中输入安装码（只能手工输入，注意连字符）<br><img src="./13.png" alt=""></li></ul><p><img src="./14.png" alt=""></p><ul><li>点击 <code>Generate Activation Code</code> 生成激活码<br><img src="./15.png" alt=""></li><li>复制生成好的激活码<br><img src="./16.png" alt=""></li><li>粘贴在安装程序激活码位置<br><img src="./17.png" alt=""></li><li>点击下一步完成激活<br><img src="./18.png" alt=""></li><li>链接网络，打开主程序，已成功激活<br><img src="./19.png" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;资源&quot;&gt;&lt;a href=&quot;#资源&quot; class=&quot;headerlink&quot; title=&quot;资源&quot;&gt;&lt;/a&gt;资源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.huishenghuiying.com.cn/xiazai.html#selctbuy&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack-workflow</title>
    <link href="https://luoyefe.com/blog/2016/05/24/webpack-workflow/"/>
    <id>https://luoyefe.com/blog/2016/05/24/webpack-workflow/</id>
    <published>2016-05-24T06:28:24.000Z</published>
    <updated>2023-05-24T09:56:27.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端工作流中要解决的问题"><a href="#前端工作流中要解决的问题" class="headerlink" title="前端工作流中要解决的问题"></a>前端工作流中要解决的问题</h2><ul><li>资源管理：模块化、组件化、依赖管理等</li><li>开发流程：dev、debug、proxy、build、deploy</li><li>周边工具：图形化界面、命令行辅助、自动化工程</li></ul><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><a href="http://webpack.github.io/" target="_blank" rel="external">webpack官网</a>  </li><li>Webpack 是当下最热门的前端资源模块化管理和打包工具。它  <ul><li>能把散碎的静态资源通过一定的规则打包在一起  </li><li>还可以require几乎所有的静态资源，包括但不限于CommonJs 模块、 AMD 模块、 ES6 模块、CSS、图片、 JSON、Coffeescript、 LESS、 Vue、 Jade、Ejs 等等  </li><li>还可以将代码切割成不同的chunk，实现按需加载，异步加载</li><li>还可以极精细的控制所有静态资源的版本  </li><li>还可以实现代码热替换，开发模式下，不用刷新浏览器，不用实时编译，自身的socket-io已经把内存中的代码换成最新的  </li><li>还可以 <code>SourceUrls</code> 和 <code>SourceMaps</code>，易于调试</li><li>还可以和前端最新的技术栈完美融合（Vue、React），针对这两个在webpack中有一整套的工具链  </li><li>还可以使用 <code>Plugin</code> 插件，实现各种定制化任务  </li><li>还可以和 <code>gulp/grunt</code> 等构建工具协同作战，完成极其复杂的任务  </li><li>还原生支持增量编译，发布代码再也不用等个好几分钟  </li></ul></li></ul><h2 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h2><ul><li><h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><p>  用 <code>webpack</code> 来做模块化，简直神器。  </p><p>  前端的模块化一直是一个很受人关注的问题，不同的加载器实现方式都不一样。<code>lithe/requireJs/seaJs</code>，这样的预加载器都有自己的一套实现方式，一定程度上解决了js的模块化问题，但是不同的实现方式，让我们不得不对不同的库做兼容性处理，让加载器能够识别，无疑增加了工作量和降低了模块的通用度。即使现在ES6提出了统一的标准，但是离实际使用还有很长的距离。  </p><p>  所以，有一个足够灵活，足够强大的模块加载器是个必要的选择。  </p><p>  在 <code>webpack</code> 中，同时支持 CommonJS、AMD和ES6，灵活性有保证。  </p><p>  并且在 <code>webpack</code> 的设计理念中，所有的静态资源都是模块，所以借助强大的 <code>loader</code> 系统几乎可以加载任意类型的静态资源，并且对模块的输出结果可以做非常精细的控制，根据不同的配置可以达到任意想要的结果。  </p><pre><code class="line-numbers language-js">  loaders: [{      test: /.js$/,      loader: &#39;jsx-loader?harmony&#39;  }, {      test: /.vue$/,      loader: &#39;vue-loader&#39;  },{      test: /.css$/,      loader: &#39;style-loader&#39;  },{      test: /\.(jpe?g|png|gif|svg)$/i,      loaders: [          &#39;image?{bypassOnDebug: true, progressive:true, optimizationLevel: 3, pngquant:{quality: &quot;65-80&quot;}}&#39;,          &#39;url?limit=10000&amp;name=img/[hash:8].[name].[ext]&#39;,      ]  }]</code></pre><p>  这是 <code>webpack</code> 配置文件中的 <code>loaders</code> 部分，其中，<code>test</code> 是正则匹配，匹配到的文件将使用相应的 <code>loader</code> 去解析，然后这些文件就成为了模块，可以在其它地方引用。比如：  </p><pre><code class="line-numbers language-js">  // a.js  // 加载js  var login = require(&#39;./src/js/conf/login/login.js&#39;);  // js文件会被webpack包装，并赋予单独ID，exports出去  // 加载css  require(&#39;./src/css/login.css&#39;);  // css文件会被以style标签插入到head中，当然，也可以通过ExtractTextPlugin这样的插件以link标签插入到页面中  // 加载图片  var btnImg = require(&#39;./src/img/btn.png&#39;);  var img = document.createElement(&#39;img&#39;);  img.src = btnImg;  // 根据上面的配置，小于10k的图片直接dataurl到src中，并且打包后自动添加hash值，当然，在js中引用，hash值部分也相应的会变化。  // 加载vue单文件组件  var loginCom = require(&#39;./src/js/components/login.vue&#39;);  // vue有单独的loader读取vue单文件组件  // 所有模块的加载可以做很多灵活的配置，比如，文件hash值、小于一定大小的图片dataurl、打包后文件命名等  // jade模版，ejs模版，less文件，sass文件都可以直接require，不用预编译，直接用！</code></pre></li><li><h3 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h3><p>  抛开现在流行的组件化解决方案，光以 <code>webpack</code> 的角度来看，如果模版，样式，脚本，都可以作为模块来引入，这就使得封装组件变的很简单。比如：  </p><pre><code class="line-numbers language-js">  // 搜索组件  // js/component/search/index.js  require(&#39;js/component/search/index.css&#39;);  var tpl = require(&#39;js/component/search/template.ejs&#39;);  var htmlStr = tpl({searchContent: options.searchStr});  var launchSearch = function(options){}  module.exports = {      launchSearch: launchSearch,      somethingelse: &#39;balabala&#39;  };</code></pre><p>  使用：  </p><pre><code class="line-numbers language-js">  // js/app.js  var searchComponent = require(&#39;js/component/search/index.js&#39;);  var options = {      searchStr: &#39;水果&#39;      // ...  }  searchComponent.launchSearch(options);</code></pre><p>  这样的开发方式无疑能够极大降低维护成本，当然，如果和现在流行的前端框架，如React、Vue结合起来实现组件化，代码组织会更加清晰，自由度也更高，展开讲又是一个大话题，按下不表。  </p><p>  还是贴一下伪代码吧。。以 <code>Vue</code> 为例  </p><pre><code class="line-numbers language-js">  // alert.vue  &lt;template&gt;      &lt;div class=&quot;alert&quot; v-show=&quot;alertConfig.show&quot; :class=&quot;alertConfig.type&quot; transition=&quot;fade&quot;&gt;          &lt;h4&gt;{{alertConfig.msg}}&lt;/h4&gt;      &lt;/div&gt;  &lt;/template&gt;  &lt;style&gt;  // css 样式  &lt;/style&gt;  &lt;script&gt;  var Vue = require(&#39;Vue&#39;);  var Alert = Vue.extend({      name: &#39;Alert&#39;,      prop: [&#39;alertConfig&#39;]  })  module.exports = Alert;  &lt;/script&gt;</code></pre><p>  使用  </p><pre><code class="line-numbers language-js">  // main.vue（同样是一个组件，可能被其它组件（如根组件）依赖）  &lt;templeate&gt;      &lt;m-alert :alert-config=&quot;alertConfig&quot;&gt;&lt;/m-alert&gt;  &lt;/template&gt;  &lt;script&gt;  var Vue = require(&#39;Vue&#39;);  var Alert = require(&#39;alert.vue&#39;);  var Main = Vue.extend({      name: &#39;Main&#39;,      data: function(){          return {              alertConfig: {                  show: false,                  type: &#39;info&#39;, // info/success/warning/erro                  msg: &#39;提示信息&#39;              }          }      },      components: {          &#39;m-alert&#39;: Alert      }  })  module.exports = Main;  &lt;/script&gt;</code></pre><p>  这样的 <code>.vue</code> 组件通过 <code>webpack</code> 中的 <code>vue-loader</code> 插件就可以完成打包。  </p></li></ul><ul><li><h3 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h3><p>  没有什么好说的。。。<code>npm</code>。<br>  毕竟绝大部分的流行库都在 <code>npm</code> 上，也都支持模块加载的方式。不排除有一些纯js库（jq插件）需要手动封装下。其实也很简单，如果都遵循 <code>CommonJs</code> 的加载方式，而且其中没有其它依赖的话，直接 <code>require</code> 即可，如果有依赖，大部分也是 <code>jq</code> 等，在文件最前面声明下 <code>var $ = require(&#39;jQuery&#39;)</code> 即可。<br>  这样，一个工程只需要维护一份 <code>package.json</code> ，不管是开发用的包，还是构建用的包都可以统一管理。  </p></li></ul><h2 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h2><p>对于前端的开发流程，一直的想法是，我们能有一个统一的入口工具，不管是命令行还是图形化界面，可以把调试，代理，构建等一系列操作整合起来，并且尽可能的简化这样的操作，开发不用过多的关注构建问题，也不用为调试、构建浪费更多的精力。</p><ul><li><h3 id="dev、debug"><a href="#dev、debug" class="headerlink" title="dev、debug"></a>dev、debug</h3><p>  基于 <code>webpack</code> 的开发流程主要有两种方式：  </p><ul><li><p><code>webpack</code> 的实时构建模式  </p><p>  <code>webpack --watch</code> 每次修改代码都会实时的构建，增量的，很快，即使是用了 <code>uglify</code> 实时构建压缩也很快（不超过1s）  </p></li><li><p><code>webpack-dev-server</code>  </p><p>  <code>webpack-dev-server</code> 是一个小型的 <code>express</code> 服务器，它的原理就是使用 <code>webpack-dev-middleware</code> 中间件来为通过 <code>webpack</code> 生成的静态资源提供web服务。它的内部通过 <code>socket.io</code> 连接客户端，可以实时发送编译状态的信息到客户端，从而达到客户端代码的实时热更新，也就是 <code>HMR</code> <code>Hot Module Replacement</code>。  </p><p>  <code>webpack-dev-server</code> 支持命令行模式和 <code>NodeJs</code> 模式，命令行模式就是直接打开 <code>webpack-dev-server</code> 本地服务器，参数默认，配置灵活性稍低，但是简单快捷，如下：  </p><pre><code>  // --line 行内模式 | --hot 热替换  webpack-dev-server --line --hot</code></pre><p>  在项目根目录行执行上面的命令之后，本地的 <code>webpack-dev-server</code> 服务器已经启动，此目录下的由 <code>webpack</code> 生成的静态资源都将被这个本地服务器托管。  </p><p>  以 GoH5 为例，把页面内引用的资源改为 <code>8080</code> 端口下对应的文件并加入 <code>http://localhost:8080/webpack-dev-server.js</code>，此时代码热更新已经生效：  </p><pre><code class="line-numbers language-html">  &lt;!DOCTYPE html&gt;  &lt;html&gt;  &lt;head&gt;      &lt;meta charset=&quot;utf-8&quot;&gt;      &lt;meta name=&quot;description&quot; content=&quot;GoH5，一款可视化的H5编辑器，拖拽、动画、事件，神奇的H5。&quot;&gt;      &lt;meta name=&quot;keywords&quot; content=&quot;H5,可视化,cms,编辑器&quot;&gt;      &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;      &lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;      &lt;title&gt;Go H5&lt;/title&gt;      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/back/dist/css/goh5.min.css?ver=1.0.3&quot;/&gt;  &lt;/head&gt;  &lt;body&gt;      &lt;div id=&quot;app&quot;&gt;          &lt;router-view&gt;&lt;/router-view&gt;      &lt;/div&gt;      &lt;script src=&quot;http://localhost:8080/webpack-dev-server.js&quot;&gt;&lt;/script&gt;      &lt;script type=&quot;text/javascript&quot; src=&quot;http://localhost:8080/vendor.min.js?ver=1.0.3&quot;&gt;&lt;/script&gt;      &lt;script type=&quot;text/javascript&quot; src=&quot;http://localhost:8080/goh5.min.js?ver=1.0.3&quot;&gt;&lt;/script&gt;  &lt;/body&gt;  &lt;/html&gt;  // 因为我的应用服务启动在 3030 端口，所以这里的地址写了绝对地址，如果同端口，直接写文件名即可</code></pre><p>  在控制台可以看到  </p><pre><code>  [HMR] Vue component hot reload shim applied. // 不同的热重载提示信息不同（Vue/React）  [WDS] Hot Module Replacement enabled.</code></pre><p>  如果本地修改了代码可以看到  </p><pre><code>  [WDS] App updated. Recompiling...  [WDS] App hot update...</code></pre><p>  同时，控制台也会输出相关的编译信息：  </p><p>  <img src="./1.png" alt="控制台"></p><p>  一个字。。。快。。。而且，浏览器并不用刷新呀 (有一定限定条件，并不是一切代码都可以热重载)  </p><p>  放一张官网的gif  </p><p>  <img src="http://blog.evanyou.me/images/vue-hot.gif" alt="hot-reload"></p><p>  上面的例子主要集中在Vue上，其实大同小异，并且 <code>webpack</code> 提供了 <code>webpack-dev-middleware</code> 中间件，可以定制一个本地的服务，完成很多任务。</p></li></ul></li></ul><h4 id="所以我觉得，前端的开发流程如果有一个统一的本地服务，可能性无极限。"><a href="#所以我觉得，前端的开发流程如果有一个统一的本地服务，可能性无极限。" class="headerlink" title="所以我觉得，前端的开发流程如果有一个统一的本地服务，可能性无极限。"></a><strong>所以我觉得，前端的开发流程如果有一个统一的本地服务，可能性无极限。</strong></h4><ul><li><h3 id="proxy"><a href="#proxy" class="headerlink" title="proxy"></a>proxy</h3><p>  线上代码的代理调试，借助 <code>host</code>，借助 <code>Fiddler</code>，借助 <code>wamp</code>，其实。。  </p><pre><code class="line-numbers language-js">  // webpack.config.js  {      devServer: {          proxy: {              &#39;/some/path*&#39;: {                  target: &#39;https://js.meixincdn.com&#39;,                  secure: false,              },          },      },  }</code></pre><p>  当然，这样的代理不够灵活，而且不能代理html，但是如果借助本地的服务，我们可以这么做   </p><pre><code class="line-numbers language-js">  // 先行配置host，可以手动，也可以像 `fd-server` 有个图形化界面，然后    var koa = require(&#39;koa&#39;);  var proxy = require(&#39;koa-proxy&#39;);  var app = koa();  app.use(proxy({        host: &#39;https://localhost:8080/&#39;,        match: /\/js.meixincdn.com\//  }));</code></pre><p>  上面达到的功能就是把 <code>js.meixincdn.com</code> 域名的资源转发到 <code>webpack-dev-server</code> ，然后就可以愉快的开始开发了  </p></li></ul><ul><li><h3 id="build、deploy"><a href="#build、deploy" class="headerlink" title="build、deploy"></a>build、deploy</h3><p>  这一块我的想法还是，放到测试机上去。。  </p><p>  测试机上可以跑一个 <code>gulp watch</code> 和 <code>webpack --watch</code> 的任务，本地提交了 <code>src</code> 目录下的文件，测试机检测到文件更新，直接编译，这样的编译都是增量的，肯定很快，然后再该怎么上线怎么上线，怎么发布怎么发布。本地就可以直接忽略 <code>dist</code> 目录的改变，不提交其中的内容。  </p><p>  还有一点，我是觉得 php 的 smarty 模版可以前端维护，就算不行，静态资源那一块也一定前端维护，这样不管是改时间戳还是直接hash，都很灵活啊～  </p></li></ul><h2 id="周边工具"><a href="#周边工具" class="headerlink" title="周边工具"></a>周边工具</h2><p>图形化界面、命令行辅助、自动化工程，高大上的整套解决方案，想想就激动。。。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前端工作流中要解决的问题&quot;&gt;&lt;a href=&quot;#前端工作流中要解决的问题&quot; class=&quot;headerlink&quot; title=&quot;前端工作流中要解决的问题&quot;&gt;&lt;/a&gt;前端工作流中要解决的问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;资源管理：模块化、组件化、依赖管理等&lt;/li&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用 webpack 构建 node 后端代码，使其支持 js 新特性并实现热重载</title>
    <link href="https://luoyefe.com/blog/2016/04/12/use-webpack-in-your-node-app/"/>
    <id>https://luoyefe.com/blog/2016/04/12/use-webpack-in-your-node-app/</id>
    <published>2016-04-12T09:52:18.000Z</published>
    <updated>2023-05-24T09:56:27.592Z</updated>
    
    <content type="html"><![CDATA[<p>webpack 在前端领域的模块化和代码构建方面有着无比强大的功能，通过一些特殊的配置甚至可以实现前端代码的实时构建、ES6/7新特性支持以及热重载，这些功能同样可以运用于后台 nodejs 的应用，让后台的开发更加顺畅，服务更加灵活，怎么来呢？往下看。</p><p>先梳理下我们将要解决的问题：</p><ul><li>node端代码构建</li><li>ES6/7 新特性支持</li><li>node服务代码热重载</li></ul><h2 id="node端代码构建"><a href="#node端代码构建" class="headerlink" title="node端代码构建"></a>node端代码构建</h2><p>node端的代码其实是不用编译或者构建的，整个node的环境有它自己的一个模块化或者依赖机制，但是即使是现在最新的node版本，对ES6/7的支持还是捉襟见肘。当然使用一些第三方库可以做到支持类似 <code>async/await</code> 这样的语法，但是毕竟不是规范不是标准，这样看来，node端的代码还是有构建的需要的。这里我们选取的工具就是 <code>webpack</code> 以及它的一些 <code>loader</code>。   </p><p>首先，一个 <code>node app</code> 必定有一个入口文件 <code>app.js</code> ，按照 <code>webpack</code> 的规则，我们可以把所有的代码打包成一个文件 <code>bundle.js</code> ，然后运行这个 <code>bundle.js</code> 即可，<code>webpack.config.js</code> 如下：   </p><pre><code class="line-numbers language-js">var webpcak = require(&#39;webpack&#39;);module.exports = {    entry: [        &#39;./app.js&#39;    ],    output: {        path: path.resolve(__dirname, &#39;build&#39;),        filename: &#39;bundle.js&#39;    }}</code></pre><p>但是有一个很严重的问题，这样打包的话，一些 <code>npm</code> 中的模块也会被打包进这个 <code>bundle.js</code>，还有 <code>node</code> 的一些原生模块，比如 <code>fs/path</code> 也会被打包进来，这明显不是我们想要的。所以我们得告诉 <code>webpack</code>，你打包的是 <code>node</code> 的代码，原生模块就不要打包了，还有 <code>node_modules</code> 目录下的模块也不要打包了，<code>webpack.config.js</code> 如下：   </p><pre><code class="line-numbers language-js">var webpcak = require(&#39;webpack&#39;);var nodeModules = {};fs.readdirSync(&#39;node_modules&#39;)    .filter(function(x) {        return [&#39;.bin&#39;].indexOf(x) === -1;    })    .forEach(function(mod) {        nodeModules[mod] = &#39;commonjs &#39; + mod;    });module.exports = {    entry: [        &#39;./app.js&#39;    ],    output: {        path: path.resolve(__dirname, &#39;build&#39;),        filename: &#39;bundle.js&#39;    },    target: &#39;node&#39;,    externals: nodeModules}</code></pre><p>主要就是在 <code>webpack</code> 的配置中加上 <code>target: &#39;node&#39;</code> 告诉 <code>webpack</code> 打包的对象是 <code>node</code> 端的代码，这样一些原生模块 <code>webpack</code> 就不会做处理。另一个就是 <code>webpack</code> 的 <code>externals</code> 属性，这个属性的主要作用就是告知 <code>webpack</code> 在打包过程中，遇到 <code>externals</code> 中声明的模块不用处理。  </p><p>比如在前端中， <code>jQuery</code> 的包通过 CDN 的方式以 <code>script</code> 标签引入，如果此时在代码中出现 <code>require(&#39;jQuery&#39;)</code> ，并且直接用 <code>webpack</code> 打包比定会报错。因为在本地并没有这样的一个模块，此时就必须在 <code>externals</code> 中声明 <code>jQuery</code> 的存在。也就是 <code>externals</code> 中的模块，虽然没有被打包，但是是代码运行是所要依赖的，而这些依赖是直接存在在整个代码运行环境中，并不用做特殊处理。  </p><p>在 <code>node</code> 端所要做的处理就是过滤出 <code>node_modules</code> 中所有模块，并且放到 <code>externals</code>中。  </p><p>这个时候我们的代码应该可以构建成功了，并且是我们期望的形态，但是不出意外的话，你还是跑不起来，因为有不小的坑存在，继续往下看。   </p><ul><li><p>坑1：<code>__durname</code> <code>__filename</code> 指向问题</p><blockquote><p>打包之后的代码你会发现 <code>__durname</code> <code>__filename</code> 全部都是 <code>/</code> ，这两个变量在 <code>webpack</code> 中做了一些自定义处理，如果想要正确使用，在配置中加上  </p><pre><code class="line-numbers language-js">context: __dirname,node: {  __filename: false,  __dirname: false},</code></pre></blockquote></li><li><p>坑2：动态 <code>require</code> 的上下文问题</p><blockquote><p>这一块比较大，放到后面讲，跟具体代码有关，和配置无关  </p></blockquote></li><li><p>坑n：其它的还没发现，估摸不少，遇到了谷歌吧…</p></li></ul><h2 id="ES6-7-新特性支持"><a href="#ES6-7-新特性支持" class="headerlink" title="ES6/7 新特性支持"></a>ES6/7 新特性支持</h2><p>构建 <code>node</code> 端代码的目标之一就是使用ES6/7中的新特性，要实现这样的目标 <code>babel</code> 是我们的不二选择。  </p><p>首先，先安装 <code>babel</code> 的各种包 <code>npm install babel-core babel-loader babel-plugin-transform-runtime babel-preset-es2015 babel-preset-stage-0 --save-dev json-loader -d</code>  </p><p>然后修改 <code>webpack.config.js</code> ，如下：</p><pre><code class="line-numbers language-js">var webpcak = require(&#39;webpack&#39;);var nodeModules = {};fs.readdirSync(&#39;node_modules&#39;)    .filter(function(x) {        return [&#39;.bin&#39;].indexOf(x) === -1;    })    .forEach(function(mod) {        nodeModules[mod] = &#39;commonjs &#39; + mod;    });module.exports = {    entry: [        &#39;./app.js&#39;    ],    output: {        path: path.resolve(__dirname, &#39;build&#39;),        filename: &#39;bundle.js&#39;    },    target: &#39;node&#39;,    externals: nodeModules,    context: __dirname,    node: {        __filename: false,        __dirname: false    },    module: {        loaders: [{            test: /\.js$/,            loader: &#39;babel-loader&#39;,            exclude: [                path.resolve(__dirname, &quot;node_modules&quot;),            ],            query: {                plugins: [&#39;transform-runtime&#39;],                presets: [&#39;es2015&#39;, &#39;stage-0&#39;],            }        }, {            test: /\.json$/,            loader: &#39;json-loader&#39;        }]    },    resolve: {        extensions: [&#39;&#39;, &#39;.js&#39;, &#39;.json&#39;]    }}</code></pre><p>主要就是配置 <code>webpack</code> 中的 <code>loader</code> ，借此来编译代码。  </p><h2 id="node服务代码热重载"><a href="#node服务代码热重载" class="headerlink" title="node服务代码热重载"></a>node服务代码热重载</h2><p><code>webpack</code> 极其牛叉的地方之一，开发的时候，实时的构建代码，并且，实时的更新你已经加载的代码，也就是说，不用手动去刷新浏览器，即可以获取最新的代码并执行。  </p><p>这一点同样可以运用在 <code>node</code> 端，实现即时修改即时生效，而不是 <code>pm2</code> 那种重启的方式。  </p><p>首先，修改配置文件，如下： </p><pre><code class="line-numbers language-js">entry: [    &#39;webpack/hot/poll?1000&#39;,    &#39;./app.js&#39;],// ...plugins: [    new webpack.HotModuleReplacementPlugin()]</code></pre><p>这个时候，如果执行 <code>webpack --watch &amp; node app.js</code> ，你的代码修改之后就可以热重载而不用重启应用，当然，代码中也要做相应改动，如下：  </p><pre><code class="line-numbers language-js">var hotModule = require(&#39;./hotModule&#39;);// do something else// 如果想要 hotModule 模块热重载if (module.hot) {    module.hot.accept(&#39;./hotModule.js&#39;, function() {        var newHotModule = require(&#39;./hotModule.js&#39;);        // do something else    });}</code></pre><p>思路就是，如果需要某模块热重载，就把它包一层，如果修改了，<code>webpack</code> 重新打包了，重新 <code>require</code> 一遍，然后代码即是最新的代码。  </p><p>当然，如果你在某个需要热重载的模块中又依赖另一个模块，或者说动态的依赖了另一个模块，这样的模块并不会热重载。   </p><h2 id="webpack-动态-require"><a href="#webpack-动态-require" class="headerlink" title="webpack 动态 require"></a>webpack 动态 require</h2><p>动态 <code>require</code> 的场景包括：  </p><ul><li><p>场景一：在代码运行过程中遍历某个目录，动态 <code>reauire</code>，比如  </p><pre><code class="line-numbers language-js">  //app.js  var rd = require(&#39;rd&#39;);  // 遍历路由文件夹，自动挂载路由  var routers = rd.readFileFilterSync(&#39;./routers&#39;, /\.js/);  routers.forEach(function(item) {      require(item);  })</code></pre><p>  这个时候你会发现 <code>&#39;./routers&#39;</code> 下的require都不是自己想要的，然后在 <code>bundle.js</code> 中找到打包之后的相应模块后，你可以看到，动态 <code>require</code> 的对象都是 <code>app.js</code> 同级目录下的 <code>js</code> 文件，而不是 <code>&#39;./routers&#39;</code> 文件下的 <code>js</code> 文件。为什么呢？  </p><p>  <code>webpack</code> 在打包的时候，必须把你可能依赖的文件都打包进来，并且编上号，然后在运行的时候 <code>require</code> 相应的模块 <code>ID</code> 即可，这个时候 <code>webpack</code> 获取的动态模块，就不再是你指定的目录 <code>&#39;./routers&#39;</code> 了，而是相对于当前文件的目录，所以，必须修正 <code>require</code> 的上下文，修改如下：  </p><pre><code class="line-numbers language-js">  // 获取正确的模块  var req = require.context(&quot;./routers&quot;, true, /\.js$/);  var routers = rd.readFileFilterSync(&#39;./routers&#39;, /\.js/);  routers.forEach(function(item) {      // 使用包涵正确模块的已经被修改过的 `require` 去获取模块      req(item);  })</code></pre></li><li><p>场景二：在 <code>require</code> 的模块中含有变量，比如  </p><pre><code class="line-numbers language-js">  var myModule = require(isMe ? &#39;./a.js&#39; : &#39;./b.js&#39;);  // 或者  var testMoule = require(&#39;./mods&#39; + name + &#39;.js&#39;);</code></pre><p>  第一种的处理方式在 <code>webpack</code> 中的处理是把模块 <code>./a.js</code> <code>./b.js</code> 都包涵进来，根据变量不同 <code>require</code> 不同的模块。  </p><p>  第二种的处理方式和场景一类似，获取 <code>./mods/</code> 目录下的所有模块，然后重写了 <code>require</code> ，然后根据变量不同加载不通的模块，所以自己处理的时候方法类似。  </p></li></ul><h2 id="用-ES6-7-写-webpack-config-js"><a href="#用-ES6-7-写-webpack-config-js" class="headerlink" title="用 ES6/7 写 webpack.config.js"></a>用 ES6/7 写 webpack.config.js</h2><p>项目都用 ES6/7 了，配置文件也必须跟上。  </p><p>安装好 <code>babel</code> 编译所需要的几个依赖包，然后把 <code>webpack.config.js</code> 改为 <code>webpack.config.babel.js</code> ，然后新建 <code>.babelrc</code> 的 <code>babel</code> 配置文件，加入  </p><pre><code class="line-numbers language-json">{  &quot;presets&quot;: [&quot;es2015&quot;]}</code></pre><p>然后和往常一样执行 <code>webpack</code> 的相关命令即可。</p><p>完整 <code>webpack.config.babel.js</code> 如下：   </p><pre><code class="line-numbers language-js">import webpack from &#39;webpack&#39;;import fs from &#39;fs&#39;;import path from &#39;path&#39;;let nodeModules = {};fs.readdirSync(&#39;node_modules&#39;)    .filter((x) =&gt; {        return [&#39;.bin&#39;].indexOf(x) === -1;    })    .forEach((mod) =&gt; {        nodeModules[mod] = &#39;commonjs &#39; + mod;    });export default {    cache: true,    entry: [        &#39;webpack/hot/poll?1000&#39;,        &#39;./app.js&#39;    ],    output: {        path: path.resolve(__dirname, &#39;build&#39;),        filename: &#39;bundle.js&#39;    },    context: __dirname,    node: {        __filename: false,        __dirname: false    },    target: &#39;node&#39;,    externals: nodeModules,    module: {        loaders: [{            test: /\.js$/,            loader: &#39;babel-loader&#39;,            exclude: [                path.resolve(__dirname, &quot;node_modules&quot;),            ],            query: {                plugins: [&#39;transform-runtime&#39;],                presets: [&#39;es2015&#39;, &#39;stage-0&#39;],            }        }, {            test: /\.json$/,            loader: &#39;json-loader&#39;        }]    },    plugins: [        new webpack.HotModuleReplacementPlugin()    ],    resolve: {        extensions: [&#39;&#39;, &#39;.js&#39;, &#39;.json&#39;]    }}</code></pre><p>大致流程就是如此，坑肯定还有，遇到的话手动谷歌吧～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;webpack 在前端领域的模块化和代码构建方面有着无比强大的功能，通过一些特殊的配置甚至可以实现前端代码的实时构建、ES6/7新特性支持以及热重载，这些功能同样可以运用于后台 nodejs 的应用，让后台的开发更加顺畅，服务更加灵活，怎么来呢？往下看。&lt;/p&gt;
&lt;p&gt;先梳
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mobile-debug</title>
    <link href="https://luoyefe.com/blog/2016/03/20/mobile-debug/"/>
    <id>https://luoyefe.com/blog/2016/03/20/mobile-debug/</id>
    <published>2016-03-20T05:53:44.000Z</published>
    <updated>2023-05-24T09:56:27.581Z</updated>
    
    <content type="html"><![CDATA[<h4 id="UC浏览器开发版（仅限安卓平台）"><a href="#UC浏览器开发版（仅限安卓平台）" class="headerlink" title="UC浏览器开发版（仅限安卓平台）"></a>UC浏览器开发版（仅限安卓平台）</h4><blockquote><p>超级强大，样式、脚本、资源，都可以调试，而且UC在移动端份额最大，针对性很高。</p></blockquote><p>1、 <a href="http://plus.uc.cn/document/webapp/doc5.html" target="_blank" rel="external">UC浏览器开发版</a></p><p>2、 官方的文档已经很详细了，包括两种调试方法，无线和有线。有线的调试很复杂，需要ADB工具，需要数据线，所以还是直接无线调试比较好。</p><p>3、 无线调试方法简记：</p><ul><li>安卓手机安装UC浏览器的开发版</li><li>保证手机和电脑在同一个局域网</li><li>记录下手机的ip地址，比如手机ip为 <code>10.69.5.150</code></li><li>在UC浏览器中打开需要调试的页面</li><li>电脑上打开 <code>10.69.5.150:9998</code> 即可开始开心的调试（和chrome控制台相差不大）</li></ul><h4 id="weinre本地服务器（全平台）"><a href="#weinre本地服务器（全平台）" class="headerlink" title="weinre本地服务器（全平台）"></a>weinre本地服务器（全平台）</h4><blockquote><p>weinre是专门的网页调试工具，它会在本地创建一个监听服务器，然后你需要在被调试页面插入一个它提供的js，然后weinre就可以监听到，然后即可开始调试。</p></blockquote><p>1、 <a href="http://people.apache.org/~pmuellr/weinre/" target="_blank" rel="external">weinre官网</a></p><p>2、 <a href="https://www.npmjs.com/package/weinre" target="_blank" rel="external">weinre npm</a></p><p>3、 调试步骤</p><ul><li>本地全局安装weinre</li></ul><pre><code>npm install weinre -g</code></pre><ul><li>启动本地 weinre 服务</li></ul><pre><code>weinre --boundHost 10.69.5.10 --httpPort 9090</code></pre><ul><li>参数解释</li></ul><pre><code>--boundHost 10.69.5.10 : 在你局域网的地址开启服务--httpPort 9090 : 本地服务器监听端口，不设置默认为8080</code></pre><ul><li><p>访问pc调试界面<br>如果启动服务时指定了ip和端口，访问此ip的指定端口即可。<br>本例地址为： <code>http://10.69.5.10:9090/</code></p></li><li><p>在调试页面插入监听脚本<br>在调试页面中插入下图中 Target Script 中的js，本例即 <code>http://10.69.5.10:9090/target/target-script-min.js#anonymous</code>。<br><code>#anonymous</code> 这个是页面标志，不同的标志在选取目标调试页时可以起到识别作用。<br><img src="./1.png" alt=""><br>假设页面代码如下<br>```html<br>&lt;!DOCTYPE html&gt;<br><html lang="en"><br><head><br>  <meta charset="UTF-8"><br>  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, minimal-ui"><br>  <meta name="format-detection" content="telephone=no"><br>  <title>Document</title><br></head></html></p><body></body></li></ul><h1 id="test">我是标题</h1><script type="text/javascript" src="http://10.69.5.10:9090/target/target-script-min.js"></script><p><br></p><pre><code>* 在终端访问此页面（apache可以直接有个本地http服务，nodejs需要自己启一个）```js// 在本地的2333端口开启服务，返回上面的测试页&#39;use strict&#39;;var express = require(&#39;express&#39;);var app = express();var pwd = __dirname;var port = 2333;app.get(&#39;/&#39;, function(req, res, next) {    res.sendFile(pwd + &#39;/test.html&#39;)})app.listen(2333);</code></pre><p>此时访问 <code>10.69.5.10::2333</code> 就可以看到上面测试页的内容<br><img src="./2.png" alt=""></p><p>然后在局域网的其它终端访问此页面都可以看到<br><img src="./3.png" alt=""></p><p>此时打开 <code>http://10.69.5.10:9090/client/</code> 你会看到<br><img src="./4.png" alt=""></p><p>选中 Targets 里的地址即可开始调试，如下图<br><img src="./5.png" alt=""><br><img src="./6.png" alt=""></p><p>4、其它</p><p>weinre最大的缺点就是不能调试js，虽然它实现了一个简单的js解释器，能在自己的控制台操作dom，但是本身页面里的调试信息没法在这捕获，遗憾。<br>但是它支持全平台，不管是wap还是app，只要是前端的html页面，都可以调试，遇到一些奇葩的兼容性问题很好找。<br>如果真心用这个工具，我们还可以在测试服务器搭一个代理服务，任何线上页面走这个代理服务器，都会被注入那段监听的js，测试机访问代理服务器吐出的地址，pc机访问统一的控制台页面，本地什么配置都不用，就可以开始真机调试。<br>再深入的话也可以深究一下weinre的js调试问题，那就圆满了。。。脑洞ing。。。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;UC浏览器开发版（仅限安卓平台）&quot;&gt;&lt;a href=&quot;#UC浏览器开发版（仅限安卓平台）&quot; class=&quot;headerlink&quot; title=&quot;UC浏览器开发版（仅限安卓平台）&quot;&gt;&lt;/a&gt;UC浏览器开发版（仅限安卓平台）&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;超
      
    
    </summary>
    
    
  </entry>
  
</feed>
